#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BasePS

#include "Basic.hpp"

#include "S_PlayerConnectionInfo_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AdvancedSessions_structs.hpp"
#include "S_UserProfile_structs.hpp"
#include "E_HeadsetType_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BasePS.BasePS_C
// 0x0040 (0x0360 - 0x0320)
class ABasePS_C : public APlayerState
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0320(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0328(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FS_PlayerConnectionInfo                PlayerConnection;                                  // 0x0330(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	struct FS_UserProfile                         UserInfo;                                          // 0x0338(0x0018)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, RepNotify, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<struct FBPUniqueNetId>                 BlockedPlayersList;                                // 0x0350(0x0010)(Edit, BlueprintVisible, Net)

public:
	void ExecuteUbergraph_BasePS(int32 EntryPoint);
	void SR_LoadHeadset(E_HeadsetType HeadsetType, int32 PlayerId_0);
	void SR_Update_Player_ConnectionInfo(const struct FS_PlayerConnectionInfo& Player_ConnectionInfo);
	void OC_Init();
	void ReceiveBeginPlay();
	void SR_Update_Player_UserProfile(const struct FS_UserProfile& Player_UserProfile);
	void Load_Player_ConnectionInfo(bool Client_ReadyStatus);
	void Load_Player_UserProfile();
	void OnRep_Player_ConnectionInfo_OR();
	void OnRep_Player_UserProfile_OR();
	void OnRep_UserInfo();
	void OnRep_PlayerConnection();
	void Load_Player_Headset();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BasePS_C">();
	}
	static class ABasePS_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABasePS_C>();
	}
};
static_assert(alignof(ABasePS_C) == 0x000008, "Wrong alignment on ABasePS_C");
static_assert(sizeof(ABasePS_C) == 0x000360, "Wrong size on ABasePS_C");
static_assert(offsetof(ABasePS_C, UberGraphFrame) == 0x000320, "Member 'ABasePS_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABasePS_C, DefaultSceneRoot) == 0x000328, "Member 'ABasePS_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABasePS_C, PlayerConnection) == 0x000330, "Member 'ABasePS_C::PlayerConnection' has a wrong offset!");
static_assert(offsetof(ABasePS_C, UserInfo) == 0x000338, "Member 'ABasePS_C::UserInfo' has a wrong offset!");
static_assert(offsetof(ABasePS_C, BlockedPlayersList) == 0x000350, "Member 'ABasePS_C::BlockedPlayersList' has a wrong offset!");

}

