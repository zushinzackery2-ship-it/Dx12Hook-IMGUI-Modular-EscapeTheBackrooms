#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BFL_PlatformUIData

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Backrooms_structs.hpp"


namespace SDK::Params
{

// Function BFL_PlatformUIData.BFL_PlatformUIData_C.GetRichImageText
// 0x0188 (0x0188 - 0x0000)
struct BFL_PlatformUIData_C_GetRichImageText final
{
public:
	class FName                                   InputName;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   RichText;                                          // 0x0010(0x0018)(Parm, OutParm)
	class FString                                 PlatformSuffix;                                    // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	EFancyInputDevice                             CallFunc_GetCurrentInputDevice_ReturnValue;        // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFancyInputDevice                             Temp_byte_Variable;                                // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetKeybindByInputName_Name;               // 0x0040(0x0018)()
	class FText                                   CallFunc_GetInputActionKeyName_Name;               // 0x0058(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x0070(0x0018)(ConstParm)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0098(0x0018)()
	class FString                                 CallFunc_Replace_ReturnValue;                      // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00C0(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0100(0x0018)()
	bool                                          CallFunc_IsOnAnySonyPlatform_ReturnValue;          // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0120(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0160(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0170(0x0018)()
};
static_assert(alignof(BFL_PlatformUIData_C_GetRichImageText) == 0x000008, "Wrong alignment on BFL_PlatformUIData_C_GetRichImageText");
static_assert(sizeof(BFL_PlatformUIData_C_GetRichImageText) == 0x000188, "Wrong size on BFL_PlatformUIData_C_GetRichImageText");
static_assert(offsetof(BFL_PlatformUIData_C_GetRichImageText, InputName) == 0x000000, "Member 'BFL_PlatformUIData_C_GetRichImageText::InputName' has a wrong offset!");
static_assert(offsetof(BFL_PlatformUIData_C_GetRichImageText, __WorldContext) == 0x000008, "Member 'BFL_PlatformUIData_C_GetRichImageText::__WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_PlatformUIData_C_GetRichImageText, RichText) == 0x000010, "Member 'BFL_PlatformUIData_C_GetRichImageText::RichText' has a wrong offset!");
static_assert(offsetof(BFL_PlatformUIData_C_GetRichImageText, PlatformSuffix) == 0x000028, "Member 'BFL_PlatformUIData_C_GetRichImageText::PlatformSuffix' has a wrong offset!");
static_assert(offsetof(BFL_PlatformUIData_C_GetRichImageText, CallFunc_GetCurrentInputDevice_ReturnValue) == 0x000038, "Member 'BFL_PlatformUIData_C_GetRichImageText::CallFunc_GetCurrentInputDevice_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_PlatformUIData_C_GetRichImageText, Temp_byte_Variable) == 0x000039, "Member 'BFL_PlatformUIData_C_GetRichImageText::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BFL_PlatformUIData_C_GetRichImageText, CallFunc_GetKeybindByInputName_Name) == 0x000040, "Member 'BFL_PlatformUIData_C_GetRichImageText::CallFunc_GetKeybindByInputName_Name' has a wrong offset!");
static_assert(offsetof(BFL_PlatformUIData_C_GetRichImageText, CallFunc_GetInputActionKeyName_Name) == 0x000058, "Member 'BFL_PlatformUIData_C_GetRichImageText::CallFunc_GetInputActionKeyName_Name' has a wrong offset!");
static_assert(offsetof(BFL_PlatformUIData_C_GetRichImageText, K2Node_Select_Default) == 0x000070, "Member 'BFL_PlatformUIData_C_GetRichImageText::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BFL_PlatformUIData_C_GetRichImageText, CallFunc_Conv_TextToString_ReturnValue) == 0x000088, "Member 'BFL_PlatformUIData_C_GetRichImageText::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_PlatformUIData_C_GetRichImageText, CallFunc_Conv_StringToText_ReturnValue) == 0x000098, "Member 'BFL_PlatformUIData_C_GetRichImageText::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_PlatformUIData_C_GetRichImageText, CallFunc_Replace_ReturnValue) == 0x0000B0, "Member 'BFL_PlatformUIData_C_GetRichImageText::CallFunc_Replace_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_PlatformUIData_C_GetRichImageText, K2Node_MakeStruct_FormatArgumentData) == 0x0000C0, "Member 'BFL_PlatformUIData_C_GetRichImageText::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BFL_PlatformUIData_C_GetRichImageText, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000100, "Member 'BFL_PlatformUIData_C_GetRichImageText::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BFL_PlatformUIData_C_GetRichImageText, CallFunc_IsOnAnySonyPlatform_ReturnValue) == 0x000118, "Member 'BFL_PlatformUIData_C_GetRichImageText::CallFunc_IsOnAnySonyPlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_PlatformUIData_C_GetRichImageText, K2Node_MakeStruct_FormatArgumentData_1) == 0x000120, "Member 'BFL_PlatformUIData_C_GetRichImageText::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BFL_PlatformUIData_C_GetRichImageText, K2Node_MakeArray_Array) == 0x000160, "Member 'BFL_PlatformUIData_C_GetRichImageText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BFL_PlatformUIData_C_GetRichImageText, CallFunc_Format_ReturnValue) == 0x000170, "Member 'BFL_PlatformUIData_C_GetRichImageText::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function BFL_PlatformUIData.BFL_PlatformUIData_C.GetInputActionKeyName
// 0x0148 (0x0148 - 0x0000)
struct BFL_PlatformUIData_C_GetInputActionKeyName final
{
public:
	class FName                                   ActionName;                                        // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Name_0;                                            // 0x0010(0x0018)(Parm, OutParm)
	struct FInputActionKeyMapping                 InputActionKeyMapping;                             // 0x0028(0x0028)(Edit, BlueprintVisible)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_1;        // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62[0x2];                                       // 0x0062(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Key_GetDisplayName_ReturnValue;           // 0x0078(0x0018)()
	EFancyInputDevice                             CallFunc_GetCurrentInputDevice_ReturnValue;        // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsConsoleBuild_ReturnValue;               // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0093(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UInputSettings*                         CallFunc_GetInputSettings_ReturnValue;             // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FInputActionKeyMapping>         CallFunc_GetActionMappingByName_OutMappings;       // 0x00A0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputActionKeyMapping                 CallFunc_Array_Get_Item;                           // 0x00B8(0x0028)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Key_IsMouseButton_ReturnValue;            // 0x00E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Key_IsKeyboardKey_ReturnValue;            // 0x00E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E5[0x3];                                       // 0x00E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputActionKeyMapping                 CallFunc_Array_Get_Item_1;                         // 0x00E8(0x0028)()
	class FText                                   CallFunc_Key_GetDisplayName_ReturnValue_1;         // 0x0110(0x0018)()
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_StartsWith_ReturnValue;                   // 0x0142(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BFL_PlatformUIData_C_GetInputActionKeyName) == 0x000008, "Wrong alignment on BFL_PlatformUIData_C_GetInputActionKeyName");
static_assert(sizeof(BFL_PlatformUIData_C_GetInputActionKeyName) == 0x000148, "Wrong size on BFL_PlatformUIData_C_GetInputActionKeyName");
static_assert(offsetof(BFL_PlatformUIData_C_GetInputActionKeyName, ActionName) == 0x000000, "Member 'BFL_PlatformUIData_C_GetInputActionKeyName::ActionName' has a wrong offset!");
static_assert(offsetof(BFL_PlatformUIData_C_GetInputActionKeyName, __WorldContext) == 0x000008, "Member 'BFL_PlatformUIData_C_GetInputActionKeyName::__WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_PlatformUIData_C_GetInputActionKeyName, Name_0) == 0x000010, "Member 'BFL_PlatformUIData_C_GetInputActionKeyName::Name_0' has a wrong offset!");
static_assert(offsetof(BFL_PlatformUIData_C_GetInputActionKeyName, InputActionKeyMapping) == 0x000028, "Member 'BFL_PlatformUIData_C_GetInputActionKeyName::InputActionKeyMapping' has a wrong offset!");
static_assert(offsetof(BFL_PlatformUIData_C_GetInputActionKeyName, Temp_int_Loop_Counter_Variable) == 0x000050, "Member 'BFL_PlatformUIData_C_GetInputActionKeyName::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BFL_PlatformUIData_C_GetInputActionKeyName, CallFunc_Add_IntInt_ReturnValue) == 0x000054, "Member 'BFL_PlatformUIData_C_GetInputActionKeyName::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_PlatformUIData_C_GetInputActionKeyName, Temp_bool_True_if_break_was_hit_Variable) == 0x000058, "Member 'BFL_PlatformUIData_C_GetInputActionKeyName::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BFL_PlatformUIData_C_GetInputActionKeyName, Temp_int_Array_Index_Variable) == 0x00005C, "Member 'BFL_PlatformUIData_C_GetInputActionKeyName::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BFL_PlatformUIData_C_GetInputActionKeyName, CallFunc_Not_PreBool_ReturnValue) == 0x000060, "Member 'BFL_PlatformUIData_C_GetInputActionKeyName::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_PlatformUIData_C_GetInputActionKeyName, Temp_bool_True_if_break_was_hit_Variable_1) == 0x000061, "Member 'BFL_PlatformUIData_C_GetInputActionKeyName::Temp_bool_True_if_break_was_hit_Variable_1' has a wrong offset!");
static_assert(offsetof(BFL_PlatformUIData_C_GetInputActionKeyName, Temp_int_Array_Index_Variable_1) == 0x000064, "Member 'BFL_PlatformUIData_C_GetInputActionKeyName::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BFL_PlatformUIData_C_GetInputActionKeyName, CallFunc_Not_PreBool_ReturnValue_1) == 0x000068, "Member 'BFL_PlatformUIData_C_GetInputActionKeyName::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BFL_PlatformUIData_C_GetInputActionKeyName, Temp_int_Loop_Counter_Variable_1) == 0x00006C, "Member 'BFL_PlatformUIData_C_GetInputActionKeyName::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BFL_PlatformUIData_C_GetInputActionKeyName, CallFunc_Add_IntInt_ReturnValue_1) == 0x000070, "Member 'BFL_PlatformUIData_C_GetInputActionKeyName::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BFL_PlatformUIData_C_GetInputActionKeyName, CallFunc_Key_GetDisplayName_ReturnValue) == 0x000078, "Member 'BFL_PlatformUIData_C_GetInputActionKeyName::CallFunc_Key_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_PlatformUIData_C_GetInputActionKeyName, CallFunc_GetCurrentInputDevice_ReturnValue) == 0x000090, "Member 'BFL_PlatformUIData_C_GetInputActionKeyName::CallFunc_GetCurrentInputDevice_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_PlatformUIData_C_GetInputActionKeyName, CallFunc_IsConsoleBuild_ReturnValue) == 0x000091, "Member 'BFL_PlatformUIData_C_GetInputActionKeyName::CallFunc_IsConsoleBuild_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_PlatformUIData_C_GetInputActionKeyName, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000092, "Member 'BFL_PlatformUIData_C_GetInputActionKeyName::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_PlatformUIData_C_GetInputActionKeyName, CallFunc_BooleanOR_ReturnValue) == 0x000093, "Member 'BFL_PlatformUIData_C_GetInputActionKeyName::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_PlatformUIData_C_GetInputActionKeyName, CallFunc_GetInputSettings_ReturnValue) == 0x000098, "Member 'BFL_PlatformUIData_C_GetInputActionKeyName::CallFunc_GetInputSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_PlatformUIData_C_GetInputActionKeyName, CallFunc_GetActionMappingByName_OutMappings) == 0x0000A0, "Member 'BFL_PlatformUIData_C_GetInputActionKeyName::CallFunc_GetActionMappingByName_OutMappings' has a wrong offset!");
static_assert(offsetof(BFL_PlatformUIData_C_GetInputActionKeyName, CallFunc_Array_Length_ReturnValue) == 0x0000B0, "Member 'BFL_PlatformUIData_C_GetInputActionKeyName::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_PlatformUIData_C_GetInputActionKeyName, CallFunc_Array_Get_Item) == 0x0000B8, "Member 'BFL_PlatformUIData_C_GetInputActionKeyName::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BFL_PlatformUIData_C_GetInputActionKeyName, CallFunc_Less_IntInt_ReturnValue) == 0x0000E0, "Member 'BFL_PlatformUIData_C_GetInputActionKeyName::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_PlatformUIData_C_GetInputActionKeyName, CallFunc_BooleanAND_ReturnValue) == 0x0000E1, "Member 'BFL_PlatformUIData_C_GetInputActionKeyName::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_PlatformUIData_C_GetInputActionKeyName, CallFunc_Key_IsMouseButton_ReturnValue) == 0x0000E2, "Member 'BFL_PlatformUIData_C_GetInputActionKeyName::CallFunc_Key_IsMouseButton_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_PlatformUIData_C_GetInputActionKeyName, CallFunc_Key_IsKeyboardKey_ReturnValue) == 0x0000E3, "Member 'BFL_PlatformUIData_C_GetInputActionKeyName::CallFunc_Key_IsKeyboardKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_PlatformUIData_C_GetInputActionKeyName, CallFunc_BooleanOR_ReturnValue_1) == 0x0000E4, "Member 'BFL_PlatformUIData_C_GetInputActionKeyName::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BFL_PlatformUIData_C_GetInputActionKeyName, CallFunc_Array_Get_Item_1) == 0x0000E8, "Member 'BFL_PlatformUIData_C_GetInputActionKeyName::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BFL_PlatformUIData_C_GetInputActionKeyName, CallFunc_Key_GetDisplayName_ReturnValue_1) == 0x000110, "Member 'BFL_PlatformUIData_C_GetInputActionKeyName::CallFunc_Key_GetDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BFL_PlatformUIData_C_GetInputActionKeyName, CallFunc_Array_Length_ReturnValue_1) == 0x000128, "Member 'BFL_PlatformUIData_C_GetInputActionKeyName::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BFL_PlatformUIData_C_GetInputActionKeyName, CallFunc_Conv_TextToString_ReturnValue) == 0x000130, "Member 'BFL_PlatformUIData_C_GetInputActionKeyName::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_PlatformUIData_C_GetInputActionKeyName, CallFunc_Less_IntInt_ReturnValue_1) == 0x000140, "Member 'BFL_PlatformUIData_C_GetInputActionKeyName::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BFL_PlatformUIData_C_GetInputActionKeyName, CallFunc_BooleanAND_ReturnValue_1) == 0x000141, "Member 'BFL_PlatformUIData_C_GetInputActionKeyName::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BFL_PlatformUIData_C_GetInputActionKeyName, CallFunc_StartsWith_ReturnValue) == 0x000142, "Member 'BFL_PlatformUIData_C_GetInputActionKeyName::CallFunc_StartsWith_ReturnValue' has a wrong offset!");

// Function BFL_PlatformUIData.BFL_PlatformUIData_C.GetKeybindByInputName
// 0x0030 (0x0030 - 0x0000)
struct BFL_PlatformUIData_C_GetKeybindByInputName final
{
public:
	class FName                                   InputName;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Name_0;                                            // 0x0010(0x0018)(Parm, OutParm)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BFL_PlatformUIData_C_GetKeybindByInputName) == 0x000008, "Wrong alignment on BFL_PlatformUIData_C_GetKeybindByInputName");
static_assert(sizeof(BFL_PlatformUIData_C_GetKeybindByInputName) == 0x000030, "Wrong size on BFL_PlatformUIData_C_GetKeybindByInputName");
static_assert(offsetof(BFL_PlatformUIData_C_GetKeybindByInputName, InputName) == 0x000000, "Member 'BFL_PlatformUIData_C_GetKeybindByInputName::InputName' has a wrong offset!");
static_assert(offsetof(BFL_PlatformUIData_C_GetKeybindByInputName, __WorldContext) == 0x000008, "Member 'BFL_PlatformUIData_C_GetKeybindByInputName::__WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_PlatformUIData_C_GetKeybindByInputName, Name_0) == 0x000010, "Member 'BFL_PlatformUIData_C_GetKeybindByInputName::Name_0' has a wrong offset!");
static_assert(offsetof(BFL_PlatformUIData_C_GetKeybindByInputName, K2Node_SwitchName_CmpSuccess) == 0x000028, "Member 'BFL_PlatformUIData_C_GetKeybindByInputName::K2Node_SwitchName_CmpSuccess' has a wrong offset!");

}

