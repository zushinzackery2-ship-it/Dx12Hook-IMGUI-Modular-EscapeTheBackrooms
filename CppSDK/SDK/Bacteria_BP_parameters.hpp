#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Bacteria_BP

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "HE_LookAtLocationSeq_structs.hpp"
#include "HE_LookAtLocation_structs.hpp"


namespace SDK::Params
{

// Function Bacteria_BP.Bacteria_BP_C.ExecuteUbergraph_Bacteria_BP
// 0x01E0 (0x01E0 - 0x0000)
struct Bacteria_BP_C_ExecuteUbergraph_Bacteria_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0008(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABPCharacter_Demo_C*                    CallFunc_GetClosestPlayer_Closest;                 // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetValueAsBool_ReturnValue;               // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPCharacter_Demo_C*                    K2Node_CustomEvent_Player;                         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          CallFunc_GetAIController_ReturnValue;              // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABacteria_AIC_C*                        K2Node_DynamicCast_AsBacteria_AIC;                 // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAtLocation_ReturnValue;         // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHE_LookAtLocationSeq                  K2Node_MakeStruct_HE_LookAtLocationSeq;            // 0x00AC(0x0018)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FHE_LookAtLocationSeq>          K2Node_MakeArray_Array;                            // 0x00C8(0x0010)(ReferenceParm)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue_1;                // 0x00D8(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FHE_LookAtLocation                     K2Node_MakeStruct_HE_LookAtLocation;               // 0x00E0(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x3];                                       // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x00FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0108(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0118(0x0008)(NoDestructor, HasGetValueTypeHash)
	EAudioComponentPlayState                      K2Node_CustomEvent_PlayState;                      // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0122(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_123[0x5];                                      // 0x0123(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue_2;                // 0x0128(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsTimerActiveHandle_ReturnValue;       // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0138(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0148(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_155[0x3];                                      // 0x0155(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0158(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Bacteria_BP_C_ExecuteUbergraph_Bacteria_BP) == 0x000008, "Wrong alignment on Bacteria_BP_C_ExecuteUbergraph_Bacteria_BP");
static_assert(sizeof(Bacteria_BP_C_ExecuteUbergraph_Bacteria_BP) == 0x0001E0, "Wrong size on Bacteria_BP_C_ExecuteUbergraph_Bacteria_BP");
static_assert(offsetof(Bacteria_BP_C_ExecuteUbergraph_Bacteria_BP, EntryPoint) == 0x000000, "Member 'Bacteria_BP_C_ExecuteUbergraph_Bacteria_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_ExecuteUbergraph_Bacteria_BP, CallFunc_K2_SetTimer_ReturnValue) == 0x000008, "Member 'Bacteria_BP_C_ExecuteUbergraph_Bacteria_BP::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_ExecuteUbergraph_Bacteria_BP, CallFunc_IsPlaying_ReturnValue) == 0x000010, "Member 'Bacteria_BP_C_ExecuteUbergraph_Bacteria_BP::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_ExecuteUbergraph_Bacteria_BP, CallFunc_MakeLiteralName_ReturnValue) == 0x000014, "Member 'Bacteria_BP_C_ExecuteUbergraph_Bacteria_BP::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_ExecuteUbergraph_Bacteria_BP, CallFunc_GetBlackboard_ReturnValue) == 0x000020, "Member 'Bacteria_BP_C_ExecuteUbergraph_Bacteria_BP::CallFunc_GetBlackboard_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_ExecuteUbergraph_Bacteria_BP, CallFunc_GetClosestPlayer_Closest) == 0x000028, "Member 'Bacteria_BP_C_ExecuteUbergraph_Bacteria_BP::CallFunc_GetClosestPlayer_Closest' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_ExecuteUbergraph_Bacteria_BP, CallFunc_GetValueAsBool_ReturnValue) == 0x000030, "Member 'Bacteria_BP_C_ExecuteUbergraph_Bacteria_BP::CallFunc_GetValueAsBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_ExecuteUbergraph_Bacteria_BP, CallFunc_IsValid_ReturnValue) == 0x000031, "Member 'Bacteria_BP_C_ExecuteUbergraph_Bacteria_BP::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_ExecuteUbergraph_Bacteria_BP, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000034, "Member 'Bacteria_BP_C_ExecuteUbergraph_Bacteria_BP::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_ExecuteUbergraph_Bacteria_BP, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000040, "Member 'Bacteria_BP_C_ExecuteUbergraph_Bacteria_BP::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_ExecuteUbergraph_Bacteria_BP, K2Node_CustomEvent_Player) == 0x000050, "Member 'Bacteria_BP_C_ExecuteUbergraph_Bacteria_BP::K2Node_CustomEvent_Player' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_ExecuteUbergraph_Bacteria_BP, CallFunc_FindLookAtRotation_ReturnValue) == 0x000058, "Member 'Bacteria_BP_C_ExecuteUbergraph_Bacteria_BP::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_ExecuteUbergraph_Bacteria_BP, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000064, "Member 'Bacteria_BP_C_ExecuteUbergraph_Bacteria_BP::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_ExecuteUbergraph_Bacteria_BP, CallFunc_GetAIController_ReturnValue) == 0x000068, "Member 'Bacteria_BP_C_ExecuteUbergraph_Bacteria_BP::CallFunc_GetAIController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_ExecuteUbergraph_Bacteria_BP, K2Node_DynamicCast_AsBacteria_AIC) == 0x000070, "Member 'Bacteria_BP_C_ExecuteUbergraph_Bacteria_BP::K2Node_DynamicCast_AsBacteria_AIC' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_ExecuteUbergraph_Bacteria_BP, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'Bacteria_BP_C_ExecuteUbergraph_Bacteria_BP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_ExecuteUbergraph_Bacteria_BP, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00007C, "Member 'Bacteria_BP_C_ExecuteUbergraph_Bacteria_BP::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_ExecuteUbergraph_Bacteria_BP, CallFunc_SpawnSoundAtLocation_ReturnValue) == 0x000088, "Member 'Bacteria_BP_C_ExecuteUbergraph_Bacteria_BP::CallFunc_SpawnSoundAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_ExecuteUbergraph_Bacteria_BP, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000090, "Member 'Bacteria_BP_C_ExecuteUbergraph_Bacteria_BP::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_ExecuteUbergraph_Bacteria_BP, CallFunc_Add_VectorVector_ReturnValue) == 0x00009C, "Member 'Bacteria_BP_C_ExecuteUbergraph_Bacteria_BP::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_ExecuteUbergraph_Bacteria_BP, CallFunc_HasAuthority_ReturnValue) == 0x0000A8, "Member 'Bacteria_BP_C_ExecuteUbergraph_Bacteria_BP::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_ExecuteUbergraph_Bacteria_BP, K2Node_MakeStruct_HE_LookAtLocationSeq) == 0x0000AC, "Member 'Bacteria_BP_C_ExecuteUbergraph_Bacteria_BP::K2Node_MakeStruct_HE_LookAtLocationSeq' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_ExecuteUbergraph_Bacteria_BP, K2Node_MakeArray_Array) == 0x0000C8, "Member 'Bacteria_BP_C_ExecuteUbergraph_Bacteria_BP::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_ExecuteUbergraph_Bacteria_BP, CallFunc_K2_SetTimer_ReturnValue_1) == 0x0000D8, "Member 'Bacteria_BP_C_ExecuteUbergraph_Bacteria_BP::CallFunc_K2_SetTimer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_ExecuteUbergraph_Bacteria_BP, K2Node_MakeStruct_HE_LookAtLocation) == 0x0000E0, "Member 'Bacteria_BP_C_ExecuteUbergraph_Bacteria_BP::K2Node_MakeStruct_HE_LookAtLocation' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_ExecuteUbergraph_Bacteria_BP, CallFunc_HasAuthority_ReturnValue_1) == 0x0000F8, "Member 'Bacteria_BP_C_ExecuteUbergraph_Bacteria_BP::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_ExecuteUbergraph_Bacteria_BP, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x0000FC, "Member 'Bacteria_BP_C_ExecuteUbergraph_Bacteria_BP::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_ExecuteUbergraph_Bacteria_BP, K2Node_CreateDelegate_OutputDelegate) == 0x000108, "Member 'Bacteria_BP_C_ExecuteUbergraph_Bacteria_BP::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_ExecuteUbergraph_Bacteria_BP, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000118, "Member 'Bacteria_BP_C_ExecuteUbergraph_Bacteria_BP::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_ExecuteUbergraph_Bacteria_BP, K2Node_CustomEvent_PlayState) == 0x000120, "Member 'Bacteria_BP_C_ExecuteUbergraph_Bacteria_BP::K2Node_CustomEvent_PlayState' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_ExecuteUbergraph_Bacteria_BP, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000121, "Member 'Bacteria_BP_C_ExecuteUbergraph_Bacteria_BP::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_ExecuteUbergraph_Bacteria_BP, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000122, "Member 'Bacteria_BP_C_ExecuteUbergraph_Bacteria_BP::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_ExecuteUbergraph_Bacteria_BP, CallFunc_K2_SetTimer_ReturnValue_2) == 0x000128, "Member 'Bacteria_BP_C_ExecuteUbergraph_Bacteria_BP::CallFunc_K2_SetTimer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_ExecuteUbergraph_Bacteria_BP, CallFunc_K2_IsTimerActiveHandle_ReturnValue) == 0x000130, "Member 'Bacteria_BP_C_ExecuteUbergraph_Bacteria_BP::CallFunc_K2_IsTimerActiveHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_ExecuteUbergraph_Bacteria_BP, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000138, "Member 'Bacteria_BP_C_ExecuteUbergraph_Bacteria_BP::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_ExecuteUbergraph_Bacteria_BP, K2Node_ComponentBoundEvent_OtherActor) == 0x000140, "Member 'Bacteria_BP_C_ExecuteUbergraph_Bacteria_BP::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_ExecuteUbergraph_Bacteria_BP, K2Node_ComponentBoundEvent_OtherComp) == 0x000148, "Member 'Bacteria_BP_C_ExecuteUbergraph_Bacteria_BP::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_ExecuteUbergraph_Bacteria_BP, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000150, "Member 'Bacteria_BP_C_ExecuteUbergraph_Bacteria_BP::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_ExecuteUbergraph_Bacteria_BP, K2Node_ComponentBoundEvent_bFromSweep) == 0x000154, "Member 'Bacteria_BP_C_ExecuteUbergraph_Bacteria_BP::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_ExecuteUbergraph_Bacteria_BP, K2Node_ComponentBoundEvent_SweepResult) == 0x000158, "Member 'Bacteria_BP_C_ExecuteUbergraph_Bacteria_BP::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");

// Function Bacteria_BP.Bacteria_BP_C.BndEvt__Bacteria_BP_KillPlayer_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct Bacteria_BP_C_BndEvt__Bacteria_BP_KillPlayer_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Bacteria_BP_C_BndEvt__Bacteria_BP_KillPlayer_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on Bacteria_BP_C_BndEvt__Bacteria_BP_KillPlayer_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(Bacteria_BP_C_BndEvt__Bacteria_BP_KillPlayer_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on Bacteria_BP_C_BndEvt__Bacteria_BP_KillPlayer_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(Bacteria_BP_C_BndEvt__Bacteria_BP_KillPlayer_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'Bacteria_BP_C_BndEvt__Bacteria_BP_KillPlayer_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_BndEvt__Bacteria_BP_KillPlayer_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'Bacteria_BP_C_BndEvt__Bacteria_BP_KillPlayer_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_BndEvt__Bacteria_BP_KillPlayer_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'Bacteria_BP_C_BndEvt__Bacteria_BP_KillPlayer_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_BndEvt__Bacteria_BP_KillPlayer_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'Bacteria_BP_C_BndEvt__Bacteria_BP_KillPlayer_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_BndEvt__Bacteria_BP_KillPlayer_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'Bacteria_BP_C_BndEvt__Bacteria_BP_KillPlayer_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_BndEvt__Bacteria_BP_KillPlayer_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'Bacteria_BP_C_BndEvt__Bacteria_BP_KillPlayer_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function Bacteria_BP.Bacteria_BP_C.OnStateChanged
// 0x0001 (0x0001 - 0x0000)
struct Bacteria_BP_C_OnStateChanged final
{
public:
	EAudioComponentPlayState                      PlayState;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Bacteria_BP_C_OnStateChanged) == 0x000001, "Wrong alignment on Bacteria_BP_C_OnStateChanged");
static_assert(sizeof(Bacteria_BP_C_OnStateChanged) == 0x000001, "Wrong size on Bacteria_BP_C_OnStateChanged");
static_assert(offsetof(Bacteria_BP_C_OnStateChanged, PlayState) == 0x000000, "Member 'Bacteria_BP_C_OnStateChanged::PlayState' has a wrong offset!");

// Function Bacteria_BP.Bacteria_BP_C.AttackPlayer
// 0x0008 (0x0008 - 0x0000)
struct Bacteria_BP_C_AttackPlayer final
{
public:
	class ABPCharacter_Demo_C*                    Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Bacteria_BP_C_AttackPlayer) == 0x000008, "Wrong alignment on Bacteria_BP_C_AttackPlayer");
static_assert(sizeof(Bacteria_BP_C_AttackPlayer) == 0x000008, "Wrong size on Bacteria_BP_C_AttackPlayer");
static_assert(offsetof(Bacteria_BP_C_AttackPlayer, Player) == 0x000000, "Member 'Bacteria_BP_C_AttackPlayer::Player' has a wrong offset!");

// Function Bacteria_BP.Bacteria_BP_C.CalcLookAtRotation
// 0x0010 (0x0010 - 0x0000)
struct Bacteria_BP_C_CalcLookAtRotation final
{
public:
	class AActor*                                 MyActor;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Target;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Bacteria_BP_C_CalcLookAtRotation) == 0x000008, "Wrong alignment on Bacteria_BP_C_CalcLookAtRotation");
static_assert(sizeof(Bacteria_BP_C_CalcLookAtRotation) == 0x000010, "Wrong size on Bacteria_BP_C_CalcLookAtRotation");
static_assert(offsetof(Bacteria_BP_C_CalcLookAtRotation, MyActor) == 0x000000, "Member 'Bacteria_BP_C_CalcLookAtRotation::MyActor' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_CalcLookAtRotation, Target) == 0x000008, "Member 'Bacteria_BP_C_CalcLookAtRotation::Target' has a wrong offset!");

// Function Bacteria_BP.Bacteria_BP_C.SetNewSpeed
// 0x0038 (0x0038 - 0x0000)
struct Bacteria_BP_C_SetNewSpeed final
{
public:
	int32                                         Count;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NewSpeed;                                          // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNumPlayers_ReturnValue;                // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsStandalone_ReturnValue;                 // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B[0x5];                                       // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          CallFunc_GetAIController_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABacteria_AIC_C*                        K2Node_DynamicCast_AsBacteria_AIC;                 // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Bacteria_BP_C_SetNewSpeed) == 0x000008, "Wrong alignment on Bacteria_BP_C_SetNewSpeed");
static_assert(sizeof(Bacteria_BP_C_SetNewSpeed) == 0x000038, "Wrong size on Bacteria_BP_C_SetNewSpeed");
static_assert(offsetof(Bacteria_BP_C_SetNewSpeed, Count) == 0x000000, "Member 'Bacteria_BP_C_SetNewSpeed::Count' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_SetNewSpeed, NewSpeed) == 0x000004, "Member 'Bacteria_BP_C_SetNewSpeed::NewSpeed' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_SetNewSpeed, CallFunc_GetGameMode_ReturnValue) == 0x000008, "Member 'Bacteria_BP_C_SetNewSpeed::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_SetNewSpeed, K2Node_SwitchInteger_CmpSuccess) == 0x000010, "Member 'Bacteria_BP_C_SetNewSpeed::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_SetNewSpeed, CallFunc_GetNumPlayers_ReturnValue) == 0x000014, "Member 'Bacteria_BP_C_SetNewSpeed::CallFunc_GetNumPlayers_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_SetNewSpeed, CallFunc_Greater_IntInt_ReturnValue) == 0x000018, "Member 'Bacteria_BP_C_SetNewSpeed::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_SetNewSpeed, CallFunc_Less_IntInt_ReturnValue) == 0x000019, "Member 'Bacteria_BP_C_SetNewSpeed::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_SetNewSpeed, CallFunc_IsStandalone_ReturnValue) == 0x00001A, "Member 'Bacteria_BP_C_SetNewSpeed::CallFunc_IsStandalone_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_SetNewSpeed, CallFunc_GetAIController_ReturnValue) == 0x000020, "Member 'Bacteria_BP_C_SetNewSpeed::CallFunc_GetAIController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_SetNewSpeed, K2Node_DynamicCast_AsBacteria_AIC) == 0x000028, "Member 'Bacteria_BP_C_SetNewSpeed::K2Node_DynamicCast_AsBacteria_AIC' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_SetNewSpeed, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'Bacteria_BP_C_SetNewSpeed::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function Bacteria_BP.Bacteria_BP_C.UpdateSpeed
// 0x0048 (0x0048 - 0x0000)
struct Bacteria_BP_C_UpdateSpeed final
{
public:
	float                                         CallFunc_SetNewSpeed_NewSpeed;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          CallFunc_GetAIController_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAIController*                          CallFunc_GetAIController_ReturnValue_1;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABacteria_AIC_C*                        K2Node_DynamicCast_AsBacteria_AIC;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABacteria_AIC_C*                        K2Node_DynamicCast_AsBacteria_AIC_1;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetNewSpeed_NewSpeed_1;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetNewSpeed_NewSpeed_2;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Bacteria_BP_C_UpdateSpeed) == 0x000008, "Wrong alignment on Bacteria_BP_C_UpdateSpeed");
static_assert(sizeof(Bacteria_BP_C_UpdateSpeed) == 0x000048, "Wrong size on Bacteria_BP_C_UpdateSpeed");
static_assert(offsetof(Bacteria_BP_C_UpdateSpeed, CallFunc_SetNewSpeed_NewSpeed) == 0x000000, "Member 'Bacteria_BP_C_UpdateSpeed::CallFunc_SetNewSpeed_NewSpeed' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_UpdateSpeed, CallFunc_GetAIController_ReturnValue) == 0x000008, "Member 'Bacteria_BP_C_UpdateSpeed::CallFunc_GetAIController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_UpdateSpeed, CallFunc_GetAIController_ReturnValue_1) == 0x000010, "Member 'Bacteria_BP_C_UpdateSpeed::CallFunc_GetAIController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_UpdateSpeed, K2Node_DynamicCast_AsBacteria_AIC) == 0x000018, "Member 'Bacteria_BP_C_UpdateSpeed::K2Node_DynamicCast_AsBacteria_AIC' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_UpdateSpeed, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'Bacteria_BP_C_UpdateSpeed::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_UpdateSpeed, K2Node_DynamicCast_AsBacteria_AIC_1) == 0x000028, "Member 'Bacteria_BP_C_UpdateSpeed::K2Node_DynamicCast_AsBacteria_AIC_1' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_UpdateSpeed, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'Bacteria_BP_C_UpdateSpeed::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_UpdateSpeed, CallFunc_SetNewSpeed_NewSpeed_1) == 0x000034, "Member 'Bacteria_BP_C_UpdateSpeed::CallFunc_SetNewSpeed_NewSpeed_1' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_UpdateSpeed, Temp_int_Variable) == 0x000038, "Member 'Bacteria_BP_C_UpdateSpeed::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_UpdateSpeed, CallFunc_SetNewSpeed_NewSpeed_2) == 0x00003C, "Member 'Bacteria_BP_C_UpdateSpeed::CallFunc_SetNewSpeed_NewSpeed_2' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_UpdateSpeed, K2Node_SwitchInteger_CmpSuccess) == 0x000040, "Member 'Bacteria_BP_C_UpdateSpeed::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_UpdateSpeed, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'Bacteria_BP_C_UpdateSpeed::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function Bacteria_BP.Bacteria_BP_C.GetClosestPlayer
// 0x0050 (0x0050 - 0x0000)
struct Bacteria_BP_C_GetClosestPlayer final
{
public:
	class ABPCharacter_Demo_C*                    Closest;                                           // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABPCharacter_Demo_C*                    ActorToReturn;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ClosestDistance;                                   // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABPCharacter_Demo_C*>            CallFunc_GetAllActorsOfClass_OutActors;            // 0x0020(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPCharacter_Demo_C*                    CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDistanceTo_ReturnValue;                // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Bacteria_BP_C_GetClosestPlayer) == 0x000008, "Wrong alignment on Bacteria_BP_C_GetClosestPlayer");
static_assert(sizeof(Bacteria_BP_C_GetClosestPlayer) == 0x000050, "Wrong size on Bacteria_BP_C_GetClosestPlayer");
static_assert(offsetof(Bacteria_BP_C_GetClosestPlayer, Closest) == 0x000000, "Member 'Bacteria_BP_C_GetClosestPlayer::Closest' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_GetClosestPlayer, ActorToReturn) == 0x000008, "Member 'Bacteria_BP_C_GetClosestPlayer::ActorToReturn' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_GetClosestPlayer, ClosestDistance) == 0x000010, "Member 'Bacteria_BP_C_GetClosestPlayer::ClosestDistance' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_GetClosestPlayer, Temp_int_Array_Index_Variable) == 0x000014, "Member 'Bacteria_BP_C_GetClosestPlayer::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_GetClosestPlayer, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'Bacteria_BP_C_GetClosestPlayer::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_GetClosestPlayer, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'Bacteria_BP_C_GetClosestPlayer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_GetClosestPlayer, CallFunc_GetAllActorsOfClass_OutActors) == 0x000020, "Member 'Bacteria_BP_C_GetClosestPlayer::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_GetClosestPlayer, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'Bacteria_BP_C_GetClosestPlayer::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_GetClosestPlayer, CallFunc_Array_Get_Item) == 0x000038, "Member 'Bacteria_BP_C_GetClosestPlayer::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_GetClosestPlayer, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'Bacteria_BP_C_GetClosestPlayer::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_GetClosestPlayer, CallFunc_GetDistanceTo_ReturnValue) == 0x000044, "Member 'Bacteria_BP_C_GetClosestPlayer::CallFunc_GetDistanceTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_GetClosestPlayer, CallFunc_Less_FloatFloat_ReturnValue) == 0x000048, "Member 'Bacteria_BP_C_GetClosestPlayer::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");

// Function Bacteria_BP.Bacteria_BP_C.LookAtEntity
// 0x0048 (0x0048 - 0x0000)
struct Bacteria_BP_C_LookAtEntity final
{
public:
	class ABPCharacter_Demo_C*                    Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Bacteria_BP_C_LookAtEntity) == 0x000008, "Wrong alignment on Bacteria_BP_C_LookAtEntity");
static_assert(sizeof(Bacteria_BP_C_LookAtEntity) == 0x000048, "Wrong size on Bacteria_BP_C_LookAtEntity");
static_assert(offsetof(Bacteria_BP_C_LookAtEntity, Target) == 0x000000, "Member 'Bacteria_BP_C_LookAtEntity::Target' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_LookAtEntity, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000008, "Member 'Bacteria_BP_C_LookAtEntity::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_LookAtEntity, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000014, "Member 'Bacteria_BP_C_LookAtEntity::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_LookAtEntity, CallFunc_FindLookAtRotation_ReturnValue) == 0x000020, "Member 'Bacteria_BP_C_LookAtEntity::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_LookAtEntity, CallFunc_BreakRotator_Roll) == 0x00002C, "Member 'Bacteria_BP_C_LookAtEntity::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_LookAtEntity, CallFunc_BreakRotator_Pitch) == 0x000030, "Member 'Bacteria_BP_C_LookAtEntity::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_LookAtEntity, CallFunc_BreakRotator_Yaw) == 0x000034, "Member 'Bacteria_BP_C_LookAtEntity::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_LookAtEntity, CallFunc_MakeRotator_ReturnValue) == 0x000038, "Member 'Bacteria_BP_C_LookAtEntity::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_LookAtEntity, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000044, "Member 'Bacteria_BP_C_LookAtEntity::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");

// Function Bacteria_BP.Bacteria_BP_C.ResetPosition
// 0x008C (0x008C - 0x0000)
struct Bacteria_BP_C_ResetPosition final
{
public:
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x0000(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Bacteria_BP_C_ResetPosition) == 0x000004, "Wrong alignment on Bacteria_BP_C_ResetPosition");
static_assert(sizeof(Bacteria_BP_C_ResetPosition) == 0x00008C, "Wrong size on Bacteria_BP_C_ResetPosition");
static_assert(offsetof(Bacteria_BP_C_ResetPosition, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x000000, "Member 'Bacteria_BP_C_ResetPosition::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_ResetPosition, CallFunc_K2_SetActorLocation_ReturnValue) == 0x000088, "Member 'Bacteria_BP_C_ResetPosition::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");

// Function Bacteria_BP.Bacteria_BP_C.CheckShakeTime
// 0x0014 (0x0014 - 0x0000)
struct Bacteria_BP_C_CheckShakeTime final
{
public:
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Bacteria_BP_C_CheckShakeTime) == 0x000004, "Wrong alignment on Bacteria_BP_C_CheckShakeTime");
static_assert(sizeof(Bacteria_BP_C_CheckShakeTime) == 0x000014, "Wrong size on Bacteria_BP_C_CheckShakeTime");
static_assert(offsetof(Bacteria_BP_C_CheckShakeTime, CallFunc_Array_Contains_ReturnValue) == 0x000000, "Member 'Bacteria_BP_C_CheckShakeTime::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_CheckShakeTime, CallFunc_Add_FloatFloat_ReturnValue) == 0x000004, "Member 'Bacteria_BP_C_CheckShakeTime::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_CheckShakeTime, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000008, "Member 'Bacteria_BP_C_CheckShakeTime::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");

// Function Bacteria_BP.Bacteria_BP_C.CanSeePlayer
// 0x0158 (0x0158 - 0x0000)
struct Bacteria_BP_C_CanSeePlayer final
{
public:
	class ABPCharacter_Demo_C*                    Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanSee;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Ignored;                                           // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABPCharacter_Demo_C*>            CallFunc_GetAllActorsOfClass_OutActors;            // 0x0030(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x004C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00D6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D7[0x1];                                       // 0x00D7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0104(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0120(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x013C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0148(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Bacteria_BP_C_CanSeePlayer) == 0x000008, "Wrong alignment on Bacteria_BP_C_CanSeePlayer");
static_assert(sizeof(Bacteria_BP_C_CanSeePlayer) == 0x000158, "Wrong size on Bacteria_BP_C_CanSeePlayer");
static_assert(offsetof(Bacteria_BP_C_CanSeePlayer, Target) == 0x000000, "Member 'Bacteria_BP_C_CanSeePlayer::Target' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_CanSeePlayer, CanSee) == 0x000008, "Member 'Bacteria_BP_C_CanSeePlayer::CanSee' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_CanSeePlayer, Ignored) == 0x000010, "Member 'Bacteria_BP_C_CanSeePlayer::Ignored' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_CanSeePlayer, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'Bacteria_BP_C_CanSeePlayer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_CanSeePlayer, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000024, "Member 'Bacteria_BP_C_CanSeePlayer::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_CanSeePlayer, CallFunc_GetAllActorsOfClass_OutActors) == 0x000030, "Member 'Bacteria_BP_C_CanSeePlayer::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_CanSeePlayer, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000040, "Member 'Bacteria_BP_C_CanSeePlayer::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_CanSeePlayer, CallFunc_LineTraceSingle_OutHit) == 0x00004C, "Member 'Bacteria_BP_C_CanSeePlayer::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_CanSeePlayer, CallFunc_LineTraceSingle_ReturnValue) == 0x0000D4, "Member 'Bacteria_BP_C_CanSeePlayer::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_CanSeePlayer, CallFunc_BreakHitResult_bBlockingHit) == 0x0000D5, "Member 'Bacteria_BP_C_CanSeePlayer::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_CanSeePlayer, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000D6, "Member 'Bacteria_BP_C_CanSeePlayer::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_CanSeePlayer, CallFunc_BreakHitResult_Time) == 0x0000D8, "Member 'Bacteria_BP_C_CanSeePlayer::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_CanSeePlayer, CallFunc_BreakHitResult_Distance) == 0x0000DC, "Member 'Bacteria_BP_C_CanSeePlayer::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_CanSeePlayer, CallFunc_BreakHitResult_Location) == 0x0000E0, "Member 'Bacteria_BP_C_CanSeePlayer::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_CanSeePlayer, CallFunc_BreakHitResult_ImpactPoint) == 0x0000EC, "Member 'Bacteria_BP_C_CanSeePlayer::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_CanSeePlayer, CallFunc_BreakHitResult_Normal) == 0x0000F8, "Member 'Bacteria_BP_C_CanSeePlayer::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_CanSeePlayer, CallFunc_BreakHitResult_ImpactNormal) == 0x000104, "Member 'Bacteria_BP_C_CanSeePlayer::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_CanSeePlayer, CallFunc_BreakHitResult_PhysMat) == 0x000110, "Member 'Bacteria_BP_C_CanSeePlayer::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_CanSeePlayer, CallFunc_BreakHitResult_HitActor) == 0x000118, "Member 'Bacteria_BP_C_CanSeePlayer::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_CanSeePlayer, CallFunc_BreakHitResult_HitComponent) == 0x000120, "Member 'Bacteria_BP_C_CanSeePlayer::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_CanSeePlayer, CallFunc_BreakHitResult_HitBoneName) == 0x000128, "Member 'Bacteria_BP_C_CanSeePlayer::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_CanSeePlayer, CallFunc_BreakHitResult_HitItem) == 0x000130, "Member 'Bacteria_BP_C_CanSeePlayer::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_CanSeePlayer, CallFunc_BreakHitResult_ElementIndex) == 0x000134, "Member 'Bacteria_BP_C_CanSeePlayer::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_CanSeePlayer, CallFunc_BreakHitResult_FaceIndex) == 0x000138, "Member 'Bacteria_BP_C_CanSeePlayer::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_CanSeePlayer, CallFunc_BreakHitResult_TraceStart) == 0x00013C, "Member 'Bacteria_BP_C_CanSeePlayer::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_CanSeePlayer, CallFunc_BreakHitResult_TraceEnd) == 0x000148, "Member 'Bacteria_BP_C_CanSeePlayer::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");

// Function Bacteria_BP.Bacteria_BP_C.CheckPlayersTimer
// 0x0080 (0x0080 - 0x0000)
struct Bacteria_BP_C_CheckPlayersTimer final
{
public:
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0000(0x0030)(IsPlainOldData, NoDestructor)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0030(0x0010)(ConstParm, ReferenceParm)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0040(0x0010)(ConstParm, ReferenceParm)
	TArray<class AActor*>                         CallFunc_ComponentOverlapActors_OutActors;         // 0x0050(0x0010)(ReferenceParm)
	bool                                          CallFunc_ComponentOverlapActors_ReturnValue;       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABPCharacter_Demo_C*                    K2Node_DynamicCast_AsBPCharacter_Demo;             // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanSeePlayer_CanSee;                      // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x007B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Bacteria_BP_C_CheckPlayersTimer) == 0x000010, "Wrong alignment on Bacteria_BP_C_CheckPlayersTimer");
static_assert(sizeof(Bacteria_BP_C_CheckPlayersTimer) == 0x000080, "Wrong size on Bacteria_BP_C_CheckPlayersTimer");
static_assert(offsetof(Bacteria_BP_C_CheckPlayersTimer, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000000, "Member 'Bacteria_BP_C_CheckPlayersTimer::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_CheckPlayersTimer, K2Node_MakeArray_Array) == 0x000030, "Member 'Bacteria_BP_C_CheckPlayersTimer::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_CheckPlayersTimer, Temp_object_Variable) == 0x000040, "Member 'Bacteria_BP_C_CheckPlayersTimer::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_CheckPlayersTimer, CallFunc_ComponentOverlapActors_OutActors) == 0x000050, "Member 'Bacteria_BP_C_CheckPlayersTimer::CallFunc_ComponentOverlapActors_OutActors' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_CheckPlayersTimer, CallFunc_ComponentOverlapActors_ReturnValue) == 0x000060, "Member 'Bacteria_BP_C_CheckPlayersTimer::CallFunc_ComponentOverlapActors_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_CheckPlayersTimer, CallFunc_Array_Get_Item) == 0x000068, "Member 'Bacteria_BP_C_CheckPlayersTimer::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_CheckPlayersTimer, K2Node_DynamicCast_AsBPCharacter_Demo) == 0x000070, "Member 'Bacteria_BP_C_CheckPlayersTimer::K2Node_DynamicCast_AsBPCharacter_Demo' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_CheckPlayersTimer, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'Bacteria_BP_C_CheckPlayersTimer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_CheckPlayersTimer, CallFunc_CanSeePlayer_CanSee) == 0x000079, "Member 'Bacteria_BP_C_CheckPlayersTimer::CallFunc_CanSeePlayer_CanSee' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_CheckPlayersTimer, CallFunc_IsValid_ReturnValue) == 0x00007A, "Member 'Bacteria_BP_C_CheckPlayersTimer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_CheckPlayersTimer, CallFunc_BooleanAND_ReturnValue) == 0x00007B, "Member 'Bacteria_BP_C_CheckPlayersTimer::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bacteria_BP_C_CheckPlayersTimer, CallFunc_Not_PreBool_ReturnValue) == 0x00007C, "Member 'Bacteria_BP_C_CheckPlayersTimer::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

}

