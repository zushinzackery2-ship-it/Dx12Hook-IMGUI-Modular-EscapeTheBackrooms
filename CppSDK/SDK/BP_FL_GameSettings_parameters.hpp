#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FL_GameSettings

#include "Basic.hpp"

#include "E_CameraSetting_structs.hpp"


namespace SDK::Params
{

// Function BP_FL_GameSettings.BP_FL_GameSettings_C.Set_AudioSettings
// 0x0020 (0x0020 - 0x0000)
struct BP_FL_GameSettings_C_Set_AudioSettings final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 GameSettings_SlotName;                             // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class UBP_SG_GameSettings_C*                  CallFunc_LoadSettings_SaveGame;                    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FL_GameSettings_C_Set_AudioSettings) == 0x000008, "Wrong alignment on BP_FL_GameSettings_C_Set_AudioSettings");
static_assert(sizeof(BP_FL_GameSettings_C_Set_AudioSettings) == 0x000020, "Wrong size on BP_FL_GameSettings_C_Set_AudioSettings");
static_assert(offsetof(BP_FL_GameSettings_C_Set_AudioSettings, __WorldContext) == 0x000000, "Member 'BP_FL_GameSettings_C_Set_AudioSettings::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FL_GameSettings_C_Set_AudioSettings, GameSettings_SlotName) == 0x000008, "Member 'BP_FL_GameSettings_C_Set_AudioSettings::GameSettings_SlotName' has a wrong offset!");
static_assert(offsetof(BP_FL_GameSettings_C_Set_AudioSettings, CallFunc_LoadSettings_SaveGame) == 0x000018, "Member 'BP_FL_GameSettings_C_Set_AudioSettings::CallFunc_LoadSettings_SaveGame' has a wrong offset!");

// Function BP_FL_GameSettings.BP_FL_GameSettings_C.Load_ControlSettings
// 0x0038 (0x0038 - 0x0000)
struct BP_FL_GameSettings_C_Load_ControlSettings final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Sensitivity;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InvertMouse;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_CameraSetting                               CameraSetting;                                     // 0x000D(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowBody;                                          // 0x000E(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          UsingPushToTalk;                                   // 0x000F(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         FOV;                                               // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SmoothRotation;                                    // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          HideGore;                                          // 0x0015(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Gamma;                                             // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CameraShake;                                       // 0x001C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ShowEventContent;                                  // 0x001D(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          AimAssist;                                         // 0x001E(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ControllerFeedback;                                // 0x001F(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ShowChat;                                          // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_SG_GameSettings_C*                  CallFunc_LoadSettings_SaveGame;                    // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FL_GameSettings_C_Load_ControlSettings) == 0x000008, "Wrong alignment on BP_FL_GameSettings_C_Load_ControlSettings");
static_assert(sizeof(BP_FL_GameSettings_C_Load_ControlSettings) == 0x000038, "Wrong size on BP_FL_GameSettings_C_Load_ControlSettings");
static_assert(offsetof(BP_FL_GameSettings_C_Load_ControlSettings, __WorldContext) == 0x000000, "Member 'BP_FL_GameSettings_C_Load_ControlSettings::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FL_GameSettings_C_Load_ControlSettings, Sensitivity) == 0x000008, "Member 'BP_FL_GameSettings_C_Load_ControlSettings::Sensitivity' has a wrong offset!");
static_assert(offsetof(BP_FL_GameSettings_C_Load_ControlSettings, InvertMouse) == 0x00000C, "Member 'BP_FL_GameSettings_C_Load_ControlSettings::InvertMouse' has a wrong offset!");
static_assert(offsetof(BP_FL_GameSettings_C_Load_ControlSettings, CameraSetting) == 0x00000D, "Member 'BP_FL_GameSettings_C_Load_ControlSettings::CameraSetting' has a wrong offset!");
static_assert(offsetof(BP_FL_GameSettings_C_Load_ControlSettings, ShowBody) == 0x00000E, "Member 'BP_FL_GameSettings_C_Load_ControlSettings::ShowBody' has a wrong offset!");
static_assert(offsetof(BP_FL_GameSettings_C_Load_ControlSettings, UsingPushToTalk) == 0x00000F, "Member 'BP_FL_GameSettings_C_Load_ControlSettings::UsingPushToTalk' has a wrong offset!");
static_assert(offsetof(BP_FL_GameSettings_C_Load_ControlSettings, FOV) == 0x000010, "Member 'BP_FL_GameSettings_C_Load_ControlSettings::FOV' has a wrong offset!");
static_assert(offsetof(BP_FL_GameSettings_C_Load_ControlSettings, SmoothRotation) == 0x000014, "Member 'BP_FL_GameSettings_C_Load_ControlSettings::SmoothRotation' has a wrong offset!");
static_assert(offsetof(BP_FL_GameSettings_C_Load_ControlSettings, HideGore) == 0x000015, "Member 'BP_FL_GameSettings_C_Load_ControlSettings::HideGore' has a wrong offset!");
static_assert(offsetof(BP_FL_GameSettings_C_Load_ControlSettings, Gamma) == 0x000018, "Member 'BP_FL_GameSettings_C_Load_ControlSettings::Gamma' has a wrong offset!");
static_assert(offsetof(BP_FL_GameSettings_C_Load_ControlSettings, CameraShake) == 0x00001C, "Member 'BP_FL_GameSettings_C_Load_ControlSettings::CameraShake' has a wrong offset!");
static_assert(offsetof(BP_FL_GameSettings_C_Load_ControlSettings, ShowEventContent) == 0x00001D, "Member 'BP_FL_GameSettings_C_Load_ControlSettings::ShowEventContent' has a wrong offset!");
static_assert(offsetof(BP_FL_GameSettings_C_Load_ControlSettings, AimAssist) == 0x00001E, "Member 'BP_FL_GameSettings_C_Load_ControlSettings::AimAssist' has a wrong offset!");
static_assert(offsetof(BP_FL_GameSettings_C_Load_ControlSettings, ControllerFeedback) == 0x00001F, "Member 'BP_FL_GameSettings_C_Load_ControlSettings::ControllerFeedback' has a wrong offset!");
static_assert(offsetof(BP_FL_GameSettings_C_Load_ControlSettings, ShowChat) == 0x000020, "Member 'BP_FL_GameSettings_C_Load_ControlSettings::ShowChat' has a wrong offset!");
static_assert(offsetof(BP_FL_GameSettings_C_Load_ControlSettings, CallFunc_LoadSettings_SaveGame) == 0x000028, "Member 'BP_FL_GameSettings_C_Load_ControlSettings::CallFunc_LoadSettings_SaveGame' has a wrong offset!");
static_assert(offsetof(BP_FL_GameSettings_C_Load_ControlSettings, CallFunc_FClamp_ReturnValue) == 0x000030, "Member 'BP_FL_GameSettings_C_Load_ControlSettings::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function BP_FL_GameSettings.BP_FL_GameSettings_C.SetHasSeenVHS
// 0x0018 (0x0018 - 0x0000)
struct BP_FL_GameSettings_C_SetHasSeenVHS final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_SG_GameSettings_C*                  CallFunc_LoadSettings_SaveGame;                    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SaveGameToSlot_ReturnValue;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FL_GameSettings_C_SetHasSeenVHS) == 0x000008, "Wrong alignment on BP_FL_GameSettings_C_SetHasSeenVHS");
static_assert(sizeof(BP_FL_GameSettings_C_SetHasSeenVHS) == 0x000018, "Wrong size on BP_FL_GameSettings_C_SetHasSeenVHS");
static_assert(offsetof(BP_FL_GameSettings_C_SetHasSeenVHS, __WorldContext) == 0x000000, "Member 'BP_FL_GameSettings_C_SetHasSeenVHS::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FL_GameSettings_C_SetHasSeenVHS, CallFunc_LoadSettings_SaveGame) == 0x000008, "Member 'BP_FL_GameSettings_C_SetHasSeenVHS::CallFunc_LoadSettings_SaveGame' has a wrong offset!");
static_assert(offsetof(BP_FL_GameSettings_C_SetHasSeenVHS, CallFunc_SaveGameToSlot_ReturnValue) == 0x000010, "Member 'BP_FL_GameSettings_C_SetHasSeenVHS::CallFunc_SaveGameToSlot_ReturnValue' has a wrong offset!");

// Function BP_FL_GameSettings.BP_FL_GameSettings_C.LoadSettings
// 0x0048 (0x0048 - 0x0000)
struct BP_FL_GameSettings_C_LoadSettings final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_SG_GameSettings_C*                  SaveGame;                                          // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 GameSettings_SlotName;                             // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class UBP_SG_GameSettings_C*                  CallFunc_CreateSaveGameObject_ReturnValue;         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USaveGame*                              CallFunc_LoadGameFromSlot_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SaveGameToSlot_ReturnValue;               // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_SG_GameSettings_C*                  K2Node_DynamicCast_AsBP_SG_Game_Settings;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoesSaveGameExist_ReturnValue;            // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FL_GameSettings_C_LoadSettings) == 0x000008, "Wrong alignment on BP_FL_GameSettings_C_LoadSettings");
static_assert(sizeof(BP_FL_GameSettings_C_LoadSettings) == 0x000048, "Wrong size on BP_FL_GameSettings_C_LoadSettings");
static_assert(offsetof(BP_FL_GameSettings_C_LoadSettings, __WorldContext) == 0x000000, "Member 'BP_FL_GameSettings_C_LoadSettings::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FL_GameSettings_C_LoadSettings, SaveGame) == 0x000008, "Member 'BP_FL_GameSettings_C_LoadSettings::SaveGame' has a wrong offset!");
static_assert(offsetof(BP_FL_GameSettings_C_LoadSettings, GameSettings_SlotName) == 0x000010, "Member 'BP_FL_GameSettings_C_LoadSettings::GameSettings_SlotName' has a wrong offset!");
static_assert(offsetof(BP_FL_GameSettings_C_LoadSettings, CallFunc_CreateSaveGameObject_ReturnValue) == 0x000020, "Member 'BP_FL_GameSettings_C_LoadSettings::CallFunc_CreateSaveGameObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FL_GameSettings_C_LoadSettings, CallFunc_LoadGameFromSlot_ReturnValue) == 0x000028, "Member 'BP_FL_GameSettings_C_LoadSettings::CallFunc_LoadGameFromSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FL_GameSettings_C_LoadSettings, CallFunc_SaveGameToSlot_ReturnValue) == 0x000030, "Member 'BP_FL_GameSettings_C_LoadSettings::CallFunc_SaveGameToSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FL_GameSettings_C_LoadSettings, K2Node_DynamicCast_AsBP_SG_Game_Settings) == 0x000038, "Member 'BP_FL_GameSettings_C_LoadSettings::K2Node_DynamicCast_AsBP_SG_Game_Settings' has a wrong offset!");
static_assert(offsetof(BP_FL_GameSettings_C_LoadSettings, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_FL_GameSettings_C_LoadSettings::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FL_GameSettings_C_LoadSettings, CallFunc_DoesSaveGameExist_ReturnValue) == 0x000041, "Member 'BP_FL_GameSettings_C_LoadSettings::CallFunc_DoesSaveGameExist_ReturnValue' has a wrong offset!");

}

