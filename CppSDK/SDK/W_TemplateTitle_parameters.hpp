#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_TemplateTitle

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function W_TemplateTitle.W_TemplateTitle_C.ExecuteUbergraph_W_TemplateTitle
// 0x0018 (0x0018 - 0x0000)
struct W_TemplateTitle_C_ExecuteUbergraph_W_TemplateTitle final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_TemplateTitle_C_ExecuteUbergraph_W_TemplateTitle) == 0x000004, "Wrong alignment on W_TemplateTitle_C_ExecuteUbergraph_W_TemplateTitle");
static_assert(sizeof(W_TemplateTitle_C_ExecuteUbergraph_W_TemplateTitle) == 0x000018, "Wrong size on W_TemplateTitle_C_ExecuteUbergraph_W_TemplateTitle");
static_assert(offsetof(W_TemplateTitle_C_ExecuteUbergraph_W_TemplateTitle, EntryPoint) == 0x000000, "Member 'W_TemplateTitle_C_ExecuteUbergraph_W_TemplateTitle::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_TemplateTitle_C_ExecuteUbergraph_W_TemplateTitle, Temp_bool_Variable) == 0x000004, "Member 'W_TemplateTitle_C_ExecuteUbergraph_W_TemplateTitle::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_TemplateTitle_C_ExecuteUbergraph_W_TemplateTitle, Temp_float_Variable) == 0x000008, "Member 'W_TemplateTitle_C_ExecuteUbergraph_W_TemplateTitle::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(W_TemplateTitle_C_ExecuteUbergraph_W_TemplateTitle, K2Node_Event_IsDesignTime) == 0x00000C, "Member 'W_TemplateTitle_C_ExecuteUbergraph_W_TemplateTitle::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_TemplateTitle_C_ExecuteUbergraph_W_TemplateTitle, CallFunc_FClamp_ReturnValue) == 0x000010, "Member 'W_TemplateTitle_C_ExecuteUbergraph_W_TemplateTitle::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_TemplateTitle_C_ExecuteUbergraph_W_TemplateTitle, K2Node_Select_Default) == 0x000014, "Member 'W_TemplateTitle_C_ExecuteUbergraph_W_TemplateTitle::K2Node_Select_Default' has a wrong offset!");

// Function W_TemplateTitle.W_TemplateTitle_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_TemplateTitle_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_TemplateTitle_C_PreConstruct) == 0x000001, "Wrong alignment on W_TemplateTitle_C_PreConstruct");
static_assert(sizeof(W_TemplateTitle_C_PreConstruct) == 0x000001, "Wrong size on W_TemplateTitle_C_PreConstruct");
static_assert(offsetof(W_TemplateTitle_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_TemplateTitle_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_TemplateTitle.W_TemplateTitle_C.ChangeTitleColor
// 0x0028 (0x0028 - 0x0000)
struct W_TemplateTitle_C_ChangeTitleColor final
{
public:
	struct FSlateColor                            NewColorAndOpacity;                                // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(W_TemplateTitle_C_ChangeTitleColor) == 0x000008, "Wrong alignment on W_TemplateTitle_C_ChangeTitleColor");
static_assert(sizeof(W_TemplateTitle_C_ChangeTitleColor) == 0x000028, "Wrong size on W_TemplateTitle_C_ChangeTitleColor");
static_assert(offsetof(W_TemplateTitle_C_ChangeTitleColor, NewColorAndOpacity) == 0x000000, "Member 'W_TemplateTitle_C_ChangeTitleColor::NewColorAndOpacity' has a wrong offset!");

}

