#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_OptionSwitcher_Theme2

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "Backrooms_structs.hpp"
#include "UMG_structs.hpp"
#include "InputCore_structs.hpp"


namespace SDK::Params
{

// Function WB_OptionSwitcher_Theme2.WB_OptionSwitcher_Theme2_C.ExecuteUbergraph_WB_OptionSwitcher_Theme2
// 0x0068 (0x0068 - 0x0000)
struct WB_OptionSwitcher_Theme2_C_ExecuteUbergraph_WB_OptionSwitcher_Theme2 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsHovered;                            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateFontInfo                         CallFunc_Get_Font_Culture_Checked_OutFont;         // 0x0008(0x0058)(HasGetValueTypeHash)
	bool                                          K2Node_Event_IsEnabled;                            // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsFocused;                            // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EFancyInputDevice                             CallFunc_GetCurrentInputDevice_ReturnValue;        // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_OptionSwitcher_Theme2_C_ExecuteUbergraph_WB_OptionSwitcher_Theme2) == 0x000008, "Wrong alignment on WB_OptionSwitcher_Theme2_C_ExecuteUbergraph_WB_OptionSwitcher_Theme2");
static_assert(sizeof(WB_OptionSwitcher_Theme2_C_ExecuteUbergraph_WB_OptionSwitcher_Theme2) == 0x000068, "Wrong size on WB_OptionSwitcher_Theme2_C_ExecuteUbergraph_WB_OptionSwitcher_Theme2");
static_assert(offsetof(WB_OptionSwitcher_Theme2_C_ExecuteUbergraph_WB_OptionSwitcher_Theme2, EntryPoint) == 0x000000, "Member 'WB_OptionSwitcher_Theme2_C_ExecuteUbergraph_WB_OptionSwitcher_Theme2::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_OptionSwitcher_Theme2_C_ExecuteUbergraph_WB_OptionSwitcher_Theme2, K2Node_Event_IsHovered) == 0x000004, "Member 'WB_OptionSwitcher_Theme2_C_ExecuteUbergraph_WB_OptionSwitcher_Theme2::K2Node_Event_IsHovered' has a wrong offset!");
static_assert(offsetof(WB_OptionSwitcher_Theme2_C_ExecuteUbergraph_WB_OptionSwitcher_Theme2, CallFunc_Get_Font_Culture_Checked_OutFont) == 0x000008, "Member 'WB_OptionSwitcher_Theme2_C_ExecuteUbergraph_WB_OptionSwitcher_Theme2::CallFunc_Get_Font_Culture_Checked_OutFont' has a wrong offset!");
static_assert(offsetof(WB_OptionSwitcher_Theme2_C_ExecuteUbergraph_WB_OptionSwitcher_Theme2, K2Node_Event_IsEnabled) == 0x000060, "Member 'WB_OptionSwitcher_Theme2_C_ExecuteUbergraph_WB_OptionSwitcher_Theme2::K2Node_Event_IsEnabled' has a wrong offset!");
static_assert(offsetof(WB_OptionSwitcher_Theme2_C_ExecuteUbergraph_WB_OptionSwitcher_Theme2, K2Node_Event_IsDesignTime) == 0x000061, "Member 'WB_OptionSwitcher_Theme2_C_ExecuteUbergraph_WB_OptionSwitcher_Theme2::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WB_OptionSwitcher_Theme2_C_ExecuteUbergraph_WB_OptionSwitcher_Theme2, K2Node_Event_IsFocused) == 0x000062, "Member 'WB_OptionSwitcher_Theme2_C_ExecuteUbergraph_WB_OptionSwitcher_Theme2::K2Node_Event_IsFocused' has a wrong offset!");
static_assert(offsetof(WB_OptionSwitcher_Theme2_C_ExecuteUbergraph_WB_OptionSwitcher_Theme2, CallFunc_GetCurrentInputDevice_ReturnValue) == 0x000063, "Member 'WB_OptionSwitcher_Theme2_C_ExecuteUbergraph_WB_OptionSwitcher_Theme2::CallFunc_GetCurrentInputDevice_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_OptionSwitcher_Theme2_C_ExecuteUbergraph_WB_OptionSwitcher_Theme2, K2Node_SwitchEnum_CmpSuccess) == 0x000064, "Member 'WB_OptionSwitcher_Theme2_C_ExecuteUbergraph_WB_OptionSwitcher_Theme2::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function WB_OptionSwitcher_Theme2.WB_OptionSwitcher_Theme2_C.ToggleFocus
// 0x0001 (0x0001 - 0x0000)
struct WB_OptionSwitcher_Theme2_C_ToggleFocus final
{
public:
	bool                                          IsFocused;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_OptionSwitcher_Theme2_C_ToggleFocus) == 0x000001, "Wrong alignment on WB_OptionSwitcher_Theme2_C_ToggleFocus");
static_assert(sizeof(WB_OptionSwitcher_Theme2_C_ToggleFocus) == 0x000001, "Wrong size on WB_OptionSwitcher_Theme2_C_ToggleFocus");
static_assert(offsetof(WB_OptionSwitcher_Theme2_C_ToggleFocus, IsFocused) == 0x000000, "Member 'WB_OptionSwitcher_Theme2_C_ToggleFocus::IsFocused' has a wrong offset!");

// Function WB_OptionSwitcher_Theme2.WB_OptionSwitcher_Theme2_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WB_OptionSwitcher_Theme2_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_OptionSwitcher_Theme2_C_PreConstruct) == 0x000001, "Wrong alignment on WB_OptionSwitcher_Theme2_C_PreConstruct");
static_assert(sizeof(WB_OptionSwitcher_Theme2_C_PreConstruct) == 0x000001, "Wrong size on WB_OptionSwitcher_Theme2_C_PreConstruct");
static_assert(offsetof(WB_OptionSwitcher_Theme2_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WB_OptionSwitcher_Theme2_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WB_OptionSwitcher_Theme2.WB_OptionSwitcher_Theme2_C.ToggleEnabled
// 0x0001 (0x0001 - 0x0000)
struct WB_OptionSwitcher_Theme2_C_ToggleEnabled final
{
public:
	bool                                          IsEnabled;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_OptionSwitcher_Theme2_C_ToggleEnabled) == 0x000001, "Wrong alignment on WB_OptionSwitcher_Theme2_C_ToggleEnabled");
static_assert(sizeof(WB_OptionSwitcher_Theme2_C_ToggleEnabled) == 0x000001, "Wrong size on WB_OptionSwitcher_Theme2_C_ToggleEnabled");
static_assert(offsetof(WB_OptionSwitcher_Theme2_C_ToggleEnabled, IsEnabled) == 0x000000, "Member 'WB_OptionSwitcher_Theme2_C_ToggleEnabled::IsEnabled' has a wrong offset!");

// Function WB_OptionSwitcher_Theme2.WB_OptionSwitcher_Theme2_C.ToggleHover
// 0x0001 (0x0001 - 0x0000)
struct WB_OptionSwitcher_Theme2_C_ToggleHover final
{
public:
	bool                                          IsHovered_0;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_OptionSwitcher_Theme2_C_ToggleHover) == 0x000001, "Wrong alignment on WB_OptionSwitcher_Theme2_C_ToggleHover");
static_assert(sizeof(WB_OptionSwitcher_Theme2_C_ToggleHover) == 0x000001, "Wrong size on WB_OptionSwitcher_Theme2_C_ToggleHover");
static_assert(offsetof(WB_OptionSwitcher_Theme2_C_ToggleHover, IsHovered_0) == 0x000000, "Member 'WB_OptionSwitcher_Theme2_C_ToggleHover::IsHovered_0' has a wrong offset!");

// Function WB_OptionSwitcher_Theme2.WB_OptionSwitcher_Theme2_C.Switch_Option
// 0x0048 (0x0048 - 0x0000)
struct WB_OptionSwitcher_Theme2_C_Switch_Option final
{
public:
	bool                                          Decrease_;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Max_Options;                                       // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Min_Options;                                       // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Current_Selection;                                 // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Array_Get_Item;                           // 0x0018(0x0018)()
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E[0x2];                                       // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_OptionSwitcher_Theme2_C_Switch_Option) == 0x000008, "Wrong alignment on WB_OptionSwitcher_Theme2_C_Switch_Option");
static_assert(sizeof(WB_OptionSwitcher_Theme2_C_Switch_Option) == 0x000048, "Wrong size on WB_OptionSwitcher_Theme2_C_Switch_Option");
static_assert(offsetof(WB_OptionSwitcher_Theme2_C_Switch_Option, Decrease_) == 0x000000, "Member 'WB_OptionSwitcher_Theme2_C_Switch_Option::Decrease_' has a wrong offset!");
static_assert(offsetof(WB_OptionSwitcher_Theme2_C_Switch_Option, Max_Options) == 0x000004, "Member 'WB_OptionSwitcher_Theme2_C_Switch_Option::Max_Options' has a wrong offset!");
static_assert(offsetof(WB_OptionSwitcher_Theme2_C_Switch_Option, Min_Options) == 0x000008, "Member 'WB_OptionSwitcher_Theme2_C_Switch_Option::Min_Options' has a wrong offset!");
static_assert(offsetof(WB_OptionSwitcher_Theme2_C_Switch_Option, Current_Selection) == 0x00000C, "Member 'WB_OptionSwitcher_Theme2_C_Switch_Option::Current_Selection' has a wrong offset!");
static_assert(offsetof(WB_OptionSwitcher_Theme2_C_Switch_Option, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'WB_OptionSwitcher_Theme2_C_Switch_Option::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_OptionSwitcher_Theme2_C_Switch_Option, CallFunc_Subtract_IntInt_ReturnValue) == 0x000014, "Member 'WB_OptionSwitcher_Theme2_C_Switch_Option::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_OptionSwitcher_Theme2_C_Switch_Option, CallFunc_Array_Get_Item) == 0x000018, "Member 'WB_OptionSwitcher_Theme2_C_Switch_Option::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_OptionSwitcher_Theme2_C_Switch_Option, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000030, "Member 'WB_OptionSwitcher_Theme2_C_Switch_Option::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_OptionSwitcher_Theme2_C_Switch_Option, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'WB_OptionSwitcher_Theme2_C_Switch_Option::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_OptionSwitcher_Theme2_C_Switch_Option, Temp_int_Variable) == 0x000038, "Member 'WB_OptionSwitcher_Theme2_C_Switch_Option::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WB_OptionSwitcher_Theme2_C_Switch_Option, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00003C, "Member 'WB_OptionSwitcher_Theme2_C_Switch_Option::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_OptionSwitcher_Theme2_C_Switch_Option, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00003D, "Member 'WB_OptionSwitcher_Theme2_C_Switch_Option::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_OptionSwitcher_Theme2_C_Switch_Option, Temp_int_Variable_1) == 0x000040, "Member 'WB_OptionSwitcher_Theme2_C_Switch_Option::Temp_int_Variable_1' has a wrong offset!");

// Function WB_OptionSwitcher_Theme2.WB_OptionSwitcher_Theme2_C.Set_SelectedOption
// 0x0018 (0x0018 - 0x0000)
struct WB_OptionSwitcher_Theme2_C_Set_SelectedOption final
{
public:
	class FText                                   SelectedOption_0;                                  // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WB_OptionSwitcher_Theme2_C_Set_SelectedOption) == 0x000008, "Wrong alignment on WB_OptionSwitcher_Theme2_C_Set_SelectedOption");
static_assert(sizeof(WB_OptionSwitcher_Theme2_C_Set_SelectedOption) == 0x000018, "Wrong size on WB_OptionSwitcher_Theme2_C_Set_SelectedOption");
static_assert(offsetof(WB_OptionSwitcher_Theme2_C_Set_SelectedOption, SelectedOption_0) == 0x000000, "Member 'WB_OptionSwitcher_Theme2_C_Set_SelectedOption::SelectedOption_0' has a wrong offset!");

// Function WB_OptionSwitcher_Theme2.WB_OptionSwitcher_Theme2_C.Setup
// 0x0018 (0x0018 - 0x0000)
struct WB_OptionSwitcher_Theme2_C_Setup final
{
public:
	class FText                                   CallFunc_Array_Get_Item;                           // 0x0000(0x0018)()
};
static_assert(alignof(WB_OptionSwitcher_Theme2_C_Setup) == 0x000008, "Wrong alignment on WB_OptionSwitcher_Theme2_C_Setup");
static_assert(sizeof(WB_OptionSwitcher_Theme2_C_Setup) == 0x000018, "Wrong size on WB_OptionSwitcher_Theme2_C_Setup");
static_assert(offsetof(WB_OptionSwitcher_Theme2_C_Setup, CallFunc_Array_Get_Item) == 0x000000, "Member 'WB_OptionSwitcher_Theme2_C_Setup::CallFunc_Array_Get_Item' has a wrong offset!");

// Function WB_OptionSwitcher_Theme2.WB_OptionSwitcher_Theme2_C.OnKeyDown
// 0x02B8 (0x02B8 - 0x0000)
struct WB_OptionSwitcher_Theme2_C_OnKeyDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FKeyEvent                              InKeyEvent;                                        // 0x0038(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FEventReply                            ReturnValue;                                       // 0x0070(0x00B8)(Parm, OutParm, ReturnParm)
	struct FKey                                   CallFunc_GetKey_ReturnValue;                       // 0x0128(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_1;          // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_142[0x6];                                      // 0x0142(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x0148(0x00B8)()
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0200(0x00B8)()
};
static_assert(alignof(WB_OptionSwitcher_Theme2_C_OnKeyDown) == 0x000008, "Wrong alignment on WB_OptionSwitcher_Theme2_C_OnKeyDown");
static_assert(sizeof(WB_OptionSwitcher_Theme2_C_OnKeyDown) == 0x0002B8, "Wrong size on WB_OptionSwitcher_Theme2_C_OnKeyDown");
static_assert(offsetof(WB_OptionSwitcher_Theme2_C_OnKeyDown, MyGeometry) == 0x000000, "Member 'WB_OptionSwitcher_Theme2_C_OnKeyDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_OptionSwitcher_Theme2_C_OnKeyDown, InKeyEvent) == 0x000038, "Member 'WB_OptionSwitcher_Theme2_C_OnKeyDown::InKeyEvent' has a wrong offset!");
static_assert(offsetof(WB_OptionSwitcher_Theme2_C_OnKeyDown, ReturnValue) == 0x000070, "Member 'WB_OptionSwitcher_Theme2_C_OnKeyDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_OptionSwitcher_Theme2_C_OnKeyDown, CallFunc_GetKey_ReturnValue) == 0x000128, "Member 'WB_OptionSwitcher_Theme2_C_OnKeyDown::CallFunc_GetKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_OptionSwitcher_Theme2_C_OnKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x000140, "Member 'WB_OptionSwitcher_Theme2_C_OnKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_OptionSwitcher_Theme2_C_OnKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue_1) == 0x000141, "Member 'WB_OptionSwitcher_Theme2_C_OnKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_OptionSwitcher_Theme2_C_OnKeyDown, CallFunc_Unhandled_ReturnValue) == 0x000148, "Member 'WB_OptionSwitcher_Theme2_C_OnKeyDown::CallFunc_Unhandled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_OptionSwitcher_Theme2_C_OnKeyDown, CallFunc_Handled_ReturnValue) == 0x000200, "Member 'WB_OptionSwitcher_Theme2_C_OnKeyDown::CallFunc_Handled_ReturnValue' has a wrong offset!");

}

