#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WaveFoamSimComponent

#include "Basic.hpp"

#include "WaveFoamSimComponent_classes.hpp"
#include "WaveFoamSimComponent_parameters.hpp"


namespace SDK
{

// Function WaveFoamSimComponent.WaveFoamSimComponent_C.ExecuteUbergraph_WaveFoamSimComponent
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWaveFoamSimComponent_C::ExecuteUbergraph_WaveFoamSimComponent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WaveFoamSimComponent_C", "ExecuteUbergraph_WaveFoamSimComponent");

	Params::WaveFoamSimComponent_C_ExecuteUbergraph_WaveFoamSimComponent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WaveFoamSimComponent.WaveFoamSimComponent_C.Release Foam Sim RTs
// (BlueprintCallable, BlueprintEvent)

void UWaveFoamSimComponent_C::Release_Foam_Sim_RTs()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WaveFoamSimComponent_C", "Release Foam Sim RTs");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WaveFoamSimComponent.WaveFoamSimComponent_C.Wave Simulation Step
// (BlueprintCallable, BlueprintEvent)

void UWaveFoamSimComponent_C::Wave_Simulation_Step()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WaveFoamSimComponent_C", "Wave Simulation Step");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WaveFoamSimComponent.WaveFoamSimComponent_C.Allocate RTs
// (BlueprintCallable, BlueprintEvent)

void UWaveFoamSimComponent_C::Allocate_RTs()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WaveFoamSimComponent_C", "Allocate RTs");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WaveFoamSimComponent.WaveFoamSimComponent_C.Create MIDs
// (BlueprintCallable, BlueprintEvent)

void UWaveFoamSimComponent_C::Create_MIDs()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WaveFoamSimComponent_C", "Create MIDs");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WaveFoamSimComponent.WaveFoamSimComponent_C.InitializeWaveFoamSim
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   res_0                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   WorldSize                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Fading                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TimeBias                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AWaterBody*                       WaterBody                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UShallowWaterSimComponent_C*      ShallowWater_0                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWaveFoamSimComponent_C::InitializeWaveFoamSim(int32 res_0, float WorldSize, float Fading, float TimeBias, class AWaterBody* WaterBody, class UShallowWaterSimComponent_C* ShallowWater_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WaveFoamSimComponent_C", "InitializeWaveFoamSim");

	Params::WaveFoamSimComponent_C_InitializeWaveFoamSim Parms{};

	Parms.res_0 = res_0;
	Parms.WorldSize = WorldSize;
	Parms.Fading = Fading;
	Parms.TimeBias = TimeBias;
	Parms.WaterBody = WaterBody;
	Parms.ShallowWater_0 = ShallowWater_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WaveFoamSimComponent.WaveFoamSimComponent_C.Render Waves to RT
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FGerstnerWave>&           NewParam                                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UWaveFoamSimComponent_C::Render_Waves_to_RT(TArray<struct FGerstnerWave>& NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WaveFoamSimComponent_C", "Render Waves to RT");

	Params::WaveFoamSimComponent_C_Render_Waves_to_RT Parms{};

	Parms.NewParam = std::move(NewParam);

	UObject::ProcessEvent(Func, &Parms);

	NewParam = std::move(Parms.NewParam);
}

}

