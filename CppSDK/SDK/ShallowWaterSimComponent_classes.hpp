#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ShallowWaterSimComponent

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "FluidTerrainModes_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass ShallowWaterSimComponent.ShallowWaterSimComponent_C
// 0x00C0 (0x0170 - 0x00B0)
class UShallowWaterSimComponent_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UTextureRenderTarget2D*                 Height_RT_A;                                       // 0x00B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 Height_RT_B;                                       // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 Velocity_RT_A;                                     // 0x00C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 Velocity_RT_B;                                     // 0x00D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 Velocity_Force_RT;                                 // 0x00D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Height_Idx;                                        // 0x00E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Velocity_Idx;                                      // 0x00E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Advect_Height_MID;                                 // 0x00E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Advect_Velocity_MID;                               // 0x00F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Height_Divergence_Update_MID;                      // 0x00F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Gravity_Acceleration_MID;                          // 0x0100(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInstanceDynamic*>       SimMIDS;                                           // 0x0108(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FIntPoint                              SimResolution;                                     // 0x0118(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              SimWorldSize;                                      // 0x0120(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              TexelWorldSize;                                    // 0x0128(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SimLocation;                                       // 0x0130(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaT;                                            // 0x013C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Seed_Water_MID;                                    // 0x0140(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               WaterVelocityTexture;                              // 0x0148(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         res;                                               // 0x0150(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Use_SceneCapture;                                  // 0x0154(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	EFluidTerrainModes                            TerrainMode;                                       // 0x0155(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_156[0x2];                                      // 0x0156(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SubSteps;                                          // 0x0158(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15C[0x4];                                      // 0x015C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Manual_Advect_Material;                            // 0x0160(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Manual_Advect_Velocity_Material;                   // 0x0168(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_ShallowWaterSimComponent(int32 EntryPoint);
	void Release_Shallow_Water_Sim_RTs();
	void Initialize_ShallowWaterSim(int32 res_0, EFluidTerrainModes Terrain_Mode, class UTexture* Forces, class UTexture* Terrain_Texture, float Default_Water_Depth);
	void Create_Sim_MIDs();
	void Set_Sim_MID_Params(class UTexture* Forces, class UTexture* Terrain);
	void Seed_Water();
	void Simulation_Step(class UTextureRenderTarget2D** Height_RT);
	void Create_RTs();
	void Clear_RTs(float Default_Water_Depth);
	void PingPong_Height(class UTextureRenderTarget2D** Read_RT, class UTextureRenderTarget2D** Write_RT);
	void PingPong_Velocity(class UTextureRenderTarget2D** Read_RT, class UTextureRenderTarget2D** Write_RT);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ShallowWaterSimComponent_C">();
	}
	static class UShallowWaterSimComponent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UShallowWaterSimComponent_C>();
	}
};
static_assert(alignof(UShallowWaterSimComponent_C) == 0x000008, "Wrong alignment on UShallowWaterSimComponent_C");
static_assert(sizeof(UShallowWaterSimComponent_C) == 0x000170, "Wrong size on UShallowWaterSimComponent_C");
static_assert(offsetof(UShallowWaterSimComponent_C, UberGraphFrame) == 0x0000B0, "Member 'UShallowWaterSimComponent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UShallowWaterSimComponent_C, Height_RT_A) == 0x0000B8, "Member 'UShallowWaterSimComponent_C::Height_RT_A' has a wrong offset!");
static_assert(offsetof(UShallowWaterSimComponent_C, Height_RT_B) == 0x0000C0, "Member 'UShallowWaterSimComponent_C::Height_RT_B' has a wrong offset!");
static_assert(offsetof(UShallowWaterSimComponent_C, Velocity_RT_A) == 0x0000C8, "Member 'UShallowWaterSimComponent_C::Velocity_RT_A' has a wrong offset!");
static_assert(offsetof(UShallowWaterSimComponent_C, Velocity_RT_B) == 0x0000D0, "Member 'UShallowWaterSimComponent_C::Velocity_RT_B' has a wrong offset!");
static_assert(offsetof(UShallowWaterSimComponent_C, Velocity_Force_RT) == 0x0000D8, "Member 'UShallowWaterSimComponent_C::Velocity_Force_RT' has a wrong offset!");
static_assert(offsetof(UShallowWaterSimComponent_C, Height_Idx) == 0x0000E0, "Member 'UShallowWaterSimComponent_C::Height_Idx' has a wrong offset!");
static_assert(offsetof(UShallowWaterSimComponent_C, Velocity_Idx) == 0x0000E4, "Member 'UShallowWaterSimComponent_C::Velocity_Idx' has a wrong offset!");
static_assert(offsetof(UShallowWaterSimComponent_C, Advect_Height_MID) == 0x0000E8, "Member 'UShallowWaterSimComponent_C::Advect_Height_MID' has a wrong offset!");
static_assert(offsetof(UShallowWaterSimComponent_C, Advect_Velocity_MID) == 0x0000F0, "Member 'UShallowWaterSimComponent_C::Advect_Velocity_MID' has a wrong offset!");
static_assert(offsetof(UShallowWaterSimComponent_C, Height_Divergence_Update_MID) == 0x0000F8, "Member 'UShallowWaterSimComponent_C::Height_Divergence_Update_MID' has a wrong offset!");
static_assert(offsetof(UShallowWaterSimComponent_C, Gravity_Acceleration_MID) == 0x000100, "Member 'UShallowWaterSimComponent_C::Gravity_Acceleration_MID' has a wrong offset!");
static_assert(offsetof(UShallowWaterSimComponent_C, SimMIDS) == 0x000108, "Member 'UShallowWaterSimComponent_C::SimMIDS' has a wrong offset!");
static_assert(offsetof(UShallowWaterSimComponent_C, SimResolution) == 0x000118, "Member 'UShallowWaterSimComponent_C::SimResolution' has a wrong offset!");
static_assert(offsetof(UShallowWaterSimComponent_C, SimWorldSize) == 0x000120, "Member 'UShallowWaterSimComponent_C::SimWorldSize' has a wrong offset!");
static_assert(offsetof(UShallowWaterSimComponent_C, TexelWorldSize) == 0x000128, "Member 'UShallowWaterSimComponent_C::TexelWorldSize' has a wrong offset!");
static_assert(offsetof(UShallowWaterSimComponent_C, SimLocation) == 0x000130, "Member 'UShallowWaterSimComponent_C::SimLocation' has a wrong offset!");
static_assert(offsetof(UShallowWaterSimComponent_C, DeltaT) == 0x00013C, "Member 'UShallowWaterSimComponent_C::DeltaT' has a wrong offset!");
static_assert(offsetof(UShallowWaterSimComponent_C, Seed_Water_MID) == 0x000140, "Member 'UShallowWaterSimComponent_C::Seed_Water_MID' has a wrong offset!");
static_assert(offsetof(UShallowWaterSimComponent_C, WaterVelocityTexture) == 0x000148, "Member 'UShallowWaterSimComponent_C::WaterVelocityTexture' has a wrong offset!");
static_assert(offsetof(UShallowWaterSimComponent_C, res) == 0x000150, "Member 'UShallowWaterSimComponent_C::res' has a wrong offset!");
static_assert(offsetof(UShallowWaterSimComponent_C, Use_SceneCapture) == 0x000154, "Member 'UShallowWaterSimComponent_C::Use_SceneCapture' has a wrong offset!");
static_assert(offsetof(UShallowWaterSimComponent_C, TerrainMode) == 0x000155, "Member 'UShallowWaterSimComponent_C::TerrainMode' has a wrong offset!");
static_assert(offsetof(UShallowWaterSimComponent_C, SubSteps) == 0x000158, "Member 'UShallowWaterSimComponent_C::SubSteps' has a wrong offset!");
static_assert(offsetof(UShallowWaterSimComponent_C, Manual_Advect_Material) == 0x000160, "Member 'UShallowWaterSimComponent_C::Manual_Advect_Material' has a wrong offset!");
static_assert(offsetof(UShallowWaterSimComponent_C, Manual_Advect_Velocity_Material) == 0x000168, "Member 'UShallowWaterSimComponent_C::Manual_Advect_Velocity_Material' has a wrong offset!");

}

