#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Error

#include "Basic.hpp"

#include "W_Error_classes.hpp"
#include "W_Error_parameters.hpp"


namespace SDK
{

// Function W_Error.W_Error_C.ExecuteUbergraph_W_Error
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Error_C::ExecuteUbergraph_W_Error(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Error_C", "ExecuteUbergraph_W_Error");

	Params::W_Error_C_ExecuteUbergraph_W_Error Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Error.W_Error_C.ToggleFocus
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsFocused                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UW_Error_C::ToggleFocus(bool IsFocused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Error_C", "ToggleFocus");

	Params::W_Error_C_ToggleFocus Parms{};

	Parms.IsFocused = IsFocused;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Error.W_Error_C.BndEvt__W_Error_UI_Menu_Button_K2Node_ComponentBoundEvent_0_OnClick__DelegateSignature
// (BlueprintEvent)

void UW_Error_C::BndEvt__W_Error_UI_Menu_Button_K2Node_ComponentBoundEvent_0_OnClick__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Error_C", "BndEvt__W_Error_UI_Menu_Button_K2Node_ComponentBoundEvent_0_OnClick__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Error.W_Error_C.ManualYes
// (BlueprintCallable, BlueprintEvent)

void UW_Error_C::ManualYes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Error_C", "ManualYes");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Error.W_Error_C.ShowError
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FText&                      Error                                                  (BlueprintVisible, BlueprintReadOnly, Parm)

void UW_Error_C::ShowError(const class FText& Error)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Error_C", "ShowError");

	Params::W_Error_C_ShowError Parms{};

	Parms.Error = std::move(Error);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Error.W_Error_C.ToggleHover
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsHovered_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UW_Error_C::ToggleHover(bool IsHovered_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Error_C", "ToggleHover");

	Params::W_Error_C_ToggleHover Parms{};

	Parms.IsHovered_0 = IsHovered_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Error.W_Error_C.ToggleEnabled
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsEnabled                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UW_Error_C::ToggleEnabled(bool IsEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Error_C", "ToggleEnabled");

	Params::W_Error_C_ToggleEnabled Parms{};

	Parms.IsEnabled = IsEnabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Error.W_Error_C.RefreshFocus
// (BlueprintCallable, BlueprintEvent)

void UW_Error_C::RefreshFocus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Error_C", "RefreshFocus");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Error.W_Error_C.UpdateConfirmation
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FText&                      Title                                                  (BlueprintVisible, BlueprintReadOnly, Parm)
// const class FText&                      Message                                                (BlueprintVisible, BlueprintReadOnly, Parm)
// E_Comfirmation                          ConfirmationFor_0                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Error_C::UpdateConfirmation(const class FText& Title, const class FText& Message, E_Comfirmation ConfirmationFor_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Error_C", "UpdateConfirmation");

	Params::W_Error_C_UpdateConfirmation Parms{};

	Parms.Title = std::move(Title);
	Parms.Message = std::move(Message);
	Parms.ConfirmationFor_0 = ConfirmationFor_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Error.W_Error_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UW_Error_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Error_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Error.W_Error_C.OnMouseButtonUp
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// const struct FPointerEvent&             MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UW_Error_C::OnMouseButtonUp(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Error_C", "OnMouseButtonUp");

	Params::W_Error_C_OnMouseButtonUp Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function W_Error.W_Error_C.PlayClickSound
// (Public, BlueprintCallable, BlueprintEvent)

void UW_Error_C::PlayClickSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Error_C", "PlayClickSound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Error.W_Error_C.PlayHoveredSound
// (Public, BlueprintCallable, BlueprintEvent)

void UW_Error_C::PlayHoveredSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Error_C", "PlayHoveredSound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Error.W_Error_C.OnPreviewKeyDown
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// const struct FKeyEvent&                 InKeyEvent                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UW_Error_C::OnPreviewKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Error_C", "OnPreviewKeyDown");

	Params::W_Error_C_OnPreviewKeyDown Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InKeyEvent = std::move(InKeyEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

