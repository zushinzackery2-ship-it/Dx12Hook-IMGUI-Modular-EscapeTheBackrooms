#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BI_ComputersEvents

#include "Basic.hpp"


namespace SDK::Params
{

// Function BI_ComputersEvents.BI_ComputersEvents_C.LaunchShortcut
// 0x0048 (0x0048 - 0x0000)
struct BI_ComputersEvents_C_LaunchShortcut final
{
public:
	int32                                         Program_ID;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Texture2D__if_applicatable_;                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Text__if_applicatable_;                            // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class USoundBase*                             Sounnd__if_applicatable_;                          // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFileMediaSource*                       Media__if_applicatable_;                           // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Level_Name__if_applicatable_;                      // 0x0038(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BI_ComputersEvents_C_LaunchShortcut) == 0x000008, "Wrong alignment on BI_ComputersEvents_C_LaunchShortcut");
static_assert(sizeof(BI_ComputersEvents_C_LaunchShortcut) == 0x000048, "Wrong size on BI_ComputersEvents_C_LaunchShortcut");
static_assert(offsetof(BI_ComputersEvents_C_LaunchShortcut, Program_ID) == 0x000000, "Member 'BI_ComputersEvents_C_LaunchShortcut::Program_ID' has a wrong offset!");
static_assert(offsetof(BI_ComputersEvents_C_LaunchShortcut, Texture2D__if_applicatable_) == 0x000008, "Member 'BI_ComputersEvents_C_LaunchShortcut::Texture2D__if_applicatable_' has a wrong offset!");
static_assert(offsetof(BI_ComputersEvents_C_LaunchShortcut, Text__if_applicatable_) == 0x000010, "Member 'BI_ComputersEvents_C_LaunchShortcut::Text__if_applicatable_' has a wrong offset!");
static_assert(offsetof(BI_ComputersEvents_C_LaunchShortcut, Sounnd__if_applicatable_) == 0x000028, "Member 'BI_ComputersEvents_C_LaunchShortcut::Sounnd__if_applicatable_' has a wrong offset!");
static_assert(offsetof(BI_ComputersEvents_C_LaunchShortcut, Media__if_applicatable_) == 0x000030, "Member 'BI_ComputersEvents_C_LaunchShortcut::Media__if_applicatable_' has a wrong offset!");
static_assert(offsetof(BI_ComputersEvents_C_LaunchShortcut, Level_Name__if_applicatable_) == 0x000038, "Member 'BI_ComputersEvents_C_LaunchShortcut::Level_Name__if_applicatable_' has a wrong offset!");

}

