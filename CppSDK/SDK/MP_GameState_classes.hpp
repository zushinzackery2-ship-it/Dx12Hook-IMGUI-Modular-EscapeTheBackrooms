#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MP_GameState

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "S_HubLevels_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass MP_GameState.MP_GameState_C
// 0x0080 (0x0310 - 0x0290)
class AMP_GameState_C final : public AGameState
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<class ABPCharacter_Demo_C*>            PlayersAlive;                                      // 0x02A0(0x0010)(Edit, BlueprintVisible, Net, DisableEditOnTemplate, DisableEditOnInstance)
	TMap<class FString, struct FS_HubLevels>      LevelsUnlocked;                                    // 0x02B0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class FString                                 MatchID;                                           // 0x0300(0x0010)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_MP_GameState(int32 EntryPoint);
	void SetMEGUnlocked();
	void ReceiveBeginPlay();
	void Generate_Encrypted_Name(const class FText& Level, class FString* Name_0);
	void GenerateUUID();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"MP_GameState_C">();
	}
	static class AMP_GameState_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AMP_GameState_C>();
	}
};
static_assert(alignof(AMP_GameState_C) == 0x000008, "Wrong alignment on AMP_GameState_C");
static_assert(sizeof(AMP_GameState_C) == 0x000310, "Wrong size on AMP_GameState_C");
static_assert(offsetof(AMP_GameState_C, UberGraphFrame) == 0x000290, "Member 'AMP_GameState_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AMP_GameState_C, DefaultSceneRoot) == 0x000298, "Member 'AMP_GameState_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AMP_GameState_C, PlayersAlive) == 0x0002A0, "Member 'AMP_GameState_C::PlayersAlive' has a wrong offset!");
static_assert(offsetof(AMP_GameState_C, LevelsUnlocked) == 0x0002B0, "Member 'AMP_GameState_C::LevelsUnlocked' has a wrong offset!");
static_assert(offsetof(AMP_GameState_C, MatchID) == 0x000300, "Member 'AMP_GameState_C::MatchID' has a wrong offset!");

}

