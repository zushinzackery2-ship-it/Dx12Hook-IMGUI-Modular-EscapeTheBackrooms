#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ScannerDirector

#include "Basic.hpp"

#include "BP_ScannerDirector_classes.hpp"
#include "BP_ScannerDirector_parameters.hpp"


namespace SDK
{

// Function BP_ScannerDirector.BP_ScannerDirector_C.ExecuteUbergraph_BP_ScannerDirector
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ScannerDirector_C::ExecuteUbergraph_BP_ScannerDirector(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ScannerDirector_C", "ExecuteUbergraph_BP_ScannerDirector");

	Params::BP_ScannerDirector_C_ExecuteUbergraph_BP_ScannerDirector Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ScannerDirector.BP_ScannerDirector_C.MC_LidarDot
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FHitResult&                HitResult                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// const struct FColor&                    Color                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ScannerDirector_C::MC_LidarDot(const struct FHitResult& HitResult, const struct FColor& Color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ScannerDirector_C", "MC_LidarDot");

	Params::BP_ScannerDirector_C_MC_LidarDot Parms{};

	Parms.HitResult = std::move(HitResult);
	Parms.Color = std::move(Color);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ScannerDirector.BP_ScannerDirector_C.ClearRenderTargets
// (BlueprintCallable, BlueprintEvent)

void ABP_ScannerDirector_C::ClearRenderTargets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ScannerDirector_C", "ClearRenderTargets");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ScannerDirector.BP_ScannerDirector_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_ScannerDirector_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ScannerDirector_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ScannerDirector.BP_ScannerDirector_C.CheckForExistingRT
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           HitActor                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              HitComponent                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UTextureRenderTarget2D**          RenderTarget                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ScannerDirector_C::CheckForExistingRT(class AActor* HitActor, class UPrimitiveComponent* HitComponent, class UTextureRenderTarget2D** RenderTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ScannerDirector_C", "CheckForExistingRT");

	Params::BP_ScannerDirector_C_CheckForExistingRT Parms{};

	Parms.HitActor = HitActor;
	Parms.HitComponent = HitComponent;

	UObject::ProcessEvent(Func, &Parms);

	if (RenderTarget != nullptr)
		*RenderTarget = Parms.RenderTarget;
}


// Function BP_ScannerDirector.BP_ScannerDirector_C.FixUVStretching
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   HitLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   HitNormal                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              HitComponent                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   FaceIndex                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector2D&                 HitUVLocation                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float*                                  FixedSize                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         FixedStretch                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ScannerDirector_C::FixUVStretching(const struct FVector& HitLocation, const struct FVector& HitNormal, class UPrimitiveComponent* HitComponent, int32 FaceIndex, const struct FVector2D& HitUVLocation, float* FixedSize, struct FVector* FixedStretch)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ScannerDirector_C", "FixUVStretching");

	Params::BP_ScannerDirector_C_FixUVStretching Parms{};

	Parms.HitLocation = std::move(HitLocation);
	Parms.HitNormal = std::move(HitNormal);
	Parms.HitComponent = HitComponent;
	Parms.FaceIndex = FaceIndex;
	Parms.HitUVLocation = std::move(HitUVLocation);

	UObject::ProcessEvent(Func, &Parms);

	if (FixedSize != nullptr)
		*FixedSize = Parms.FixedSize;

	if (FixedStretch != nullptr)
		*FixedStretch = std::move(Parms.FixedStretch);
}


// Function BP_ScannerDirector.BP_ScannerDirector_C.InitializeMaterials
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_ScannerDirector_C::InitializeMaterials()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ScannerDirector_C", "InitializeMaterials");

	UObject::ProcessEvent(Func, nullptr);
}

}

