#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Hound

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "AIModule_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_Hound.BP_Hound_C.ExecuteUbergraph_BP_Hound
// 0x0510 (0x0510 - 0x0000)
struct BP_Hound_C_ExecuteUbergraph_BP_Hound final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_2;                   // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_1;                   // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate;              // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName;                     // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_1;            // 0x002C(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   Temp_name_Variable;                                // 0x003C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EPathFollowingResult MovementResult)> K2Node_CreateDelegate_OutputDelegate_2;     // 0x0044(0x0010)(ZeroConstructor, NoDestructor)
	EPathFollowingResult                          K2Node_CustomEvent_MovementResult_1;               // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPathFollowingResult                          K2Node_CustomEvent_MovementResult;                 // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56[0x2];                                       // 0x0056(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EPathFollowingResult MovementResult)> K2Node_CreateDelegate_OutputDelegate_3;     // 0x0058(0x0010)(ZeroConstructor, NoDestructor)
	EPathFollowingResult                          Temp_byte_Variable;                                // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_8;                   // 0x006C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x0076(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_77[0x1];                                       // 0x0077(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_4;            // 0x0078(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable_2;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A[0x6];                                       // 0x008A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          CallFunc_GetAIController_ReturnValue;              // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAIC_Hound_C*                           K2Node_DynamicCast_AsAIC_Hound;                    // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A3[0x5];                                       // 0x00A3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPCharacter_Demo_C*                    K2Node_CustomEvent_Player_1;                       // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_5;            // 0x00B4(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPCharacter_Demo_C*                    K2Node_CustomEvent_Player;                         // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSoundAtLocation_ReturnValue;         // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_9;                   // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue; // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_1; // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_102[0x6];                                      // 0x0102(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPCharacter_Demo_C*                    K2Node_CustomEvent_Target;                         // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x3];                                      // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_3;                   // 0x0114(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_6;            // 0x011C(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12D[0x3];                                      // 0x012D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0130(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_161[0xF];                                      // 0x0161(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue_1;               // 0x0170(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x01A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x01AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x01B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C4[0x4];                                      // 0x01C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAIAsyncTaskBlueprintProxy*             CallFunc_CreateMoveToProxyObject_ReturnValue;      // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_7;            // 0x01D0(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E1[0x3];                                      // 0x01E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x01E4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EC[0x4];                                      // 0x01EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x01F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0200(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x020C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_20D[0x3];                                      // 0x020D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0210(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class ABPCharacter_Demo_C*                    K2Node_DynamicCast_AsBPCharacter_Demo;             // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A1[0x7];                                      // 0x02A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x02A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x02B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C4[0x4];                                      // 0x02C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPCharacter_Demo_C*                    K2Node_DynamicCast_AsBPCharacter_Demo_1;           // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanSeePlayer_CanSee;                      // 0x02D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x02D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanSeePlayer_CanSee_1;                    // 0x02D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x02D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D5[0x3];                                      // 0x02D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_4;                   // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_8;            // 0x02E0(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   Temp_name_Variable_1;                              // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Delay;                          // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue_1;            // 0x02FC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_304[0x4];                                      // 0x0304(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          CallFunc_GetAIController_ReturnValue_1;            // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue_2;            // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAIC_Hound_C*                           K2Node_DynamicCast_AsAIC_Hound_1;                  // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_321[0x3];                                      // 0x0321(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_5;                   // 0x0324(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_9;            // 0x032C(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue_3;            // 0x033C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_6;                   // 0x0344(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_10;           // 0x034C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_35C[0x4];                                      // 0x035C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_New_SaveGame_C*                     CallFunc_Load_Game_SaveGame;                       // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloat_ReturnValue;                  // 0x0368(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x036C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36D[0x3];                                      // 0x036D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetStunDuration_Delay;                    // 0x0378(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37C[0x4];                                      // 0x037C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_MyGameInstance_C*                   K2Node_DynamicCast_AsBP_My_Game_Instance;          // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0388(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0389(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38A[0x6];                                      // 0x038A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x0390(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_MyGameInstance_C*                   K2Node_DynamicCast_AsBP_My_Game_Instance_1;        // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x03A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A1[0x7];                                      // 0x03A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_2;            // 0x03A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B1[0x7];                                      // 0x03B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_MyGameInstance_C*                   K2Node_DynamicCast_AsBP_My_Game_Instance_2;        // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x03C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x03C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C2[0x2];                                      // 0x03C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x03C4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_1;  // 0x044C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_HasAuthority_ReturnValue_2;               // 0x04D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x04D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x04D6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D7[0x1];                                      // 0x04D7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          CallFunc_GetAIController_ReturnValue_2;            // 0x04D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAIC_Hound_C*                           K2Node_DynamicCast_AsAIC_Hound_2;                  // 0x04E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x04E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E9[0x3];                                      // 0x04E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_7;                   // 0x04EC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_11;           // 0x04F4(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable_2;               // 0x0504(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsConsoleBuild_ReturnValue;               // 0x0505(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Hound_C_ExecuteUbergraph_BP_Hound) == 0x000010, "Wrong alignment on BP_Hound_C_ExecuteUbergraph_BP_Hound");
static_assert(sizeof(BP_Hound_C_ExecuteUbergraph_BP_Hound) == 0x000510, "Wrong size on BP_Hound_C_ExecuteUbergraph_BP_Hound");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, EntryPoint) == 0x000000, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, K2Node_CustomEvent_NotifyName_2) == 0x000004, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::K2Node_CustomEvent_NotifyName_2' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, K2Node_CustomEvent_NotifyName_1) == 0x00000C, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::K2Node_CustomEvent_NotifyName_1' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, K2Node_CreateDelegate_OutputDelegate) == 0x000014, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, K2Node_CustomEvent_NotifyName) == 0x000024, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::K2Node_CustomEvent_NotifyName' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, K2Node_CreateDelegate_OutputDelegate_1) == 0x00002C, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, Temp_name_Variable) == 0x00003C, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, K2Node_CreateDelegate_OutputDelegate_2) == 0x000044, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, K2Node_CustomEvent_MovementResult_1) == 0x000054, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::K2Node_CustomEvent_MovementResult_1' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, K2Node_CustomEvent_MovementResult) == 0x000055, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::K2Node_CustomEvent_MovementResult' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, K2Node_CreateDelegate_OutputDelegate_3) == 0x000058, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, Temp_byte_Variable) == 0x000068, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, K2Node_CustomEvent_NotifyName_8) == 0x00006C, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::K2Node_CustomEvent_NotifyName_8' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, Temp_bool_IsClosed_Variable) == 0x000074, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, Temp_bool_Has_Been_Initd_Variable) == 0x000075, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, Temp_bool_IsClosed_Variable_1) == 0x000076, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, K2Node_CreateDelegate_OutputDelegate_4) == 0x000078, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, Temp_bool_IsClosed_Variable_2) == 0x000088, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::Temp_bool_IsClosed_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, Temp_bool_Has_Been_Initd_Variable_1) == 0x000089, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, CallFunc_GetAIController_ReturnValue) == 0x000090, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::CallFunc_GetAIController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, K2Node_DynamicCast_AsAIC_Hound) == 0x000098, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::K2Node_DynamicCast_AsAIC_Hound' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, K2Node_DynamicCast_bSuccess) == 0x0000A0, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, CallFunc_IsPlaying_ReturnValue) == 0x0000A1, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, CallFunc_HasAuthority_ReturnValue) == 0x0000A2, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, K2Node_CustomEvent_Player_1) == 0x0000A8, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::K2Node_CustomEvent_Player_1' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, CallFunc_IsValid_ReturnValue) == 0x0000B0, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, K2Node_CreateDelegate_OutputDelegate_5) == 0x0000B4, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, K2Node_CustomEvent_Player) == 0x0000C8, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::K2Node_CustomEvent_Player' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0000D0, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, CallFunc_SpawnSoundAtLocation_ReturnValue) == 0x0000E0, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::CallFunc_SpawnSoundAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, K2Node_CustomEvent_NotifyName_9) == 0x0000E8, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::K2Node_CustomEvent_NotifyName_9' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue) == 0x0000F0, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_1) == 0x0000F8, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, CallFunc_IsValid_ReturnValue_1) == 0x000100, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, CallFunc_IsValid_ReturnValue_2) == 0x000101, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, K2Node_CustomEvent_Target) == 0x000108, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::K2Node_CustomEvent_Target' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, CallFunc_IsLocallyControlled_ReturnValue) == 0x000110, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, K2Node_CustomEvent_NotifyName_3) == 0x000114, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::K2Node_CustomEvent_NotifyName_3' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, K2Node_CreateDelegate_OutputDelegate_6) == 0x00011C, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, CallFunc_IsValid_ReturnValue_3) == 0x00012C, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, CallFunc_GetTransform_ReturnValue) == 0x000130, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, CallFunc_HasAuthority_ReturnValue_1) == 0x000160, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, CallFunc_GetTransform_ReturnValue_1) == 0x000170, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::CallFunc_GetTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, CallFunc_BreakTransform_Location) == 0x0001A0, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, CallFunc_BreakTransform_Rotation) == 0x0001AC, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, CallFunc_BreakTransform_Scale) == 0x0001B8, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, CallFunc_CreateMoveToProxyObject_ReturnValue) == 0x0001C8, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::CallFunc_CreateMoveToProxyObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, K2Node_CreateDelegate_OutputDelegate_7) == 0x0001D0, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, CallFunc_IsValid_ReturnValue_4) == 0x0001E0, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, CallFunc_MakeLiteralName_ReturnValue) == 0x0001E4, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x0001F0, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, K2Node_ComponentBoundEvent_OtherActor_1) == 0x0001F8, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000200, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x000208, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, K2Node_ComponentBoundEvent_bFromSweep) == 0x00020C, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, K2Node_ComponentBoundEvent_SweepResult) == 0x000210, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, K2Node_DynamicCast_AsBPCharacter_Demo) == 0x000298, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::K2Node_DynamicCast_AsBPCharacter_Demo' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, K2Node_DynamicCast_bSuccess_1) == 0x0002A0, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x0002A8, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, K2Node_ComponentBoundEvent_OtherActor) == 0x0002B0, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, K2Node_ComponentBoundEvent_OtherComp) == 0x0002B8, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x0002C0, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, K2Node_DynamicCast_AsBPCharacter_Demo_1) == 0x0002C8, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::K2Node_DynamicCast_AsBPCharacter_Demo_1' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, K2Node_DynamicCast_bSuccess_2) == 0x0002D0, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, CallFunc_CanSeePlayer_CanSee) == 0x0002D1, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::CallFunc_CanSeePlayer_CanSee' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, CallFunc_BooleanAND_ReturnValue) == 0x0002D2, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, CallFunc_CanSeePlayer_CanSee_1) == 0x0002D3, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::CallFunc_CanSeePlayer_CanSee_1' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, CallFunc_BooleanAND_ReturnValue_1) == 0x0002D4, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, K2Node_CustomEvent_NotifyName_4) == 0x0002D8, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::K2Node_CustomEvent_NotifyName_4' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, K2Node_CreateDelegate_OutputDelegate_8) == 0x0002E0, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, Temp_name_Variable_1) == 0x0002F0, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, K2Node_CustomEvent_Delay) == 0x0002F8, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::K2Node_CustomEvent_Delay' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, CallFunc_MakeLiteralName_ReturnValue_1) == 0x0002FC, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::CallFunc_MakeLiteralName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, CallFunc_GetAIController_ReturnValue_1) == 0x000308, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::CallFunc_GetAIController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, CallFunc_MakeLiteralName_ReturnValue_2) == 0x000310, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::CallFunc_MakeLiteralName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, K2Node_DynamicCast_AsAIC_Hound_1) == 0x000318, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::K2Node_DynamicCast_AsAIC_Hound_1' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, K2Node_DynamicCast_bSuccess_3) == 0x000320, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, K2Node_CustomEvent_NotifyName_5) == 0x000324, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::K2Node_CustomEvent_NotifyName_5' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, K2Node_CreateDelegate_OutputDelegate_9) == 0x00032C, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, CallFunc_MakeLiteralName_ReturnValue_3) == 0x00033C, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::CallFunc_MakeLiteralName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, K2Node_CustomEvent_NotifyName_6) == 0x000344, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::K2Node_CustomEvent_NotifyName_6' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, K2Node_CreateDelegate_OutputDelegate_10) == 0x00034C, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, CallFunc_Load_Game_SaveGame) == 0x000360, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::CallFunc_Load_Game_SaveGame' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, CallFunc_RandomFloat_ReturnValue) == 0x000368, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::CallFunc_RandomFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x00036C, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, CallFunc_GetGameInstance_ReturnValue) == 0x000370, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, CallFunc_GetStunDuration_Delay) == 0x000378, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::CallFunc_GetStunDuration_Delay' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, K2Node_DynamicCast_AsBP_My_Game_Instance) == 0x000380, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::K2Node_DynamicCast_AsBP_My_Game_Instance' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, K2Node_DynamicCast_bSuccess_4) == 0x000388, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, K2Node_SwitchEnum_CmpSuccess) == 0x000389, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, CallFunc_GetGameInstance_ReturnValue_1) == 0x000390, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, K2Node_DynamicCast_AsBP_My_Game_Instance_1) == 0x000398, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::K2Node_DynamicCast_AsBP_My_Game_Instance_1' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, K2Node_DynamicCast_bSuccess_5) == 0x0003A0, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, CallFunc_GetGameInstance_ReturnValue_2) == 0x0003A8, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::CallFunc_GetGameInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, K2Node_SwitchEnum_CmpSuccess_1) == 0x0003B0, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, K2Node_DynamicCast_AsBP_My_Game_Instance_2) == 0x0003B8, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::K2Node_DynamicCast_AsBP_My_Game_Instance_2' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, K2Node_DynamicCast_bSuccess_6) == 0x0003C0, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, K2Node_SwitchEnum_CmpSuccess_2) == 0x0003C1, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x0003C4, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, CallFunc_K2_SetRelativeLocation_SweepHitResult_1) == 0x00044C, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::CallFunc_K2_SetRelativeLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, CallFunc_HasAuthority_ReturnValue_2) == 0x0004D4, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::CallFunc_HasAuthority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, CallFunc_Not_PreBool_ReturnValue) == 0x0004D5, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, CallFunc_BooleanAND_ReturnValue_2) == 0x0004D6, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, CallFunc_GetAIController_ReturnValue_2) == 0x0004D8, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::CallFunc_GetAIController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, K2Node_DynamicCast_AsAIC_Hound_2) == 0x0004E0, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::K2Node_DynamicCast_AsAIC_Hound_2' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, K2Node_DynamicCast_bSuccess_7) == 0x0004E8, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, K2Node_CustomEvent_NotifyName_7) == 0x0004EC, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::K2Node_CustomEvent_NotifyName_7' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, K2Node_CreateDelegate_OutputDelegate_11) == 0x0004F4, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::K2Node_CreateDelegate_OutputDelegate_11' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, Temp_bool_Has_Been_Initd_Variable_2) == 0x000504, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::Temp_bool_Has_Been_Initd_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_ExecuteUbergraph_BP_Hound, CallFunc_IsConsoleBuild_ReturnValue) == 0x000505, "Member 'BP_Hound_C_ExecuteUbergraph_BP_Hound::CallFunc_IsConsoleBuild_ReturnValue' has a wrong offset!");

// Function BP_Hound.BP_Hound_C.MC_Stop
// 0x0004 (0x0004 - 0x0000)
struct BP_Hound_C_MC_Stop final
{
public:
	float                                         Delay;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Hound_C_MC_Stop) == 0x000004, "Wrong alignment on BP_Hound_C_MC_Stop");
static_assert(sizeof(BP_Hound_C_MC_Stop) == 0x000004, "Wrong size on BP_Hound_C_MC_Stop");
static_assert(offsetof(BP_Hound_C_MC_Stop, Delay) == 0x000000, "Member 'BP_Hound_C_MC_Stop::Delay' has a wrong offset!");

// Function BP_Hound.BP_Hound_C.BndEvt__BP_Hound_KillPlayer_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_Hound_C_BndEvt__BP_Hound_KillPlayer_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Hound_C_BndEvt__BP_Hound_KillPlayer_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_Hound_C_BndEvt__BP_Hound_KillPlayer_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_Hound_C_BndEvt__BP_Hound_KillPlayer_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on BP_Hound_C_BndEvt__BP_Hound_KillPlayer_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_Hound_C_BndEvt__BP_Hound_KillPlayer_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_Hound_C_BndEvt__BP_Hound_KillPlayer_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_BndEvt__BP_Hound_KillPlayer_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_Hound_C_BndEvt__BP_Hound_KillPlayer_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_BndEvt__BP_Hound_KillPlayer_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_Hound_C_BndEvt__BP_Hound_KillPlayer_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_BndEvt__BP_Hound_KillPlayer_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_Hound_C_BndEvt__BP_Hound_KillPlayer_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function BP_Hound.BP_Hound_C.BndEvt__BP_Hound_KillPlayer_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct BP_Hound_C_BndEvt__BP_Hound_KillPlayer_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_Hound_C_BndEvt__BP_Hound_KillPlayer_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_Hound_C_BndEvt__BP_Hound_KillPlayer_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_Hound_C_BndEvt__BP_Hound_KillPlayer_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on BP_Hound_C_BndEvt__BP_Hound_KillPlayer_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_Hound_C_BndEvt__BP_Hound_KillPlayer_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_Hound_C_BndEvt__BP_Hound_KillPlayer_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_BndEvt__BP_Hound_KillPlayer_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_Hound_C_BndEvt__BP_Hound_KillPlayer_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_BndEvt__BP_Hound_KillPlayer_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_Hound_C_BndEvt__BP_Hound_KillPlayer_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_BndEvt__BP_Hound_KillPlayer_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_Hound_C_BndEvt__BP_Hound_KillPlayer_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_BndEvt__BP_Hound_KillPlayer_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_Hound_C_BndEvt__BP_Hound_KillPlayer_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_BndEvt__BP_Hound_KillPlayer_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_Hound_C_BndEvt__BP_Hound_KillPlayer_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_Hound.BP_Hound_C.MC_KillAnimation
// 0x0008 (0x0008 - 0x0000)
struct BP_Hound_C_MC_KillAnimation final
{
public:
	class ABPCharacter_Demo_C*                    Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Hound_C_MC_KillAnimation) == 0x000008, "Wrong alignment on BP_Hound_C_MC_KillAnimation");
static_assert(sizeof(BP_Hound_C_MC_KillAnimation) == 0x000008, "Wrong size on BP_Hound_C_MC_KillAnimation");
static_assert(offsetof(BP_Hound_C_MC_KillAnimation, Target) == 0x000000, "Member 'BP_Hound_C_MC_KillAnimation::Target' has a wrong offset!");

// Function BP_Hound.BP_Hound_C.Jumpscare
// 0x0008 (0x0008 - 0x0000)
struct BP_Hound_C_Jumpscare final
{
public:
	class ABPCharacter_Demo_C*                    Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Hound_C_Jumpscare) == 0x000008, "Wrong alignment on BP_Hound_C_Jumpscare");
static_assert(sizeof(BP_Hound_C_Jumpscare) == 0x000008, "Wrong size on BP_Hound_C_Jumpscare");
static_assert(offsetof(BP_Hound_C_Jumpscare, Player) == 0x000000, "Member 'BP_Hound_C_Jumpscare::Player' has a wrong offset!");

// Function BP_Hound.BP_Hound_C.AttackPlayer
// 0x0008 (0x0008 - 0x0000)
struct BP_Hound_C_AttackPlayer final
{
public:
	class ABPCharacter_Demo_C*                    Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Hound_C_AttackPlayer) == 0x000008, "Wrong alignment on BP_Hound_C_AttackPlayer");
static_assert(sizeof(BP_Hound_C_AttackPlayer) == 0x000008, "Wrong size on BP_Hound_C_AttackPlayer");
static_assert(offsetof(BP_Hound_C_AttackPlayer, Player) == 0x000000, "Member 'BP_Hound_C_AttackPlayer::Player' has a wrong offset!");

// Function BP_Hound.BP_Hound_C.OnSuccess_D233563A4C47828202C239AEFB9124B7
// 0x0001 (0x0001 - 0x0000)
struct BP_Hound_C_OnSuccess_D233563A4C47828202C239AEFB9124B7 final
{
public:
	EPathFollowingResult                          MovementResult;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Hound_C_OnSuccess_D233563A4C47828202C239AEFB9124B7) == 0x000001, "Wrong alignment on BP_Hound_C_OnSuccess_D233563A4C47828202C239AEFB9124B7");
static_assert(sizeof(BP_Hound_C_OnSuccess_D233563A4C47828202C239AEFB9124B7) == 0x000001, "Wrong size on BP_Hound_C_OnSuccess_D233563A4C47828202C239AEFB9124B7");
static_assert(offsetof(BP_Hound_C_OnSuccess_D233563A4C47828202C239AEFB9124B7, MovementResult) == 0x000000, "Member 'BP_Hound_C_OnSuccess_D233563A4C47828202C239AEFB9124B7::MovementResult' has a wrong offset!");

// Function BP_Hound.BP_Hound_C.OnFail_D233563A4C47828202C239AEFB9124B7
// 0x0001 (0x0001 - 0x0000)
struct BP_Hound_C_OnFail_D233563A4C47828202C239AEFB9124B7 final
{
public:
	EPathFollowingResult                          MovementResult;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Hound_C_OnFail_D233563A4C47828202C239AEFB9124B7) == 0x000001, "Wrong alignment on BP_Hound_C_OnFail_D233563A4C47828202C239AEFB9124B7");
static_assert(sizeof(BP_Hound_C_OnFail_D233563A4C47828202C239AEFB9124B7) == 0x000001, "Wrong size on BP_Hound_C_OnFail_D233563A4C47828202C239AEFB9124B7");
static_assert(offsetof(BP_Hound_C_OnFail_D233563A4C47828202C239AEFB9124B7, MovementResult) == 0x000000, "Member 'BP_Hound_C_OnFail_D233563A4C47828202C239AEFB9124B7::MovementResult' has a wrong offset!");

// Function BP_Hound.BP_Hound_C.OnCompleted_8DA5DC9D4777A3A447018893354E8C0B
// 0x0008 (0x0008 - 0x0000)
struct BP_Hound_C_OnCompleted_8DA5DC9D4777A3A447018893354E8C0B final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Hound_C_OnCompleted_8DA5DC9D4777A3A447018893354E8C0B) == 0x000004, "Wrong alignment on BP_Hound_C_OnCompleted_8DA5DC9D4777A3A447018893354E8C0B");
static_assert(sizeof(BP_Hound_C_OnCompleted_8DA5DC9D4777A3A447018893354E8C0B) == 0x000008, "Wrong size on BP_Hound_C_OnCompleted_8DA5DC9D4777A3A447018893354E8C0B");
static_assert(offsetof(BP_Hound_C_OnCompleted_8DA5DC9D4777A3A447018893354E8C0B, NotifyName) == 0x000000, "Member 'BP_Hound_C_OnCompleted_8DA5DC9D4777A3A447018893354E8C0B::NotifyName' has a wrong offset!");

// Function BP_Hound.BP_Hound_C.OnBlendOut_8DA5DC9D4777A3A447018893354E8C0B
// 0x0008 (0x0008 - 0x0000)
struct BP_Hound_C_OnBlendOut_8DA5DC9D4777A3A447018893354E8C0B final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Hound_C_OnBlendOut_8DA5DC9D4777A3A447018893354E8C0B) == 0x000004, "Wrong alignment on BP_Hound_C_OnBlendOut_8DA5DC9D4777A3A447018893354E8C0B");
static_assert(sizeof(BP_Hound_C_OnBlendOut_8DA5DC9D4777A3A447018893354E8C0B) == 0x000008, "Wrong size on BP_Hound_C_OnBlendOut_8DA5DC9D4777A3A447018893354E8C0B");
static_assert(offsetof(BP_Hound_C_OnBlendOut_8DA5DC9D4777A3A447018893354E8C0B, NotifyName) == 0x000000, "Member 'BP_Hound_C_OnBlendOut_8DA5DC9D4777A3A447018893354E8C0B::NotifyName' has a wrong offset!");

// Function BP_Hound.BP_Hound_C.OnInterrupted_8DA5DC9D4777A3A447018893354E8C0B
// 0x0008 (0x0008 - 0x0000)
struct BP_Hound_C_OnInterrupted_8DA5DC9D4777A3A447018893354E8C0B final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Hound_C_OnInterrupted_8DA5DC9D4777A3A447018893354E8C0B) == 0x000004, "Wrong alignment on BP_Hound_C_OnInterrupted_8DA5DC9D4777A3A447018893354E8C0B");
static_assert(sizeof(BP_Hound_C_OnInterrupted_8DA5DC9D4777A3A447018893354E8C0B) == 0x000008, "Wrong size on BP_Hound_C_OnInterrupted_8DA5DC9D4777A3A447018893354E8C0B");
static_assert(offsetof(BP_Hound_C_OnInterrupted_8DA5DC9D4777A3A447018893354E8C0B, NotifyName) == 0x000000, "Member 'BP_Hound_C_OnInterrupted_8DA5DC9D4777A3A447018893354E8C0B::NotifyName' has a wrong offset!");

// Function BP_Hound.BP_Hound_C.OnNotifyBegin_8DA5DC9D4777A3A447018893354E8C0B
// 0x0008 (0x0008 - 0x0000)
struct BP_Hound_C_OnNotifyBegin_8DA5DC9D4777A3A447018893354E8C0B final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Hound_C_OnNotifyBegin_8DA5DC9D4777A3A447018893354E8C0B) == 0x000004, "Wrong alignment on BP_Hound_C_OnNotifyBegin_8DA5DC9D4777A3A447018893354E8C0B");
static_assert(sizeof(BP_Hound_C_OnNotifyBegin_8DA5DC9D4777A3A447018893354E8C0B) == 0x000008, "Wrong size on BP_Hound_C_OnNotifyBegin_8DA5DC9D4777A3A447018893354E8C0B");
static_assert(offsetof(BP_Hound_C_OnNotifyBegin_8DA5DC9D4777A3A447018893354E8C0B, NotifyName) == 0x000000, "Member 'BP_Hound_C_OnNotifyBegin_8DA5DC9D4777A3A447018893354E8C0B::NotifyName' has a wrong offset!");

// Function BP_Hound.BP_Hound_C.OnNotifyEnd_8DA5DC9D4777A3A447018893354E8C0B
// 0x0008 (0x0008 - 0x0000)
struct BP_Hound_C_OnNotifyEnd_8DA5DC9D4777A3A447018893354E8C0B final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Hound_C_OnNotifyEnd_8DA5DC9D4777A3A447018893354E8C0B) == 0x000004, "Wrong alignment on BP_Hound_C_OnNotifyEnd_8DA5DC9D4777A3A447018893354E8C0B");
static_assert(sizeof(BP_Hound_C_OnNotifyEnd_8DA5DC9D4777A3A447018893354E8C0B) == 0x000008, "Wrong size on BP_Hound_C_OnNotifyEnd_8DA5DC9D4777A3A447018893354E8C0B");
static_assert(offsetof(BP_Hound_C_OnNotifyEnd_8DA5DC9D4777A3A447018893354E8C0B, NotifyName) == 0x000000, "Member 'BP_Hound_C_OnNotifyEnd_8DA5DC9D4777A3A447018893354E8C0B::NotifyName' has a wrong offset!");

// Function BP_Hound.BP_Hound_C.OnCompleted_61765EC24FF4E248EA3B909C032488D4
// 0x0008 (0x0008 - 0x0000)
struct BP_Hound_C_OnCompleted_61765EC24FF4E248EA3B909C032488D4 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Hound_C_OnCompleted_61765EC24FF4E248EA3B909C032488D4) == 0x000004, "Wrong alignment on BP_Hound_C_OnCompleted_61765EC24FF4E248EA3B909C032488D4");
static_assert(sizeof(BP_Hound_C_OnCompleted_61765EC24FF4E248EA3B909C032488D4) == 0x000008, "Wrong size on BP_Hound_C_OnCompleted_61765EC24FF4E248EA3B909C032488D4");
static_assert(offsetof(BP_Hound_C_OnCompleted_61765EC24FF4E248EA3B909C032488D4, NotifyName) == 0x000000, "Member 'BP_Hound_C_OnCompleted_61765EC24FF4E248EA3B909C032488D4::NotifyName' has a wrong offset!");

// Function BP_Hound.BP_Hound_C.OnBlendOut_61765EC24FF4E248EA3B909C032488D4
// 0x0008 (0x0008 - 0x0000)
struct BP_Hound_C_OnBlendOut_61765EC24FF4E248EA3B909C032488D4 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Hound_C_OnBlendOut_61765EC24FF4E248EA3B909C032488D4) == 0x000004, "Wrong alignment on BP_Hound_C_OnBlendOut_61765EC24FF4E248EA3B909C032488D4");
static_assert(sizeof(BP_Hound_C_OnBlendOut_61765EC24FF4E248EA3B909C032488D4) == 0x000008, "Wrong size on BP_Hound_C_OnBlendOut_61765EC24FF4E248EA3B909C032488D4");
static_assert(offsetof(BP_Hound_C_OnBlendOut_61765EC24FF4E248EA3B909C032488D4, NotifyName) == 0x000000, "Member 'BP_Hound_C_OnBlendOut_61765EC24FF4E248EA3B909C032488D4::NotifyName' has a wrong offset!");

// Function BP_Hound.BP_Hound_C.OnInterrupted_61765EC24FF4E248EA3B909C032488D4
// 0x0008 (0x0008 - 0x0000)
struct BP_Hound_C_OnInterrupted_61765EC24FF4E248EA3B909C032488D4 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Hound_C_OnInterrupted_61765EC24FF4E248EA3B909C032488D4) == 0x000004, "Wrong alignment on BP_Hound_C_OnInterrupted_61765EC24FF4E248EA3B909C032488D4");
static_assert(sizeof(BP_Hound_C_OnInterrupted_61765EC24FF4E248EA3B909C032488D4) == 0x000008, "Wrong size on BP_Hound_C_OnInterrupted_61765EC24FF4E248EA3B909C032488D4");
static_assert(offsetof(BP_Hound_C_OnInterrupted_61765EC24FF4E248EA3B909C032488D4, NotifyName) == 0x000000, "Member 'BP_Hound_C_OnInterrupted_61765EC24FF4E248EA3B909C032488D4::NotifyName' has a wrong offset!");

// Function BP_Hound.BP_Hound_C.OnNotifyBegin_61765EC24FF4E248EA3B909C032488D4
// 0x0008 (0x0008 - 0x0000)
struct BP_Hound_C_OnNotifyBegin_61765EC24FF4E248EA3B909C032488D4 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Hound_C_OnNotifyBegin_61765EC24FF4E248EA3B909C032488D4) == 0x000004, "Wrong alignment on BP_Hound_C_OnNotifyBegin_61765EC24FF4E248EA3B909C032488D4");
static_assert(sizeof(BP_Hound_C_OnNotifyBegin_61765EC24FF4E248EA3B909C032488D4) == 0x000008, "Wrong size on BP_Hound_C_OnNotifyBegin_61765EC24FF4E248EA3B909C032488D4");
static_assert(offsetof(BP_Hound_C_OnNotifyBegin_61765EC24FF4E248EA3B909C032488D4, NotifyName) == 0x000000, "Member 'BP_Hound_C_OnNotifyBegin_61765EC24FF4E248EA3B909C032488D4::NotifyName' has a wrong offset!");

// Function BP_Hound.BP_Hound_C.OnNotifyEnd_61765EC24FF4E248EA3B909C032488D4
// 0x0008 (0x0008 - 0x0000)
struct BP_Hound_C_OnNotifyEnd_61765EC24FF4E248EA3B909C032488D4 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Hound_C_OnNotifyEnd_61765EC24FF4E248EA3B909C032488D4) == 0x000004, "Wrong alignment on BP_Hound_C_OnNotifyEnd_61765EC24FF4E248EA3B909C032488D4");
static_assert(sizeof(BP_Hound_C_OnNotifyEnd_61765EC24FF4E248EA3B909C032488D4) == 0x000008, "Wrong size on BP_Hound_C_OnNotifyEnd_61765EC24FF4E248EA3B909C032488D4");
static_assert(offsetof(BP_Hound_C_OnNotifyEnd_61765EC24FF4E248EA3B909C032488D4, NotifyName) == 0x000000, "Member 'BP_Hound_C_OnNotifyEnd_61765EC24FF4E248EA3B909C032488D4::NotifyName' has a wrong offset!");

// Function BP_Hound.BP_Hound_C.LookAtEntity
// 0x0048 (0x0048 - 0x0000)
struct BP_Hound_C_LookAtEntity final
{
public:
	class ABPCharacter_Demo_C*                    Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Hound_C_LookAtEntity) == 0x000008, "Wrong alignment on BP_Hound_C_LookAtEntity");
static_assert(sizeof(BP_Hound_C_LookAtEntity) == 0x000048, "Wrong size on BP_Hound_C_LookAtEntity");
static_assert(offsetof(BP_Hound_C_LookAtEntity, Target) == 0x000000, "Member 'BP_Hound_C_LookAtEntity::Target' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_LookAtEntity, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000008, "Member 'BP_Hound_C_LookAtEntity::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_LookAtEntity, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000014, "Member 'BP_Hound_C_LookAtEntity::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_LookAtEntity, CallFunc_FindLookAtRotation_ReturnValue) == 0x000020, "Member 'BP_Hound_C_LookAtEntity::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_LookAtEntity, CallFunc_BreakRotator_Roll) == 0x00002C, "Member 'BP_Hound_C_LookAtEntity::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_LookAtEntity, CallFunc_BreakRotator_Pitch) == 0x000030, "Member 'BP_Hound_C_LookAtEntity::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_LookAtEntity, CallFunc_BreakRotator_Yaw) == 0x000034, "Member 'BP_Hound_C_LookAtEntity::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_LookAtEntity, CallFunc_MakeRotator_ReturnValue) == 0x000038, "Member 'BP_Hound_C_LookAtEntity::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_LookAtEntity, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000044, "Member 'BP_Hound_C_LookAtEntity::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");

// Function BP_Hound.BP_Hound_C.OnRep_IsTargetting
// 0x0048 (0x0048 - 0x0000)
struct BP_Hound_C_OnRep_IsTargetting final
{
public:
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPCharacter_Demo_C*                    K2Node_DynamicCast_AsBPCharacter_Demo;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Get_Item;                           // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item_1;                         // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_1;         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABPCharacter_Demo_C*                    K2Node_DynamicCast_AsBPCharacter_Demo_1;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Hound_C_OnRep_IsTargetting) == 0x000008, "Wrong alignment on BP_Hound_C_OnRep_IsTargetting");
static_assert(sizeof(BP_Hound_C_OnRep_IsTargetting) == 0x000048, "Wrong size on BP_Hound_C_OnRep_IsTargetting");
static_assert(offsetof(BP_Hound_C_OnRep_IsTargetting, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000000, "Member 'BP_Hound_C_OnRep_IsTargetting::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_OnRep_IsTargetting, CallFunc_HasAuthority_ReturnValue) == 0x000008, "Member 'BP_Hound_C_OnRep_IsTargetting::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_OnRep_IsTargetting, K2Node_DynamicCast_AsBPCharacter_Demo) == 0x000010, "Member 'BP_Hound_C_OnRep_IsTargetting::K2Node_DynamicCast_AsBPCharacter_Demo' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_OnRep_IsTargetting, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_Hound_C_OnRep_IsTargetting::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_OnRep_IsTargetting, CallFunc_HasAuthority_ReturnValue_1) == 0x000019, "Member 'BP_Hound_C_OnRep_IsTargetting::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_OnRep_IsTargetting, CallFunc_Array_Get_Item) == 0x00001C, "Member 'BP_Hound_C_OnRep_IsTargetting::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_OnRep_IsTargetting, CallFunc_Array_Get_Item_1) == 0x000024, "Member 'BP_Hound_C_OnRep_IsTargetting::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_OnRep_IsTargetting, CallFunc_GetPlayerCharacter_ReturnValue_1) == 0x000030, "Member 'BP_Hound_C_OnRep_IsTargetting::CallFunc_GetPlayerCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_OnRep_IsTargetting, K2Node_DynamicCast_AsBPCharacter_Demo_1) == 0x000038, "Member 'BP_Hound_C_OnRep_IsTargetting::K2Node_DynamicCast_AsBPCharacter_Demo_1' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_OnRep_IsTargetting, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'BP_Hound_C_OnRep_IsTargetting::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function BP_Hound.BP_Hound_C.LookAtTarget
// 0x0048 (0x0048 - 0x0000)
struct BP_Hound_C_LookAtTarget final
{
public:
	class ABPCharacter_Demo_C*                    Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Hound_C_LookAtTarget) == 0x000008, "Wrong alignment on BP_Hound_C_LookAtTarget");
static_assert(sizeof(BP_Hound_C_LookAtTarget) == 0x000048, "Wrong size on BP_Hound_C_LookAtTarget");
static_assert(offsetof(BP_Hound_C_LookAtTarget, Target) == 0x000000, "Member 'BP_Hound_C_LookAtTarget::Target' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_LookAtTarget, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000008, "Member 'BP_Hound_C_LookAtTarget::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_LookAtTarget, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000014, "Member 'BP_Hound_C_LookAtTarget::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_LookAtTarget, CallFunc_FindLookAtRotation_ReturnValue) == 0x000020, "Member 'BP_Hound_C_LookAtTarget::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_LookAtTarget, CallFunc_BreakRotator_Roll) == 0x00002C, "Member 'BP_Hound_C_LookAtTarget::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_LookAtTarget, CallFunc_BreakRotator_Pitch) == 0x000030, "Member 'BP_Hound_C_LookAtTarget::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_LookAtTarget, CallFunc_BreakRotator_Yaw) == 0x000034, "Member 'BP_Hound_C_LookAtTarget::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_LookAtTarget, CallFunc_MakeRotator_ReturnValue) == 0x000038, "Member 'BP_Hound_C_LookAtTarget::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_LookAtTarget, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000044, "Member 'BP_Hound_C_LookAtTarget::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");

// Function BP_Hound.BP_Hound_C.CanSeePlayer
// 0x0158 (0x0158 - 0x0000)
struct BP_Hound_C_CanSeePlayer final
{
public:
	class ABPCharacter_Demo_C*                    Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanSee;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABPCharacter_Demo_C*>            CallFunc_GetAllActorsOfClass_OutActors;            // 0x0028(0x0010)(ReferenceParm)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0038(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C3[0x1];                                       // 0x00C3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0110(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x012C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0138(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_145[0x3];                                      // 0x0145(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0148(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Hound_C_CanSeePlayer) == 0x000008, "Wrong alignment on BP_Hound_C_CanSeePlayer");
static_assert(sizeof(BP_Hound_C_CanSeePlayer) == 0x000158, "Wrong size on BP_Hound_C_CanSeePlayer");
static_assert(offsetof(BP_Hound_C_CanSeePlayer, Target) == 0x000000, "Member 'BP_Hound_C_CanSeePlayer::Target' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_CanSeePlayer, CanSee) == 0x000008, "Member 'BP_Hound_C_CanSeePlayer::CanSee' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_CanSeePlayer, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'BP_Hound_C_CanSeePlayer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_CanSeePlayer, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00000C, "Member 'BP_Hound_C_CanSeePlayer::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_CanSeePlayer, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000018, "Member 'BP_Hound_C_CanSeePlayer::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_CanSeePlayer, CallFunc_GetAllActorsOfClass_OutActors) == 0x000028, "Member 'BP_Hound_C_CanSeePlayer::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_CanSeePlayer, CallFunc_LineTraceSingle_OutHit) == 0x000038, "Member 'BP_Hound_C_CanSeePlayer::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_CanSeePlayer, CallFunc_LineTraceSingle_ReturnValue) == 0x0000C0, "Member 'BP_Hound_C_CanSeePlayer::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_CanSeePlayer, CallFunc_BreakHitResult_bBlockingHit) == 0x0000C1, "Member 'BP_Hound_C_CanSeePlayer::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_CanSeePlayer, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000C2, "Member 'BP_Hound_C_CanSeePlayer::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_CanSeePlayer, CallFunc_BreakHitResult_Time) == 0x0000C4, "Member 'BP_Hound_C_CanSeePlayer::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_CanSeePlayer, CallFunc_BreakHitResult_Distance) == 0x0000C8, "Member 'BP_Hound_C_CanSeePlayer::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_CanSeePlayer, CallFunc_BreakHitResult_Location) == 0x0000CC, "Member 'BP_Hound_C_CanSeePlayer::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_CanSeePlayer, CallFunc_BreakHitResult_ImpactPoint) == 0x0000D8, "Member 'BP_Hound_C_CanSeePlayer::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_CanSeePlayer, CallFunc_BreakHitResult_Normal) == 0x0000E4, "Member 'BP_Hound_C_CanSeePlayer::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_CanSeePlayer, CallFunc_BreakHitResult_ImpactNormal) == 0x0000F0, "Member 'BP_Hound_C_CanSeePlayer::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_CanSeePlayer, CallFunc_BreakHitResult_PhysMat) == 0x000100, "Member 'BP_Hound_C_CanSeePlayer::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_CanSeePlayer, CallFunc_BreakHitResult_HitActor) == 0x000108, "Member 'BP_Hound_C_CanSeePlayer::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_CanSeePlayer, CallFunc_BreakHitResult_HitComponent) == 0x000110, "Member 'BP_Hound_C_CanSeePlayer::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_CanSeePlayer, CallFunc_BreakHitResult_HitBoneName) == 0x000118, "Member 'BP_Hound_C_CanSeePlayer::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_CanSeePlayer, CallFunc_BreakHitResult_HitItem) == 0x000120, "Member 'BP_Hound_C_CanSeePlayer::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_CanSeePlayer, CallFunc_BreakHitResult_ElementIndex) == 0x000124, "Member 'BP_Hound_C_CanSeePlayer::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_CanSeePlayer, CallFunc_BreakHitResult_FaceIndex) == 0x000128, "Member 'BP_Hound_C_CanSeePlayer::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_CanSeePlayer, CallFunc_BreakHitResult_TraceStart) == 0x00012C, "Member 'BP_Hound_C_CanSeePlayer::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_CanSeePlayer, CallFunc_BreakHitResult_TraceEnd) == 0x000138, "Member 'BP_Hound_C_CanSeePlayer::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_CanSeePlayer, CallFunc_Not_PreBool_ReturnValue) == 0x000144, "Member 'BP_Hound_C_CanSeePlayer::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_CanSeePlayer, CallFunc_GetDisplayName_ReturnValue) == 0x000148, "Member 'BP_Hound_C_CanSeePlayer::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");

// Function BP_Hound.BP_Hound_C.GetStunDuration
// 0x0020 (0x0020 - 0x0000)
struct BP_Hound_C_GetStunDuration final
{
public:
	float                                         Delay;                                             // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_MyGameInstance_C*                   K2Node_DynamicCast_AsBP_My_Game_Instance;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Hound_C_GetStunDuration) == 0x000008, "Wrong alignment on BP_Hound_C_GetStunDuration");
static_assert(sizeof(BP_Hound_C_GetStunDuration) == 0x000020, "Wrong size on BP_Hound_C_GetStunDuration");
static_assert(offsetof(BP_Hound_C_GetStunDuration, Delay) == 0x000000, "Member 'BP_Hound_C_GetStunDuration::Delay' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_GetStunDuration, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'BP_Hound_C_GetStunDuration::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_GetStunDuration, K2Node_DynamicCast_AsBP_My_Game_Instance) == 0x000010, "Member 'BP_Hound_C_GetStunDuration::K2Node_DynamicCast_AsBP_My_Game_Instance' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_GetStunDuration, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_Hound_C_GetStunDuration::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Hound_C_GetStunDuration, K2Node_SwitchEnum_CmpSuccess) == 0x000019, "Member 'BP_Hound_C_GetStunDuration::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

}

