#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Pushable

#include "Basic.hpp"

#include "BP_Pushable_classes.hpp"
#include "BP_Pushable_parameters.hpp"


namespace SDK
{

// Function BP_Pushable.BP_Pushable_C.ExecuteUbergraph_BP_Pushable
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Pushable_C::ExecuteUbergraph_BP_Pushable(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pushable_C", "ExecuteUbergraph_BP_Pushable");

	Params::BP_Pushable_C_ExecuteUbergraph_BP_Pushable Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Pushable.BP_Pushable_C.OnActorUsed
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ACharacter*                       Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Pushable_C::OnActorUsed(class ACharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pushable_C", "OnActorUsed");

	Params::BP_Pushable_C_OnActorUsed Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Pushable.BP_Pushable_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_Pushable_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pushable_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Pushable.BP_Pushable_C.OnRep_Active
// (BlueprintCallable, BlueprintEvent)

void ABP_Pushable_C::OnRep_Active()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pushable_C", "OnRep_Active");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Pushable.BP_Pushable_C.OnRep_CanPush
// (BlueprintCallable, BlueprintEvent)

void ABP_Pushable_C::OnRep_CanPush()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pushable_C", "OnRep_CanPush");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Pushable.BP_Pushable_C.Get Forward Collision Points
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABPCharacter_Demo_C*              PushingActor_0                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Axis                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FVector>*                 CollisionPoints                                        (Parm, OutParm)

void ABP_Pushable_C::Get_Forward_Collision_Points(class ABPCharacter_Demo_C* PushingActor_0, float Axis, TArray<struct FVector>* CollisionPoints)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pushable_C", "Get Forward Collision Points");

	Params::BP_Pushable_C_Get_Forward_Collision_Points Parms{};

	Parms.PushingActor_0 = PushingActor_0;
	Parms.Axis = Axis;

	UObject::ProcessEvent(Func, &Parms);

	if (CollisionPoints != nullptr)
		*CollisionPoints = std::move(Parms.CollisionPoints);
}


// Function BP_Pushable.BP_Pushable_C.Can Push
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABPCharacter_Demo_C*              Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   NewParam                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    MoveForward                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool*                                   NewParam2                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Pushable_C::Can_Push(class ABPCharacter_Demo_C* Target, float NewParam, bool MoveForward, bool* NewParam2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pushable_C", "Can Push");

	Params::BP_Pushable_C_Can_Push Parms{};

	Parms.Target = Target;
	Parms.NewParam = NewParam;
	Parms.MoveForward = MoveForward;

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam2 != nullptr)
		*NewParam2 = Parms.NewParam2;
}


// Function BP_Pushable.BP_Pushable_C.Get Right Collision Points
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABPCharacter_Demo_C*              PushingActor_0                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Axis                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FVector>                  ReturnValue                                            (Parm, OutParm, ReturnParm)

TArray<struct FVector> ABP_Pushable_C::Get_Right_Collision_Points(class ABPCharacter_Demo_C* PushingActor_0, float Axis)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pushable_C", "Get Right Collision Points");

	Params::BP_Pushable_C_Get_Right_Collision_Points Parms{};

	Parms.PushingActor_0 = PushingActor_0;
	Parms.Axis = Axis;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Pushable.BP_Pushable_C.OnRep_Index
// (HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_Pushable_C::OnRep_Index()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pushable_C", "OnRep_Index");

	UObject::ProcessEvent(Func, nullptr);
}

}

