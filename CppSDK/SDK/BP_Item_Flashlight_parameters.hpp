#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Item_Flashlight

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_Item_Flashlight.BP_Item_Flashlight_C.ExecuteUbergraph_BP_Item_Flashlight
// 0x01E8 (0x01E8 - 0x0000)
struct BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_4;                   // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_3;                   // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_1;            // 0x0024(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_2;                   // 0x0034(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_2;            // 0x003C(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_1;                   // 0x004C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_3;            // 0x0054(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName;                     // 0x0064(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_4;            // 0x006C(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   Temp_name_Variable;                                // 0x007C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAdjustedRadius_Adjusted;               // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAdjustedIntensity_Adjusted;            // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_FadeOut_1;                      // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AA[0x6];                                       // 0x00AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_LightFade_Box_C*                    CallFunc_GetActorOfClass_ReturnValue;              // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOverlappingActor_ReturnValue;           // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetCurrentLevelName_ReturnValue;          // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetAttachParentActor_ReturnValue;         // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFancyCharacter*                        K2Node_DynamicCast_AsFancy_Character;              // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_1;          // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x00EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00EB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_2;          // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_ED[0x3];                                       // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue; // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_3;          // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_4;          // 0x00FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_5;          // 0x00FB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_6;          // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_7;          // 0x00FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_8;          // 0x00FE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_9;          // 0x00FF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_10;         // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0102(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0103(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABPCharacter_Demo_C*                    K2Node_DynamicCast_AsBPCharacter_Demo;             // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USceneComponent*>                CallFunc_GetComponentsByTag_ReturnValue;           // 0x0128(0x0010)(ReferenceParm, ContainsInstancedReference)
	class ABPCharacter_Demo_C*                    K2Node_DynamicCast_AsBPCharacter_Demo_1;           // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_Array_Get_Item;                           // 0x0148(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_1;        // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_151[0x3];                                      // 0x0151(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_159[0x3];                                      // 0x0159(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetAdjustedIntensity_Adjusted_1;          // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAdjustedIntensity_Adjusted_2;          // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAdjustedIntensity_Adjusted_3;          // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAdjustedIntensity_Adjusted_4;          // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAdjustedRadius_Adjusted_1;             // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAdjustedRadius_Adjusted_2;             // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAdjustedRadius_Adjusted_3;             // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Power;                          // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17A[0x6];                                      // 0x017A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_2;                   // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors;   // 0x0188(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x019C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19D[0x3];                                      // 0x019D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetAdjustedIntensity_Adjusted_5;          // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAdjustedIntensity_Adjusted_6;          // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAdjustedRadius_Adjusted_4;             // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAdjustedRadius_Adjusted_5;             // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAdjustedIntensity_Adjusted_7;          // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAdjustedIntensity_Adjusted_8;          // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAdjustedIntensity_Adjusted_9;          // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAdjustedRadius_Adjusted_6;             // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_FadeOut;                        // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C1[0x7];                                      // 0x01C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_3;                   // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors_1; // 0x01D0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x01E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight) == 0x000008, "Wrong alignment on BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight");
static_assert(sizeof(BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight) == 0x0001E8, "Wrong size on BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight");
static_assert(offsetof(BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight, EntryPoint) == 0x000000, "Member 'BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight, K2Node_CustomEvent_NotifyName_4) == 0x000004, "Member 'BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight::K2Node_CustomEvent_NotifyName_4' has a wrong offset!");
static_assert(offsetof(BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight, K2Node_CustomEvent_NotifyName_3) == 0x00001C, "Member 'BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight::K2Node_CustomEvent_NotifyName_3' has a wrong offset!");
static_assert(offsetof(BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight, K2Node_CreateDelegate_OutputDelegate_1) == 0x000024, "Member 'BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight, K2Node_CustomEvent_NotifyName_2) == 0x000034, "Member 'BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight::K2Node_CustomEvent_NotifyName_2' has a wrong offset!");
static_assert(offsetof(BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight, K2Node_CreateDelegate_OutputDelegate_2) == 0x00003C, "Member 'BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight, K2Node_CustomEvent_NotifyName_1) == 0x00004C, "Member 'BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight::K2Node_CustomEvent_NotifyName_1' has a wrong offset!");
static_assert(offsetof(BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight, K2Node_CreateDelegate_OutputDelegate_3) == 0x000054, "Member 'BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight, K2Node_CustomEvent_NotifyName) == 0x000064, "Member 'BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight::K2Node_CustomEvent_NotifyName' has a wrong offset!");
static_assert(offsetof(BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight, K2Node_CreateDelegate_OutputDelegate_4) == 0x00006C, "Member 'BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight, Temp_name_Variable) == 0x00007C, "Member 'BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000088, "Member 'BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight, CallFunc_GetAdjustedRadius_Adjusted) == 0x000090, "Member 'BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight::CallFunc_GetAdjustedRadius_Adjusted' has a wrong offset!");
static_assert(offsetof(BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight, CallFunc_GetAdjustedIntensity_Adjusted) == 0x000094, "Member 'BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight::CallFunc_GetAdjustedIntensity_Adjusted' has a wrong offset!");
static_assert(offsetof(BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000098, "Member 'BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight, Temp_int_Array_Index_Variable) == 0x00009C, "Member 'BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight, Temp_int_Loop_Counter_Variable) == 0x0000A0, "Member 'BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight, CallFunc_Add_IntInt_ReturnValue) == 0x0000A4, "Member 'BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight, CallFunc_Not_PreBool_ReturnValue) == 0x0000A8, "Member 'BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight, K2Node_CustomEvent_FadeOut_1) == 0x0000A9, "Member 'BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight::K2Node_CustomEvent_FadeOut_1' has a wrong offset!");
static_assert(offsetof(BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight, CallFunc_GetActorOfClass_ReturnValue) == 0x0000B0, "Member 'BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight, CallFunc_IsOverlappingActor_ReturnValue) == 0x0000B8, "Member 'BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight::CallFunc_IsOverlappingActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight, CallFunc_GetCurrentLevelName_ReturnValue) == 0x0000C0, "Member 'BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight::CallFunc_GetCurrentLevelName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight, CallFunc_GetAttachParentActor_ReturnValue) == 0x0000D0, "Member 'BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight::CallFunc_GetAttachParentActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x0000D8, "Member 'BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight, K2Node_DynamicCast_AsFancy_Character) == 0x0000E0, "Member 'BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight::K2Node_DynamicCast_AsFancy_Character' has a wrong offset!");
static_assert(offsetof(BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight, K2Node_DynamicCast_bSuccess) == 0x0000E8, "Member 'BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight, CallFunc_EqualEqual_StrStr_ReturnValue_1) == 0x0000E9, "Member 'BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight::CallFunc_EqualEqual_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight, CallFunc_IsLocallyControlled_ReturnValue) == 0x0000EA, "Member 'BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight, CallFunc_BooleanOR_ReturnValue) == 0x0000EB, "Member 'BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight, CallFunc_EqualEqual_StrStr_ReturnValue_2) == 0x0000EC, "Member 'BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight::CallFunc_EqualEqual_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue) == 0x0000F0, "Member 'BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight, CallFunc_IsValid_ReturnValue) == 0x0000F8, "Member 'BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight, CallFunc_EqualEqual_StrStr_ReturnValue_3) == 0x0000F9, "Member 'BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight::CallFunc_EqualEqual_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight, CallFunc_EqualEqual_StrStr_ReturnValue_4) == 0x0000FA, "Member 'BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight::CallFunc_EqualEqual_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight, CallFunc_EqualEqual_StrStr_ReturnValue_5) == 0x0000FB, "Member 'BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight::CallFunc_EqualEqual_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight, CallFunc_EqualEqual_StrStr_ReturnValue_6) == 0x0000FC, "Member 'BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight::CallFunc_EqualEqual_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight, CallFunc_EqualEqual_StrStr_ReturnValue_7) == 0x0000FD, "Member 'BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight::CallFunc_EqualEqual_StrStr_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight, CallFunc_EqualEqual_StrStr_ReturnValue_8) == 0x0000FE, "Member 'BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight::CallFunc_EqualEqual_StrStr_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight, CallFunc_EqualEqual_StrStr_ReturnValue_9) == 0x0000FF, "Member 'BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight::CallFunc_EqualEqual_StrStr_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight, CallFunc_EqualEqual_StrStr_ReturnValue_10) == 0x000100, "Member 'BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight::CallFunc_EqualEqual_StrStr_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight, CallFunc_BooleanOR_ReturnValue_1) == 0x000101, "Member 'BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight, CallFunc_BooleanOR_ReturnValue_2) == 0x000102, "Member 'BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight, CallFunc_BooleanOR_ReturnValue_3) == 0x000103, "Member 'BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight, CallFunc_GetOwner_ReturnValue) == 0x000108, "Member 'BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight, K2Node_DynamicCast_AsBPCharacter_Demo) == 0x000110, "Member 'BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight::K2Node_DynamicCast_AsBPCharacter_Demo' has a wrong offset!");
static_assert(offsetof(BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight, K2Node_DynamicCast_bSuccess_1) == 0x000118, "Member 'BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight, CallFunc_GetOwner_ReturnValue_1) == 0x000120, "Member 'BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight, CallFunc_GetComponentsByTag_ReturnValue) == 0x000128, "Member 'BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight::CallFunc_GetComponentsByTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight, K2Node_DynamicCast_AsBPCharacter_Demo_1) == 0x000138, "Member 'BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight::K2Node_DynamicCast_AsBPCharacter_Demo_1' has a wrong offset!");
static_assert(offsetof(BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight, K2Node_DynamicCast_bSuccess_2) == 0x000140, "Member 'BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight, CallFunc_Array_Get_Item) == 0x000148, "Member 'BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight, CallFunc_IsLocallyControlled_ReturnValue_1) == 0x000150, "Member 'BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight::CallFunc_IsLocallyControlled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight, CallFunc_Array_Length_ReturnValue) == 0x000154, "Member 'BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight, CallFunc_Less_IntInt_ReturnValue) == 0x000158, "Member 'BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight, CallFunc_GetAdjustedIntensity_Adjusted_1) == 0x00015C, "Member 'BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight::CallFunc_GetAdjustedIntensity_Adjusted_1' has a wrong offset!");
static_assert(offsetof(BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight, CallFunc_GetAdjustedIntensity_Adjusted_2) == 0x000160, "Member 'BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight::CallFunc_GetAdjustedIntensity_Adjusted_2' has a wrong offset!");
static_assert(offsetof(BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight, CallFunc_GetAdjustedIntensity_Adjusted_3) == 0x000164, "Member 'BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight::CallFunc_GetAdjustedIntensity_Adjusted_3' has a wrong offset!");
static_assert(offsetof(BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight, CallFunc_GetAdjustedIntensity_Adjusted_4) == 0x000168, "Member 'BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight::CallFunc_GetAdjustedIntensity_Adjusted_4' has a wrong offset!");
static_assert(offsetof(BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight, CallFunc_GetAdjustedRadius_Adjusted_1) == 0x00016C, "Member 'BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight::CallFunc_GetAdjustedRadius_Adjusted_1' has a wrong offset!");
static_assert(offsetof(BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight, CallFunc_GetAdjustedRadius_Adjusted_2) == 0x000170, "Member 'BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight::CallFunc_GetAdjustedRadius_Adjusted_2' has a wrong offset!");
static_assert(offsetof(BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight, CallFunc_GetAdjustedRadius_Adjusted_3) == 0x000174, "Member 'BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight::CallFunc_GetAdjustedRadius_Adjusted_3' has a wrong offset!");
static_assert(offsetof(BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight, K2Node_CustomEvent_Power) == 0x000178, "Member 'BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight::K2Node_CustomEvent_Power' has a wrong offset!");
static_assert(offsetof(BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight, CallFunc_Not_PreBool_ReturnValue_1) == 0x000179, "Member 'BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight, CallFunc_GetOwner_ReturnValue_2) == 0x000180, "Member 'BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight::CallFunc_GetOwner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight, CallFunc_GetOverlappingActors_OverlappingActors) == 0x000188, "Member 'BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight::CallFunc_GetOverlappingActors_OverlappingActors' has a wrong offset!");
static_assert(offsetof(BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight, CallFunc_Array_Length_ReturnValue_1) == 0x000198, "Member 'BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00019C, "Member 'BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight, CallFunc_GetAdjustedIntensity_Adjusted_5) == 0x0001A0, "Member 'BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight::CallFunc_GetAdjustedIntensity_Adjusted_5' has a wrong offset!");
static_assert(offsetof(BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight, CallFunc_GetAdjustedIntensity_Adjusted_6) == 0x0001A4, "Member 'BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight::CallFunc_GetAdjustedIntensity_Adjusted_6' has a wrong offset!");
static_assert(offsetof(BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight, CallFunc_GetAdjustedRadius_Adjusted_4) == 0x0001A8, "Member 'BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight::CallFunc_GetAdjustedRadius_Adjusted_4' has a wrong offset!");
static_assert(offsetof(BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight, CallFunc_GetAdjustedRadius_Adjusted_5) == 0x0001AC, "Member 'BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight::CallFunc_GetAdjustedRadius_Adjusted_5' has a wrong offset!");
static_assert(offsetof(BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight, CallFunc_GetAdjustedIntensity_Adjusted_7) == 0x0001B0, "Member 'BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight::CallFunc_GetAdjustedIntensity_Adjusted_7' has a wrong offset!");
static_assert(offsetof(BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight, CallFunc_GetAdjustedIntensity_Adjusted_8) == 0x0001B4, "Member 'BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight::CallFunc_GetAdjustedIntensity_Adjusted_8' has a wrong offset!");
static_assert(offsetof(BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight, CallFunc_GetAdjustedIntensity_Adjusted_9) == 0x0001B8, "Member 'BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight::CallFunc_GetAdjustedIntensity_Adjusted_9' has a wrong offset!");
static_assert(offsetof(BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight, CallFunc_GetAdjustedRadius_Adjusted_6) == 0x0001BC, "Member 'BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight::CallFunc_GetAdjustedRadius_Adjusted_6' has a wrong offset!");
static_assert(offsetof(BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight, K2Node_CustomEvent_FadeOut) == 0x0001C0, "Member 'BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight::K2Node_CustomEvent_FadeOut' has a wrong offset!");
static_assert(offsetof(BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight, CallFunc_GetOwner_ReturnValue_3) == 0x0001C8, "Member 'BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight::CallFunc_GetOwner_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight, CallFunc_GetOverlappingActors_OverlappingActors_1) == 0x0001D0, "Member 'BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight::CallFunc_GetOverlappingActors_OverlappingActors_1' has a wrong offset!");
static_assert(offsetof(BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight, CallFunc_Array_Length_ReturnValue_2) == 0x0001E0, "Member 'BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0001E4, "Member 'BP_Item_Flashlight_C_ExecuteUbergraph_BP_Item_Flashlight::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_Item_Flashlight.BP_Item_Flashlight_C.FadeLight
// 0x0001 (0x0001 - 0x0000)
struct BP_Item_Flashlight_C_FadeLight final
{
public:
	bool                                          FadeOut;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Item_Flashlight_C_FadeLight) == 0x000001, "Wrong alignment on BP_Item_Flashlight_C_FadeLight");
static_assert(sizeof(BP_Item_Flashlight_C_FadeLight) == 0x000001, "Wrong size on BP_Item_Flashlight_C_FadeLight");
static_assert(offsetof(BP_Item_Flashlight_C_FadeLight, FadeOut) == 0x000000, "Member 'BP_Item_Flashlight_C_FadeLight::FadeOut' has a wrong offset!");

// Function BP_Item_Flashlight.BP_Item_Flashlight_C.ToggleFlashlightPower
// 0x0001 (0x0001 - 0x0000)
struct BP_Item_Flashlight_C_ToggleFlashlightPower final
{
public:
	bool                                          Power;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Item_Flashlight_C_ToggleFlashlightPower) == 0x000001, "Wrong alignment on BP_Item_Flashlight_C_ToggleFlashlightPower");
static_assert(sizeof(BP_Item_Flashlight_C_ToggleFlashlightPower) == 0x000001, "Wrong size on BP_Item_Flashlight_C_ToggleFlashlightPower");
static_assert(offsetof(BP_Item_Flashlight_C_ToggleFlashlightPower, Power) == 0x000000, "Member 'BP_Item_Flashlight_C_ToggleFlashlightPower::Power' has a wrong offset!");

// Function BP_Item_Flashlight.BP_Item_Flashlight_C.ToggleFadePower
// 0x0001 (0x0001 - 0x0000)
struct BP_Item_Flashlight_C_ToggleFadePower final
{
public:
	bool                                          FadeOut;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Item_Flashlight_C_ToggleFadePower) == 0x000001, "Wrong alignment on BP_Item_Flashlight_C_ToggleFadePower");
static_assert(sizeof(BP_Item_Flashlight_C_ToggleFadePower) == 0x000001, "Wrong size on BP_Item_Flashlight_C_ToggleFadePower");
static_assert(offsetof(BP_Item_Flashlight_C_ToggleFadePower, FadeOut) == 0x000000, "Member 'BP_Item_Flashlight_C_ToggleFadePower::FadeOut' has a wrong offset!");

// Function BP_Item_Flashlight.BP_Item_Flashlight_C.OnCompleted_858C6BED431A8EBEEAB2D09BA256DAA6
// 0x0008 (0x0008 - 0x0000)
struct BP_Item_Flashlight_C_OnCompleted_858C6BED431A8EBEEAB2D09BA256DAA6 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Item_Flashlight_C_OnCompleted_858C6BED431A8EBEEAB2D09BA256DAA6) == 0x000004, "Wrong alignment on BP_Item_Flashlight_C_OnCompleted_858C6BED431A8EBEEAB2D09BA256DAA6");
static_assert(sizeof(BP_Item_Flashlight_C_OnCompleted_858C6BED431A8EBEEAB2D09BA256DAA6) == 0x000008, "Wrong size on BP_Item_Flashlight_C_OnCompleted_858C6BED431A8EBEEAB2D09BA256DAA6");
static_assert(offsetof(BP_Item_Flashlight_C_OnCompleted_858C6BED431A8EBEEAB2D09BA256DAA6, NotifyName) == 0x000000, "Member 'BP_Item_Flashlight_C_OnCompleted_858C6BED431A8EBEEAB2D09BA256DAA6::NotifyName' has a wrong offset!");

// Function BP_Item_Flashlight.BP_Item_Flashlight_C.OnBlendOut_858C6BED431A8EBEEAB2D09BA256DAA6
// 0x0008 (0x0008 - 0x0000)
struct BP_Item_Flashlight_C_OnBlendOut_858C6BED431A8EBEEAB2D09BA256DAA6 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Item_Flashlight_C_OnBlendOut_858C6BED431A8EBEEAB2D09BA256DAA6) == 0x000004, "Wrong alignment on BP_Item_Flashlight_C_OnBlendOut_858C6BED431A8EBEEAB2D09BA256DAA6");
static_assert(sizeof(BP_Item_Flashlight_C_OnBlendOut_858C6BED431A8EBEEAB2D09BA256DAA6) == 0x000008, "Wrong size on BP_Item_Flashlight_C_OnBlendOut_858C6BED431A8EBEEAB2D09BA256DAA6");
static_assert(offsetof(BP_Item_Flashlight_C_OnBlendOut_858C6BED431A8EBEEAB2D09BA256DAA6, NotifyName) == 0x000000, "Member 'BP_Item_Flashlight_C_OnBlendOut_858C6BED431A8EBEEAB2D09BA256DAA6::NotifyName' has a wrong offset!");

// Function BP_Item_Flashlight.BP_Item_Flashlight_C.OnInterrupted_858C6BED431A8EBEEAB2D09BA256DAA6
// 0x0008 (0x0008 - 0x0000)
struct BP_Item_Flashlight_C_OnInterrupted_858C6BED431A8EBEEAB2D09BA256DAA6 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Item_Flashlight_C_OnInterrupted_858C6BED431A8EBEEAB2D09BA256DAA6) == 0x000004, "Wrong alignment on BP_Item_Flashlight_C_OnInterrupted_858C6BED431A8EBEEAB2D09BA256DAA6");
static_assert(sizeof(BP_Item_Flashlight_C_OnInterrupted_858C6BED431A8EBEEAB2D09BA256DAA6) == 0x000008, "Wrong size on BP_Item_Flashlight_C_OnInterrupted_858C6BED431A8EBEEAB2D09BA256DAA6");
static_assert(offsetof(BP_Item_Flashlight_C_OnInterrupted_858C6BED431A8EBEEAB2D09BA256DAA6, NotifyName) == 0x000000, "Member 'BP_Item_Flashlight_C_OnInterrupted_858C6BED431A8EBEEAB2D09BA256DAA6::NotifyName' has a wrong offset!");

// Function BP_Item_Flashlight.BP_Item_Flashlight_C.OnNotifyBegin_858C6BED431A8EBEEAB2D09BA256DAA6
// 0x0008 (0x0008 - 0x0000)
struct BP_Item_Flashlight_C_OnNotifyBegin_858C6BED431A8EBEEAB2D09BA256DAA6 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Item_Flashlight_C_OnNotifyBegin_858C6BED431A8EBEEAB2D09BA256DAA6) == 0x000004, "Wrong alignment on BP_Item_Flashlight_C_OnNotifyBegin_858C6BED431A8EBEEAB2D09BA256DAA6");
static_assert(sizeof(BP_Item_Flashlight_C_OnNotifyBegin_858C6BED431A8EBEEAB2D09BA256DAA6) == 0x000008, "Wrong size on BP_Item_Flashlight_C_OnNotifyBegin_858C6BED431A8EBEEAB2D09BA256DAA6");
static_assert(offsetof(BP_Item_Flashlight_C_OnNotifyBegin_858C6BED431A8EBEEAB2D09BA256DAA6, NotifyName) == 0x000000, "Member 'BP_Item_Flashlight_C_OnNotifyBegin_858C6BED431A8EBEEAB2D09BA256DAA6::NotifyName' has a wrong offset!");

// Function BP_Item_Flashlight.BP_Item_Flashlight_C.OnNotifyEnd_858C6BED431A8EBEEAB2D09BA256DAA6
// 0x0008 (0x0008 - 0x0000)
struct BP_Item_Flashlight_C_OnNotifyEnd_858C6BED431A8EBEEAB2D09BA256DAA6 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Item_Flashlight_C_OnNotifyEnd_858C6BED431A8EBEEAB2D09BA256DAA6) == 0x000004, "Wrong alignment on BP_Item_Flashlight_C_OnNotifyEnd_858C6BED431A8EBEEAB2D09BA256DAA6");
static_assert(sizeof(BP_Item_Flashlight_C_OnNotifyEnd_858C6BED431A8EBEEAB2D09BA256DAA6) == 0x000008, "Wrong size on BP_Item_Flashlight_C_OnNotifyEnd_858C6BED431A8EBEEAB2D09BA256DAA6");
static_assert(offsetof(BP_Item_Flashlight_C_OnNotifyEnd_858C6BED431A8EBEEAB2D09BA256DAA6, NotifyName) == 0x000000, "Member 'BP_Item_Flashlight_C_OnNotifyEnd_858C6BED431A8EBEEAB2D09BA256DAA6::NotifyName' has a wrong offset!");

// Function BP_Item_Flashlight.BP_Item_Flashlight_C.OnRep_IsFlashlightOn
// 0x0010 (0x0010 - 0x0000)
struct BP_Item_Flashlight_C_OnRep_IsFlashlightOn final
{
public:
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Item_Flashlight_C_OnRep_IsFlashlightOn) == 0x000008, "Wrong alignment on BP_Item_Flashlight_C_OnRep_IsFlashlightOn");
static_assert(sizeof(BP_Item_Flashlight_C_OnRep_IsFlashlightOn) == 0x000010, "Wrong size on BP_Item_Flashlight_C_OnRep_IsFlashlightOn");
static_assert(offsetof(BP_Item_Flashlight_C_OnRep_IsFlashlightOn, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000000, "Member 'BP_Item_Flashlight_C_OnRep_IsFlashlightOn::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Item_Flashlight_C_OnRep_IsFlashlightOn, CallFunc_SpawnSoundAttached_ReturnValue) == 0x000008, "Member 'BP_Item_Flashlight_C_OnRep_IsFlashlightOn::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");

// Function BP_Item_Flashlight.BP_Item_Flashlight_C.GetAdjustedIntensity
// 0x0010 (0x0010 - 0x0000)
struct BP_Item_Flashlight_C_GetAdjustedIntensity final
{
public:
	float                                         Intensity_0;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Adjusted;                                          // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHeadMountedDisplayEnabled_ReturnValue;  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Item_Flashlight_C_GetAdjustedIntensity) == 0x000004, "Wrong alignment on BP_Item_Flashlight_C_GetAdjustedIntensity");
static_assert(sizeof(BP_Item_Flashlight_C_GetAdjustedIntensity) == 0x000010, "Wrong size on BP_Item_Flashlight_C_GetAdjustedIntensity");
static_assert(offsetof(BP_Item_Flashlight_C_GetAdjustedIntensity, Intensity_0) == 0x000000, "Member 'BP_Item_Flashlight_C_GetAdjustedIntensity::Intensity_0' has a wrong offset!");
static_assert(offsetof(BP_Item_Flashlight_C_GetAdjustedIntensity, Adjusted) == 0x000004, "Member 'BP_Item_Flashlight_C_GetAdjustedIntensity::Adjusted' has a wrong offset!");
static_assert(offsetof(BP_Item_Flashlight_C_GetAdjustedIntensity, CallFunc_IsHeadMountedDisplayEnabled_ReturnValue) == 0x000008, "Member 'BP_Item_Flashlight_C_GetAdjustedIntensity::CallFunc_IsHeadMountedDisplayEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Item_Flashlight_C_GetAdjustedIntensity, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00000C, "Member 'BP_Item_Flashlight_C_GetAdjustedIntensity::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_Item_Flashlight.BP_Item_Flashlight_C.GetAdjustedRadius
// 0x0010 (0x0010 - 0x0000)
struct BP_Item_Flashlight_C_GetAdjustedRadius final
{
public:
	float                                         Radius;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Adjusted;                                          // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHeadMountedDisplayEnabled_ReturnValue;  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Item_Flashlight_C_GetAdjustedRadius) == 0x000004, "Wrong alignment on BP_Item_Flashlight_C_GetAdjustedRadius");
static_assert(sizeof(BP_Item_Flashlight_C_GetAdjustedRadius) == 0x000010, "Wrong size on BP_Item_Flashlight_C_GetAdjustedRadius");
static_assert(offsetof(BP_Item_Flashlight_C_GetAdjustedRadius, Radius) == 0x000000, "Member 'BP_Item_Flashlight_C_GetAdjustedRadius::Radius' has a wrong offset!");
static_assert(offsetof(BP_Item_Flashlight_C_GetAdjustedRadius, Adjusted) == 0x000004, "Member 'BP_Item_Flashlight_C_GetAdjustedRadius::Adjusted' has a wrong offset!");
static_assert(offsetof(BP_Item_Flashlight_C_GetAdjustedRadius, CallFunc_IsHeadMountedDisplayEnabled_ReturnValue) == 0x000008, "Member 'BP_Item_Flashlight_C_GetAdjustedRadius::CallFunc_IsHeadMountedDisplayEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Item_Flashlight_C_GetAdjustedRadius, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00000C, "Member 'BP_Item_Flashlight_C_GetAdjustedRadius::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_Item_Flashlight.BP_Item_Flashlight_C.SetMaterial
// 0x0001 (0x0001 - 0x0000)
struct BP_Item_Flashlight_C_SetMaterial final
{
public:
	bool                                          EnabledFOV;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Item_Flashlight_C_SetMaterial) == 0x000001, "Wrong alignment on BP_Item_Flashlight_C_SetMaterial");
static_assert(sizeof(BP_Item_Flashlight_C_SetMaterial) == 0x000001, "Wrong size on BP_Item_Flashlight_C_SetMaterial");
static_assert(offsetof(BP_Item_Flashlight_C_SetMaterial, EnabledFOV) == 0x000000, "Member 'BP_Item_Flashlight_C_SetMaterial::EnabledFOV' has a wrong offset!");

}

