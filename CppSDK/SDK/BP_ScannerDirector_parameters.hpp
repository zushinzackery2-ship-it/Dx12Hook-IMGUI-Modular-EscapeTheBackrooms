#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ScannerDirector

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Backrooms_structs.hpp"


namespace SDK::Params
{

// Function BP_ScannerDirector.BP_ScannerDirector_C.ExecuteUbergraph_BP_ScannerDirector
// 0x01B8 (0x01B8 - 0x0000)
struct BP_ScannerDirector_C_ExecuteUbergraph_BP_ScannerDirector final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_CustomEvent_HitResult;                      // 0x0004(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FColor                                 K2Node_CustomEvent_Color;                          // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0090(0x0010)(ZeroConstructor, NoDestructor)
	struct FLinearColor                           CallFunc_Conv_ColorToLinearColor_ReturnValue;      // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x00B0(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BA[0x2];                                       // 0x00BA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x00E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0108(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0124(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_FindCollisionUV_UV;                       // 0x013C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindCollisionUV_ReturnValue;              // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_145[0x3];                                      // 0x0145(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureRenderTarget2D*                 CallFunc_CheckForExistingRT_RenderTarget;          // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0152(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_153[0x1];                                      // 0x0153(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Length_ReturnValue;                   // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0158(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_FixUVStretching_FixedSize;                // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_FixUVStretching_FixedStretch;             // 0x016C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_Vector2DToVector_ReturnValue;        // 0x0178(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x0184(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue_1;   // 0x0194(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ScannerDirector_C_ExecuteUbergraph_BP_ScannerDirector) == 0x000008, "Wrong alignment on BP_ScannerDirector_C_ExecuteUbergraph_BP_ScannerDirector");
static_assert(sizeof(BP_ScannerDirector_C_ExecuteUbergraph_BP_ScannerDirector) == 0x0001B8, "Wrong size on BP_ScannerDirector_C_ExecuteUbergraph_BP_ScannerDirector");
static_assert(offsetof(BP_ScannerDirector_C_ExecuteUbergraph_BP_ScannerDirector, EntryPoint) == 0x000000, "Member 'BP_ScannerDirector_C_ExecuteUbergraph_BP_ScannerDirector::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ScannerDirector_C_ExecuteUbergraph_BP_ScannerDirector, K2Node_CustomEvent_HitResult) == 0x000004, "Member 'BP_ScannerDirector_C_ExecuteUbergraph_BP_ScannerDirector::K2Node_CustomEvent_HitResult' has a wrong offset!");
static_assert(offsetof(BP_ScannerDirector_C_ExecuteUbergraph_BP_ScannerDirector, K2Node_CustomEvent_Color) == 0x00008C, "Member 'BP_ScannerDirector_C_ExecuteUbergraph_BP_ScannerDirector::K2Node_CustomEvent_Color' has a wrong offset!");
static_assert(offsetof(BP_ScannerDirector_C_ExecuteUbergraph_BP_ScannerDirector, K2Node_CreateDelegate_OutputDelegate) == 0x000090, "Member 'BP_ScannerDirector_C_ExecuteUbergraph_BP_ScannerDirector::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_ScannerDirector_C_ExecuteUbergraph_BP_ScannerDirector, CallFunc_Conv_ColorToLinearColor_ReturnValue) == 0x0000A0, "Member 'BP_ScannerDirector_C_ExecuteUbergraph_BP_ScannerDirector::CallFunc_Conv_ColorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScannerDirector_C_ExecuteUbergraph_BP_ScannerDirector, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0000B0, "Member 'BP_ScannerDirector_C_ExecuteUbergraph_BP_ScannerDirector::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScannerDirector_C_ExecuteUbergraph_BP_ScannerDirector, CallFunc_BreakHitResult_bBlockingHit) == 0x0000B8, "Member 'BP_ScannerDirector_C_ExecuteUbergraph_BP_ScannerDirector::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_ScannerDirector_C_ExecuteUbergraph_BP_ScannerDirector, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000B9, "Member 'BP_ScannerDirector_C_ExecuteUbergraph_BP_ScannerDirector::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_ScannerDirector_C_ExecuteUbergraph_BP_ScannerDirector, CallFunc_BreakHitResult_Time) == 0x0000BC, "Member 'BP_ScannerDirector_C_ExecuteUbergraph_BP_ScannerDirector::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_ScannerDirector_C_ExecuteUbergraph_BP_ScannerDirector, CallFunc_BreakHitResult_Distance) == 0x0000C0, "Member 'BP_ScannerDirector_C_ExecuteUbergraph_BP_ScannerDirector::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_ScannerDirector_C_ExecuteUbergraph_BP_ScannerDirector, CallFunc_BreakHitResult_Location) == 0x0000C4, "Member 'BP_ScannerDirector_C_ExecuteUbergraph_BP_ScannerDirector::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_ScannerDirector_C_ExecuteUbergraph_BP_ScannerDirector, CallFunc_BreakHitResult_ImpactPoint) == 0x0000D0, "Member 'BP_ScannerDirector_C_ExecuteUbergraph_BP_ScannerDirector::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_ScannerDirector_C_ExecuteUbergraph_BP_ScannerDirector, CallFunc_BreakHitResult_Normal) == 0x0000DC, "Member 'BP_ScannerDirector_C_ExecuteUbergraph_BP_ScannerDirector::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_ScannerDirector_C_ExecuteUbergraph_BP_ScannerDirector, CallFunc_BreakHitResult_ImpactNormal) == 0x0000E8, "Member 'BP_ScannerDirector_C_ExecuteUbergraph_BP_ScannerDirector::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_ScannerDirector_C_ExecuteUbergraph_BP_ScannerDirector, CallFunc_BreakHitResult_PhysMat) == 0x0000F8, "Member 'BP_ScannerDirector_C_ExecuteUbergraph_BP_ScannerDirector::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_ScannerDirector_C_ExecuteUbergraph_BP_ScannerDirector, CallFunc_BreakHitResult_HitActor) == 0x000100, "Member 'BP_ScannerDirector_C_ExecuteUbergraph_BP_ScannerDirector::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_ScannerDirector_C_ExecuteUbergraph_BP_ScannerDirector, CallFunc_BreakHitResult_HitComponent) == 0x000108, "Member 'BP_ScannerDirector_C_ExecuteUbergraph_BP_ScannerDirector::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_ScannerDirector_C_ExecuteUbergraph_BP_ScannerDirector, CallFunc_BreakHitResult_HitBoneName) == 0x000110, "Member 'BP_ScannerDirector_C_ExecuteUbergraph_BP_ScannerDirector::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_ScannerDirector_C_ExecuteUbergraph_BP_ScannerDirector, CallFunc_BreakHitResult_HitItem) == 0x000118, "Member 'BP_ScannerDirector_C_ExecuteUbergraph_BP_ScannerDirector::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_ScannerDirector_C_ExecuteUbergraph_BP_ScannerDirector, CallFunc_BreakHitResult_ElementIndex) == 0x00011C, "Member 'BP_ScannerDirector_C_ExecuteUbergraph_BP_ScannerDirector::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_ScannerDirector_C_ExecuteUbergraph_BP_ScannerDirector, CallFunc_BreakHitResult_FaceIndex) == 0x000120, "Member 'BP_ScannerDirector_C_ExecuteUbergraph_BP_ScannerDirector::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_ScannerDirector_C_ExecuteUbergraph_BP_ScannerDirector, CallFunc_BreakHitResult_TraceStart) == 0x000124, "Member 'BP_ScannerDirector_C_ExecuteUbergraph_BP_ScannerDirector::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_ScannerDirector_C_ExecuteUbergraph_BP_ScannerDirector, CallFunc_BreakHitResult_TraceEnd) == 0x000130, "Member 'BP_ScannerDirector_C_ExecuteUbergraph_BP_ScannerDirector::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_ScannerDirector_C_ExecuteUbergraph_BP_ScannerDirector, CallFunc_FindCollisionUV_UV) == 0x00013C, "Member 'BP_ScannerDirector_C_ExecuteUbergraph_BP_ScannerDirector::CallFunc_FindCollisionUV_UV' has a wrong offset!");
static_assert(offsetof(BP_ScannerDirector_C_ExecuteUbergraph_BP_ScannerDirector, CallFunc_FindCollisionUV_ReturnValue) == 0x000144, "Member 'BP_ScannerDirector_C_ExecuteUbergraph_BP_ScannerDirector::CallFunc_FindCollisionUV_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScannerDirector_C_ExecuteUbergraph_BP_ScannerDirector, CallFunc_CheckForExistingRT_RenderTarget) == 0x000148, "Member 'BP_ScannerDirector_C_ExecuteUbergraph_BP_ScannerDirector::CallFunc_CheckForExistingRT_RenderTarget' has a wrong offset!");
static_assert(offsetof(BP_ScannerDirector_C_ExecuteUbergraph_BP_ScannerDirector, CallFunc_IsValid_ReturnValue) == 0x000150, "Member 'BP_ScannerDirector_C_ExecuteUbergraph_BP_ScannerDirector::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScannerDirector_C_ExecuteUbergraph_BP_ScannerDirector, CallFunc_IsValid_ReturnValue_1) == 0x000151, "Member 'BP_ScannerDirector_C_ExecuteUbergraph_BP_ScannerDirector::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ScannerDirector_C_ExecuteUbergraph_BP_ScannerDirector, CallFunc_IsValid_ReturnValue_2) == 0x000152, "Member 'BP_ScannerDirector_C_ExecuteUbergraph_BP_ScannerDirector::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ScannerDirector_C_ExecuteUbergraph_BP_ScannerDirector, CallFunc_Map_Length_ReturnValue) == 0x000154, "Member 'BP_ScannerDirector_C_ExecuteUbergraph_BP_ScannerDirector::CallFunc_Map_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScannerDirector_C_ExecuteUbergraph_BP_ScannerDirector, CallFunc_Conv_IntToString_ReturnValue) == 0x000158, "Member 'BP_ScannerDirector_C_ExecuteUbergraph_BP_ScannerDirector::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScannerDirector_C_ExecuteUbergraph_BP_ScannerDirector, CallFunc_FixUVStretching_FixedSize) == 0x000168, "Member 'BP_ScannerDirector_C_ExecuteUbergraph_BP_ScannerDirector::CallFunc_FixUVStretching_FixedSize' has a wrong offset!");
static_assert(offsetof(BP_ScannerDirector_C_ExecuteUbergraph_BP_ScannerDirector, CallFunc_FixUVStretching_FixedStretch) == 0x00016C, "Member 'BP_ScannerDirector_C_ExecuteUbergraph_BP_ScannerDirector::CallFunc_FixUVStretching_FixedStretch' has a wrong offset!");
static_assert(offsetof(BP_ScannerDirector_C_ExecuteUbergraph_BP_ScannerDirector, CallFunc_Conv_Vector2DToVector_ReturnValue) == 0x000178, "Member 'BP_ScannerDirector_C_ExecuteUbergraph_BP_ScannerDirector::CallFunc_Conv_Vector2DToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScannerDirector_C_ExecuteUbergraph_BP_ScannerDirector, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x000184, "Member 'BP_ScannerDirector_C_ExecuteUbergraph_BP_ScannerDirector::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScannerDirector_C_ExecuteUbergraph_BP_ScannerDirector, CallFunc_Conv_VectorToLinearColor_ReturnValue_1) == 0x000194, "Member 'BP_ScannerDirector_C_ExecuteUbergraph_BP_ScannerDirector::CallFunc_Conv_VectorToLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ScannerDirector_C_ExecuteUbergraph_BP_ScannerDirector, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0001A4, "Member 'BP_ScannerDirector_C_ExecuteUbergraph_BP_ScannerDirector::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScannerDirector_C_ExecuteUbergraph_BP_ScannerDirector, CallFunc_GetPlayerPawn_ReturnValue) == 0x0001A8, "Member 'BP_ScannerDirector_C_ExecuteUbergraph_BP_ScannerDirector::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScannerDirector_C_ExecuteUbergraph_BP_ScannerDirector, CallFunc_Array_Add_ReturnValue) == 0x0001B0, "Member 'BP_ScannerDirector_C_ExecuteUbergraph_BP_ScannerDirector::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_ScannerDirector.BP_ScannerDirector_C.MC_LidarDot
// 0x008C (0x008C - 0x0000)
struct BP_ScannerDirector_C_MC_LidarDot final
{
public:
	struct FHitResult                             HitResult;                                         // 0x0000(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FColor                                 Color;                                             // 0x0088(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ScannerDirector_C_MC_LidarDot) == 0x000004, "Wrong alignment on BP_ScannerDirector_C_MC_LidarDot");
static_assert(sizeof(BP_ScannerDirector_C_MC_LidarDot) == 0x00008C, "Wrong size on BP_ScannerDirector_C_MC_LidarDot");
static_assert(offsetof(BP_ScannerDirector_C_MC_LidarDot, HitResult) == 0x000000, "Member 'BP_ScannerDirector_C_MC_LidarDot::HitResult' has a wrong offset!");
static_assert(offsetof(BP_ScannerDirector_C_MC_LidarDot, Color) == 0x000088, "Member 'BP_ScannerDirector_C_MC_LidarDot::Color' has a wrong offset!");

// Function BP_ScannerDirector.BP_ScannerDirector_C.CheckForExistingRT
// 0x00B8 (0x00B8 - 0x0000)
struct BP_ScannerDirector_C_CheckForExistingRT final
{
public:
	class AActor*                                 HitActor;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 RenderTarget;                                      // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorBounds_Origin;                    // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorBounds_BoxExtent;                 // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLIDARDotStruct                        CallFunc_Map_Find_Value;                           // 0x0070(0x0010)(NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 CallFunc_CreateRenderTarget2D_ReturnValue;         // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLIDARDotStruct                        CallFunc_CreateLiDarDot_ReturnValue;               // 0x00A8(0x0010)(NoDestructor)
};
static_assert(alignof(BP_ScannerDirector_C_CheckForExistingRT) == 0x000008, "Wrong alignment on BP_ScannerDirector_C_CheckForExistingRT");
static_assert(sizeof(BP_ScannerDirector_C_CheckForExistingRT) == 0x0000B8, "Wrong size on BP_ScannerDirector_C_CheckForExistingRT");
static_assert(offsetof(BP_ScannerDirector_C_CheckForExistingRT, HitActor) == 0x000000, "Member 'BP_ScannerDirector_C_CheckForExistingRT::HitActor' has a wrong offset!");
static_assert(offsetof(BP_ScannerDirector_C_CheckForExistingRT, HitComponent) == 0x000008, "Member 'BP_ScannerDirector_C_CheckForExistingRT::HitComponent' has a wrong offset!");
static_assert(offsetof(BP_ScannerDirector_C_CheckForExistingRT, RenderTarget) == 0x000010, "Member 'BP_ScannerDirector_C_CheckForExistingRT::RenderTarget' has a wrong offset!");
static_assert(offsetof(BP_ScannerDirector_C_CheckForExistingRT, CallFunc_GetMaterial_ReturnValue) == 0x000018, "Member 'BP_ScannerDirector_C_CheckForExistingRT::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScannerDirector_C_CheckForExistingRT, CallFunc_GetActorBounds_Origin) == 0x000020, "Member 'BP_ScannerDirector_C_CheckForExistingRT::CallFunc_GetActorBounds_Origin' has a wrong offset!");
static_assert(offsetof(BP_ScannerDirector_C_CheckForExistingRT, CallFunc_GetActorBounds_BoxExtent) == 0x00002C, "Member 'BP_ScannerDirector_C_CheckForExistingRT::CallFunc_GetActorBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(BP_ScannerDirector_C_CheckForExistingRT, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000038, "Member 'BP_ScannerDirector_C_CheckForExistingRT::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScannerDirector_C_CheckForExistingRT, CallFunc_BreakVector_X) == 0x000040, "Member 'BP_ScannerDirector_C_CheckForExistingRT::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_ScannerDirector_C_CheckForExistingRT, CallFunc_BreakVector_Y) == 0x000044, "Member 'BP_ScannerDirector_C_CheckForExistingRT::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_ScannerDirector_C_CheckForExistingRT, CallFunc_BreakVector_Z) == 0x000048, "Member 'BP_ScannerDirector_C_CheckForExistingRT::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_ScannerDirector_C_CheckForExistingRT, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00004C, "Member 'BP_ScannerDirector_C_CheckForExistingRT::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScannerDirector_C_CheckForExistingRT, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000050, "Member 'BP_ScannerDirector_C_CheckForExistingRT::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ScannerDirector_C_CheckForExistingRT, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000054, "Member 'BP_ScannerDirector_C_CheckForExistingRT::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ScannerDirector_C_CheckForExistingRT, CallFunc_GetObjectName_ReturnValue) == 0x000058, "Member 'BP_ScannerDirector_C_CheckForExistingRT::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScannerDirector_C_CheckForExistingRT, CallFunc_Add_FloatFloat_ReturnValue) == 0x000068, "Member 'BP_ScannerDirector_C_CheckForExistingRT::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScannerDirector_C_CheckForExistingRT, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x00006C, "Member 'BP_ScannerDirector_C_CheckForExistingRT::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ScannerDirector_C_CheckForExistingRT, CallFunc_Map_Find_Value) == 0x000070, "Member 'BP_ScannerDirector_C_CheckForExistingRT::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_ScannerDirector_C_CheckForExistingRT, CallFunc_Map_Find_ReturnValue) == 0x000080, "Member 'BP_ScannerDirector_C_CheckForExistingRT::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScannerDirector_C_CheckForExistingRT, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x000084, "Member 'BP_ScannerDirector_C_CheckForExistingRT::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ScannerDirector_C_CheckForExistingRT, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000088, "Member 'BP_ScannerDirector_C_CheckForExistingRT::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScannerDirector_C_CheckForExistingRT, CallFunc_MapRangeClamped_ReturnValue) == 0x00008C, "Member 'BP_ScannerDirector_C_CheckForExistingRT::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScannerDirector_C_CheckForExistingRT, CallFunc_FTrunc_ReturnValue) == 0x000090, "Member 'BP_ScannerDirector_C_CheckForExistingRT::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScannerDirector_C_CheckForExistingRT, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000094, "Member 'BP_ScannerDirector_C_CheckForExistingRT::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScannerDirector_C_CheckForExistingRT, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000098, "Member 'BP_ScannerDirector_C_CheckForExistingRT::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScannerDirector_C_CheckForExistingRT, CallFunc_FTrunc_ReturnValue_1) == 0x00009C, "Member 'BP_ScannerDirector_C_CheckForExistingRT::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ScannerDirector_C_CheckForExistingRT, CallFunc_CreateRenderTarget2D_ReturnValue) == 0x0000A0, "Member 'BP_ScannerDirector_C_CheckForExistingRT::CallFunc_CreateRenderTarget2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScannerDirector_C_CheckForExistingRT, CallFunc_CreateLiDarDot_ReturnValue) == 0x0000A8, "Member 'BP_ScannerDirector_C_CheckForExistingRT::CallFunc_CreateLiDarDot_ReturnValue' has a wrong offset!");

// Function BP_ScannerDirector.BP_ScannerDirector_C.FixUVStretching
// 0x01F0 (0x01F0 - 0x0000)
struct BP_ScannerDirector_C_FixUVStretching final
{
public:
	struct FVector                                HitLocation;                                       // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal;                                         // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FaceIndex;                                         // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              HitUVLocation;                                     // 0x0024(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FixedSize;                                         // 0x002C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FixedStretch;                                      // 0x0030(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRandomStream                          CallFunc_MakeRandomStream_ReturnValue;             // 0x003C(0x0008)(ZeroConstructor, NoDestructor)
	struct FVector                                CallFunc_RandomUnitVectorFromStream_ReturnValue;   // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue_1;         // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_MakeHitResult_ReturnValue;                // 0x008C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0114(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_FindCollisionUV_UV;                       // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindCollisionUV_ReturnValue;              // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_129[0x3];                                      // 0x0129(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_MakeHitResult_ReturnValue_1;              // 0x012C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x01B4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_FindCollisionUV_UV_1;                     // 0x01BC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindCollisionUV_ReturnValue_1;            // 0x01C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C5[0x3];                                      // 0x01C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_DotProduct2D_ReturnValue;                 // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue_1;  // 0x01CC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x01D4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DotProduct2D_ReturnValue_1;               // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize2D_ReturnValue;                      // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x01E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ScannerDirector_C_FixUVStretching) == 0x000008, "Wrong alignment on BP_ScannerDirector_C_FixUVStretching");
static_assert(sizeof(BP_ScannerDirector_C_FixUVStretching) == 0x0001F0, "Wrong size on BP_ScannerDirector_C_FixUVStretching");
static_assert(offsetof(BP_ScannerDirector_C_FixUVStretching, HitLocation) == 0x000000, "Member 'BP_ScannerDirector_C_FixUVStretching::HitLocation' has a wrong offset!");
static_assert(offsetof(BP_ScannerDirector_C_FixUVStretching, HitNormal) == 0x00000C, "Member 'BP_ScannerDirector_C_FixUVStretching::HitNormal' has a wrong offset!");
static_assert(offsetof(BP_ScannerDirector_C_FixUVStretching, HitComponent) == 0x000018, "Member 'BP_ScannerDirector_C_FixUVStretching::HitComponent' has a wrong offset!");
static_assert(offsetof(BP_ScannerDirector_C_FixUVStretching, FaceIndex) == 0x000020, "Member 'BP_ScannerDirector_C_FixUVStretching::FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_ScannerDirector_C_FixUVStretching, HitUVLocation) == 0x000024, "Member 'BP_ScannerDirector_C_FixUVStretching::HitUVLocation' has a wrong offset!");
static_assert(offsetof(BP_ScannerDirector_C_FixUVStretching, FixedSize) == 0x00002C, "Member 'BP_ScannerDirector_C_FixUVStretching::FixedSize' has a wrong offset!");
static_assert(offsetof(BP_ScannerDirector_C_FixUVStretching, FixedStretch) == 0x000030, "Member 'BP_ScannerDirector_C_FixUVStretching::FixedStretch' has a wrong offset!");
static_assert(offsetof(BP_ScannerDirector_C_FixUVStretching, CallFunc_MakeRandomStream_ReturnValue) == 0x00003C, "Member 'BP_ScannerDirector_C_FixUVStretching::CallFunc_MakeRandomStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScannerDirector_C_FixUVStretching, CallFunc_RandomUnitVectorFromStream_ReturnValue) == 0x000044, "Member 'BP_ScannerDirector_C_FixUVStretching::CallFunc_RandomUnitVectorFromStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScannerDirector_C_FixUVStretching, CallFunc_Cross_VectorVector_ReturnValue) == 0x000050, "Member 'BP_ScannerDirector_C_FixUVStretching::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScannerDirector_C_FixUVStretching, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00005C, "Member 'BP_ScannerDirector_C_FixUVStretching::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScannerDirector_C_FixUVStretching, CallFunc_Cross_VectorVector_ReturnValue_1) == 0x000068, "Member 'BP_ScannerDirector_C_FixUVStretching::CallFunc_Cross_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ScannerDirector_C_FixUVStretching, CallFunc_Add_VectorVector_ReturnValue) == 0x000074, "Member 'BP_ScannerDirector_C_FixUVStretching::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScannerDirector_C_FixUVStretching, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000080, "Member 'BP_ScannerDirector_C_FixUVStretching::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ScannerDirector_C_FixUVStretching, CallFunc_MakeHitResult_ReturnValue) == 0x00008C, "Member 'BP_ScannerDirector_C_FixUVStretching::CallFunc_MakeHitResult_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScannerDirector_C_FixUVStretching, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000114, "Member 'BP_ScannerDirector_C_FixUVStretching::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ScannerDirector_C_FixUVStretching, CallFunc_FindCollisionUV_UV) == 0x000120, "Member 'BP_ScannerDirector_C_FixUVStretching::CallFunc_FindCollisionUV_UV' has a wrong offset!");
static_assert(offsetof(BP_ScannerDirector_C_FixUVStretching, CallFunc_FindCollisionUV_ReturnValue) == 0x000128, "Member 'BP_ScannerDirector_C_FixUVStretching::CallFunc_FindCollisionUV_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScannerDirector_C_FixUVStretching, CallFunc_MakeHitResult_ReturnValue_1) == 0x00012C, "Member 'BP_ScannerDirector_C_FixUVStretching::CallFunc_MakeHitResult_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ScannerDirector_C_FixUVStretching, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x0001B4, "Member 'BP_ScannerDirector_C_FixUVStretching::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScannerDirector_C_FixUVStretching, CallFunc_FindCollisionUV_UV_1) == 0x0001BC, "Member 'BP_ScannerDirector_C_FixUVStretching::CallFunc_FindCollisionUV_UV_1' has a wrong offset!");
static_assert(offsetof(BP_ScannerDirector_C_FixUVStretching, CallFunc_FindCollisionUV_ReturnValue_1) == 0x0001C4, "Member 'BP_ScannerDirector_C_FixUVStretching::CallFunc_FindCollisionUV_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ScannerDirector_C_FixUVStretching, CallFunc_DotProduct2D_ReturnValue) == 0x0001C8, "Member 'BP_ScannerDirector_C_FixUVStretching::CallFunc_DotProduct2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScannerDirector_C_FixUVStretching, CallFunc_Subtract_Vector2DVector2D_ReturnValue_1) == 0x0001CC, "Member 'BP_ScannerDirector_C_FixUVStretching::CallFunc_Subtract_Vector2DVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ScannerDirector_C_FixUVStretching, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x0001D4, "Member 'BP_ScannerDirector_C_FixUVStretching::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScannerDirector_C_FixUVStretching, CallFunc_DotProduct2D_ReturnValue_1) == 0x0001DC, "Member 'BP_ScannerDirector_C_FixUVStretching::CallFunc_DotProduct2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ScannerDirector_C_FixUVStretching, CallFunc_VSize2D_ReturnValue) == 0x0001E0, "Member 'BP_ScannerDirector_C_FixUVStretching::CallFunc_VSize2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScannerDirector_C_FixUVStretching, CallFunc_MakeVector_ReturnValue) == 0x0001E4, "Member 'BP_ScannerDirector_C_FixUVStretching::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function BP_ScannerDirector.BP_ScannerDirector_C.InitializeMaterials
// 0x0008 (0x0008 - 0x0000)
struct BP_ScannerDirector_C_InitializeMaterials final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ScannerDirector_C_InitializeMaterials) == 0x000008, "Wrong alignment on BP_ScannerDirector_C_InitializeMaterials");
static_assert(sizeof(BP_ScannerDirector_C_InitializeMaterials) == 0x000008, "Wrong size on BP_ScannerDirector_C_InitializeMaterials");
static_assert(offsetof(BP_ScannerDirector_C_InitializeMaterials, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000000, "Member 'BP_ScannerDirector_C_InitializeMaterials::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");

}

