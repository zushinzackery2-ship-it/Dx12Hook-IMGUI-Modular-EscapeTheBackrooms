#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AC_VineGrowth

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function AC_VineGrowth.AC_VineGrowth_C.ExecuteUbergraph_AC_VineGrowth
// 0x01B0 (0x01B0 - 0x0000)
struct AC_VineGrowth_C_ExecuteUbergraph_AC_VineGrowth final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0028(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayerInGrass_IsInGrass;                // 0x004F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable_2;               // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B[0x1];                                       // 0x005B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x005C(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_1;    // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x006E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x006F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABPCharacter_Demo_C*                    K2Node_DynamicCast_AsBPCharacter_Demo;             // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0xF];                                       // 0x0081(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0090(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleHalfHeight_ReturnValue;   // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AVineGrow_BP_C*                         CallFunc_FinishSpawningActor_ReturnValue;          // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_AddActorLocalOffset_SweepHitResult;    // 0x00E8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          Temp_bool_IsClosed_Variable_2;                     // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_171[0x3];                                      // 0x0171(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x0178(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckAllPlayersTangled_AllTangled;        // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABPCharacter_Demo_C*>            CallFunc_CheckAllPlayersTangled_Characters;        // 0x0188(0x0010)(ReferenceParm)
	class ABPCharacter_Demo_C*                    CallFunc_Array_Get_Item;                           // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AC_VineGrowth_C_ExecuteUbergraph_AC_VineGrowth) == 0x000010, "Wrong alignment on AC_VineGrowth_C_ExecuteUbergraph_AC_VineGrowth");
static_assert(sizeof(AC_VineGrowth_C_ExecuteUbergraph_AC_VineGrowth) == 0x0001B0, "Wrong size on AC_VineGrowth_C_ExecuteUbergraph_AC_VineGrowth");
static_assert(offsetof(AC_VineGrowth_C_ExecuteUbergraph_AC_VineGrowth, EntryPoint) == 0x000000, "Member 'AC_VineGrowth_C_ExecuteUbergraph_AC_VineGrowth::EntryPoint' has a wrong offset!");
static_assert(offsetof(AC_VineGrowth_C_ExecuteUbergraph_AC_VineGrowth, CallFunc_IsDedicatedServer_ReturnValue) == 0x000004, "Member 'AC_VineGrowth_C_ExecuteUbergraph_AC_VineGrowth::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_VineGrowth_C_ExecuteUbergraph_AC_VineGrowth, CallFunc_IsValid_ReturnValue) == 0x000005, "Member 'AC_VineGrowth_C_ExecuteUbergraph_AC_VineGrowth::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_VineGrowth_C_ExecuteUbergraph_AC_VineGrowth, CallFunc_IsValid_ReturnValue_1) == 0x000006, "Member 'AC_VineGrowth_C_ExecuteUbergraph_AC_VineGrowth::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_VineGrowth_C_ExecuteUbergraph_AC_VineGrowth, Temp_bool_IsClosed_Variable) == 0x000007, "Member 'AC_VineGrowth_C_ExecuteUbergraph_AC_VineGrowth::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(AC_VineGrowth_C_ExecuteUbergraph_AC_VineGrowth, Temp_bool_Has_Been_Initd_Variable) == 0x000008, "Member 'AC_VineGrowth_C_ExecuteUbergraph_AC_VineGrowth::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(AC_VineGrowth_C_ExecuteUbergraph_AC_VineGrowth, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'AC_VineGrowth_C_ExecuteUbergraph_AC_VineGrowth::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AC_VineGrowth_C_ExecuteUbergraph_AC_VineGrowth, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'AC_VineGrowth_C_ExecuteUbergraph_AC_VineGrowth::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_VineGrowth_C_ExecuteUbergraph_AC_VineGrowth, Temp_int_Array_Index_Variable) == 0x000014, "Member 'AC_VineGrowth_C_ExecuteUbergraph_AC_VineGrowth::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AC_VineGrowth_C_ExecuteUbergraph_AC_VineGrowth, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'AC_VineGrowth_C_ExecuteUbergraph_AC_VineGrowth::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(AC_VineGrowth_C_ExecuteUbergraph_AC_VineGrowth, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000028, "Member 'AC_VineGrowth_C_ExecuteUbergraph_AC_VineGrowth::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_VineGrowth_C_ExecuteUbergraph_AC_VineGrowth, K2Node_Event_DeltaSeconds) == 0x000030, "Member 'AC_VineGrowth_C_ExecuteUbergraph_AC_VineGrowth::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(AC_VineGrowth_C_ExecuteUbergraph_AC_VineGrowth, CallFunc_Add_FloatFloat_ReturnValue) == 0x000034, "Member 'AC_VineGrowth_C_ExecuteUbergraph_AC_VineGrowth::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_VineGrowth_C_ExecuteUbergraph_AC_VineGrowth, CallFunc_Not_PreBool_ReturnValue) == 0x000038, "Member 'AC_VineGrowth_C_ExecuteUbergraph_AC_VineGrowth::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_VineGrowth_C_ExecuteUbergraph_AC_VineGrowth, CallFunc_GetVelocity_ReturnValue) == 0x00003C, "Member 'AC_VineGrowth_C_ExecuteUbergraph_AC_VineGrowth::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_VineGrowth_C_ExecuteUbergraph_AC_VineGrowth, CallFunc_VSize_ReturnValue) == 0x000048, "Member 'AC_VineGrowth_C_ExecuteUbergraph_AC_VineGrowth::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_VineGrowth_C_ExecuteUbergraph_AC_VineGrowth, CallFunc_Less_FloatFloat_ReturnValue) == 0x00004C, "Member 'AC_VineGrowth_C_ExecuteUbergraph_AC_VineGrowth::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_VineGrowth_C_ExecuteUbergraph_AC_VineGrowth, Temp_bool_Has_Been_Initd_Variable_1) == 0x00004D, "Member 'AC_VineGrowth_C_ExecuteUbergraph_AC_VineGrowth::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(AC_VineGrowth_C_ExecuteUbergraph_AC_VineGrowth, CallFunc_BooleanAND_ReturnValue) == 0x00004E, "Member 'AC_VineGrowth_C_ExecuteUbergraph_AC_VineGrowth::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_VineGrowth_C_ExecuteUbergraph_AC_VineGrowth, CallFunc_IsPlayerInGrass_IsInGrass) == 0x00004F, "Member 'AC_VineGrowth_C_ExecuteUbergraph_AC_VineGrowth::CallFunc_IsPlayerInGrass_IsInGrass' has a wrong offset!");
static_assert(offsetof(AC_VineGrowth_C_ExecuteUbergraph_AC_VineGrowth, CallFunc_GetOwner_ReturnValue) == 0x000050, "Member 'AC_VineGrowth_C_ExecuteUbergraph_AC_VineGrowth::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_VineGrowth_C_ExecuteUbergraph_AC_VineGrowth, CallFunc_IsValid_ReturnValue_2) == 0x000058, "Member 'AC_VineGrowth_C_ExecuteUbergraph_AC_VineGrowth::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_VineGrowth_C_ExecuteUbergraph_AC_VineGrowth, CallFunc_HasAuthority_ReturnValue) == 0x000059, "Member 'AC_VineGrowth_C_ExecuteUbergraph_AC_VineGrowth::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_VineGrowth_C_ExecuteUbergraph_AC_VineGrowth, Temp_bool_Has_Been_Initd_Variable_2) == 0x00005A, "Member 'AC_VineGrowth_C_ExecuteUbergraph_AC_VineGrowth::Temp_bool_Has_Been_Initd_Variable_2' has a wrong offset!");
static_assert(offsetof(AC_VineGrowth_C_ExecuteUbergraph_AC_VineGrowth, K2Node_CreateDelegate_OutputDelegate_1) == 0x00005C, "Member 'AC_VineGrowth_C_ExecuteUbergraph_AC_VineGrowth::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(AC_VineGrowth_C_ExecuteUbergraph_AC_VineGrowth, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x00006C, "Member 'AC_VineGrowth_C_ExecuteUbergraph_AC_VineGrowth::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_VineGrowth_C_ExecuteUbergraph_AC_VineGrowth, CallFunc_GreaterEqual_FloatFloat_ReturnValue_1) == 0x00006D, "Member 'AC_VineGrowth_C_ExecuteUbergraph_AC_VineGrowth::CallFunc_GreaterEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_VineGrowth_C_ExecuteUbergraph_AC_VineGrowth, Temp_bool_IsClosed_Variable_1) == 0x00006E, "Member 'AC_VineGrowth_C_ExecuteUbergraph_AC_VineGrowth::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(AC_VineGrowth_C_ExecuteUbergraph_AC_VineGrowth, K2Node_Event_EndPlayReason) == 0x00006F, "Member 'AC_VineGrowth_C_ExecuteUbergraph_AC_VineGrowth::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(AC_VineGrowth_C_ExecuteUbergraph_AC_VineGrowth, CallFunc_GetOwner_ReturnValue_1) == 0x000070, "Member 'AC_VineGrowth_C_ExecuteUbergraph_AC_VineGrowth::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_VineGrowth_C_ExecuteUbergraph_AC_VineGrowth, K2Node_DynamicCast_AsBPCharacter_Demo) == 0x000078, "Member 'AC_VineGrowth_C_ExecuteUbergraph_AC_VineGrowth::K2Node_DynamicCast_AsBPCharacter_Demo' has a wrong offset!");
static_assert(offsetof(AC_VineGrowth_C_ExecuteUbergraph_AC_VineGrowth, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'AC_VineGrowth_C_ExecuteUbergraph_AC_VineGrowth::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AC_VineGrowth_C_ExecuteUbergraph_AC_VineGrowth, CallFunc_GetTransform_ReturnValue) == 0x000090, "Member 'AC_VineGrowth_C_ExecuteUbergraph_AC_VineGrowth::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_VineGrowth_C_ExecuteUbergraph_AC_VineGrowth, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0000C0, "Member 'AC_VineGrowth_C_ExecuteUbergraph_AC_VineGrowth::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_VineGrowth_C_ExecuteUbergraph_AC_VineGrowth, CallFunc_GetScaledCapsuleHalfHeight_ReturnValue) == 0x0000C8, "Member 'AC_VineGrowth_C_ExecuteUbergraph_AC_VineGrowth::CallFunc_GetScaledCapsuleHalfHeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_VineGrowth_C_ExecuteUbergraph_AC_VineGrowth, CallFunc_FinishSpawningActor_ReturnValue) == 0x0000D0, "Member 'AC_VineGrowth_C_ExecuteUbergraph_AC_VineGrowth::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_VineGrowth_C_ExecuteUbergraph_AC_VineGrowth, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000D8, "Member 'AC_VineGrowth_C_ExecuteUbergraph_AC_VineGrowth::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_VineGrowth_C_ExecuteUbergraph_AC_VineGrowth, CallFunc_MakeVector_ReturnValue) == 0x0000DC, "Member 'AC_VineGrowth_C_ExecuteUbergraph_AC_VineGrowth::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_VineGrowth_C_ExecuteUbergraph_AC_VineGrowth, CallFunc_K2_AddActorLocalOffset_SweepHitResult) == 0x0000E8, "Member 'AC_VineGrowth_C_ExecuteUbergraph_AC_VineGrowth::CallFunc_K2_AddActorLocalOffset_SweepHitResult' has a wrong offset!");
static_assert(offsetof(AC_VineGrowth_C_ExecuteUbergraph_AC_VineGrowth, Temp_bool_IsClosed_Variable_2) == 0x000170, "Member 'AC_VineGrowth_C_ExecuteUbergraph_AC_VineGrowth::Temp_bool_IsClosed_Variable_2' has a wrong offset!");
static_assert(offsetof(AC_VineGrowth_C_ExecuteUbergraph_AC_VineGrowth, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000174, "Member 'AC_VineGrowth_C_ExecuteUbergraph_AC_VineGrowth::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_VineGrowth_C_ExecuteUbergraph_AC_VineGrowth, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x000178, "Member 'AC_VineGrowth_C_ExecuteUbergraph_AC_VineGrowth::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_VineGrowth_C_ExecuteUbergraph_AC_VineGrowth, CallFunc_CheckAllPlayersTangled_AllTangled) == 0x000180, "Member 'AC_VineGrowth_C_ExecuteUbergraph_AC_VineGrowth::CallFunc_CheckAllPlayersTangled_AllTangled' has a wrong offset!");
static_assert(offsetof(AC_VineGrowth_C_ExecuteUbergraph_AC_VineGrowth, CallFunc_CheckAllPlayersTangled_Characters) == 0x000188, "Member 'AC_VineGrowth_C_ExecuteUbergraph_AC_VineGrowth::CallFunc_CheckAllPlayersTangled_Characters' has a wrong offset!");
static_assert(offsetof(AC_VineGrowth_C_ExecuteUbergraph_AC_VineGrowth, CallFunc_Array_Get_Item) == 0x000198, "Member 'AC_VineGrowth_C_ExecuteUbergraph_AC_VineGrowth::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AC_VineGrowth_C_ExecuteUbergraph_AC_VineGrowth, CallFunc_Array_Length_ReturnValue) == 0x0001A0, "Member 'AC_VineGrowth_C_ExecuteUbergraph_AC_VineGrowth::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_VineGrowth_C_ExecuteUbergraph_AC_VineGrowth, CallFunc_Less_IntInt_ReturnValue) == 0x0001A4, "Member 'AC_VineGrowth_C_ExecuteUbergraph_AC_VineGrowth::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function AC_VineGrowth.AC_VineGrowth_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct AC_VineGrowth_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_VineGrowth_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on AC_VineGrowth_C_ReceiveEndPlay");
static_assert(sizeof(AC_VineGrowth_C_ReceiveEndPlay) == 0x000001, "Wrong size on AC_VineGrowth_C_ReceiveEndPlay");
static_assert(offsetof(AC_VineGrowth_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'AC_VineGrowth_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function AC_VineGrowth.AC_VineGrowth_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct AC_VineGrowth_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_VineGrowth_C_ReceiveTick) == 0x000004, "Wrong alignment on AC_VineGrowth_C_ReceiveTick");
static_assert(sizeof(AC_VineGrowth_C_ReceiveTick) == 0x000004, "Wrong size on AC_VineGrowth_C_ReceiveTick");
static_assert(offsetof(AC_VineGrowth_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'AC_VineGrowth_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function AC_VineGrowth.AC_VineGrowth_C.IsPlayerInGrass
// 0x0148 (0x0148 - 0x0000)
struct AC_VineGrowth_C_IsPlayerInGrass final
{
public:
	bool                                          IsInGrass;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0008(0x0010)(ConstParm, ReferenceParm)
	class UPawnMovementComponent*                 CallFunc_GetMovementComponent_ReturnValue;         // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMovingOnGround_ReturnValue;             // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_SphereTraceSingle_OutHit;                 // 0x003C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingle_ReturnValue;            // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00C6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C7[0x1];                                       // 0x00C7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x00F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0110(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x012C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0138(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AC_VineGrowth_C_IsPlayerInGrass) == 0x000008, "Wrong alignment on AC_VineGrowth_C_IsPlayerInGrass");
static_assert(sizeof(AC_VineGrowth_C_IsPlayerInGrass) == 0x000148, "Wrong size on AC_VineGrowth_C_IsPlayerInGrass");
static_assert(offsetof(AC_VineGrowth_C_IsPlayerInGrass, IsInGrass) == 0x000000, "Member 'AC_VineGrowth_C_IsPlayerInGrass::IsInGrass' has a wrong offset!");
static_assert(offsetof(AC_VineGrowth_C_IsPlayerInGrass, Temp_object_Variable) == 0x000008, "Member 'AC_VineGrowth_C_IsPlayerInGrass::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(AC_VineGrowth_C_IsPlayerInGrass, CallFunc_GetMovementComponent_ReturnValue) == 0x000018, "Member 'AC_VineGrowth_C_IsPlayerInGrass::CallFunc_GetMovementComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_VineGrowth_C_IsPlayerInGrass, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000020, "Member 'AC_VineGrowth_C_IsPlayerInGrass::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_VineGrowth_C_IsPlayerInGrass, CallFunc_IsMovingOnGround_ReturnValue) == 0x00002C, "Member 'AC_VineGrowth_C_IsPlayerInGrass::CallFunc_IsMovingOnGround_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_VineGrowth_C_IsPlayerInGrass, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000030, "Member 'AC_VineGrowth_C_IsPlayerInGrass::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_VineGrowth_C_IsPlayerInGrass, CallFunc_SphereTraceSingle_OutHit) == 0x00003C, "Member 'AC_VineGrowth_C_IsPlayerInGrass::CallFunc_SphereTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(AC_VineGrowth_C_IsPlayerInGrass, CallFunc_SphereTraceSingle_ReturnValue) == 0x0000C4, "Member 'AC_VineGrowth_C_IsPlayerInGrass::CallFunc_SphereTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_VineGrowth_C_IsPlayerInGrass, CallFunc_BreakHitResult_bBlockingHit) == 0x0000C5, "Member 'AC_VineGrowth_C_IsPlayerInGrass::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(AC_VineGrowth_C_IsPlayerInGrass, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000C6, "Member 'AC_VineGrowth_C_IsPlayerInGrass::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(AC_VineGrowth_C_IsPlayerInGrass, CallFunc_BreakHitResult_Time) == 0x0000C8, "Member 'AC_VineGrowth_C_IsPlayerInGrass::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(AC_VineGrowth_C_IsPlayerInGrass, CallFunc_BreakHitResult_Distance) == 0x0000CC, "Member 'AC_VineGrowth_C_IsPlayerInGrass::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(AC_VineGrowth_C_IsPlayerInGrass, CallFunc_BreakHitResult_Location) == 0x0000D0, "Member 'AC_VineGrowth_C_IsPlayerInGrass::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(AC_VineGrowth_C_IsPlayerInGrass, CallFunc_BreakHitResult_ImpactPoint) == 0x0000DC, "Member 'AC_VineGrowth_C_IsPlayerInGrass::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(AC_VineGrowth_C_IsPlayerInGrass, CallFunc_BreakHitResult_Normal) == 0x0000E8, "Member 'AC_VineGrowth_C_IsPlayerInGrass::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(AC_VineGrowth_C_IsPlayerInGrass, CallFunc_BreakHitResult_ImpactNormal) == 0x0000F4, "Member 'AC_VineGrowth_C_IsPlayerInGrass::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(AC_VineGrowth_C_IsPlayerInGrass, CallFunc_BreakHitResult_PhysMat) == 0x000100, "Member 'AC_VineGrowth_C_IsPlayerInGrass::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(AC_VineGrowth_C_IsPlayerInGrass, CallFunc_BreakHitResult_HitActor) == 0x000108, "Member 'AC_VineGrowth_C_IsPlayerInGrass::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(AC_VineGrowth_C_IsPlayerInGrass, CallFunc_BreakHitResult_HitComponent) == 0x000110, "Member 'AC_VineGrowth_C_IsPlayerInGrass::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(AC_VineGrowth_C_IsPlayerInGrass, CallFunc_BreakHitResult_HitBoneName) == 0x000118, "Member 'AC_VineGrowth_C_IsPlayerInGrass::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(AC_VineGrowth_C_IsPlayerInGrass, CallFunc_BreakHitResult_HitItem) == 0x000120, "Member 'AC_VineGrowth_C_IsPlayerInGrass::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(AC_VineGrowth_C_IsPlayerInGrass, CallFunc_BreakHitResult_ElementIndex) == 0x000124, "Member 'AC_VineGrowth_C_IsPlayerInGrass::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(AC_VineGrowth_C_IsPlayerInGrass, CallFunc_BreakHitResult_FaceIndex) == 0x000128, "Member 'AC_VineGrowth_C_IsPlayerInGrass::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(AC_VineGrowth_C_IsPlayerInGrass, CallFunc_BreakHitResult_TraceStart) == 0x00012C, "Member 'AC_VineGrowth_C_IsPlayerInGrass::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(AC_VineGrowth_C_IsPlayerInGrass, CallFunc_BreakHitResult_TraceEnd) == 0x000138, "Member 'AC_VineGrowth_C_IsPlayerInGrass::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(AC_VineGrowth_C_IsPlayerInGrass, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000144, "Member 'AC_VineGrowth_C_IsPlayerInGrass::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function AC_VineGrowth.AC_VineGrowth_C.OnRep_GrowVinesClient
// 0x0001 (0x0001 - 0x0000)
struct AC_VineGrowth_C_OnRep_GrowVinesClient final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AC_VineGrowth_C_OnRep_GrowVinesClient) == 0x000001, "Wrong alignment on AC_VineGrowth_C_OnRep_GrowVinesClient");
static_assert(sizeof(AC_VineGrowth_C_OnRep_GrowVinesClient) == 0x000001, "Wrong size on AC_VineGrowth_C_OnRep_GrowVinesClient");
static_assert(offsetof(AC_VineGrowth_C_OnRep_GrowVinesClient, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'AC_VineGrowth_C_OnRep_GrowVinesClient::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function AC_VineGrowth.AC_VineGrowth_C.CheckAllPlayersTangled
// 0x0060 (0x0060 - 0x0000)
struct AC_VineGrowth_C_CheckAllPlayersTangled final
{
public:
	bool                                          AllTangled;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABPCharacter_Demo_C*>            Characters;                                        // 0x0008(0x0010)(Parm, OutParm)
	TArray<class ABPCharacter_Demo_C*>            PlayerArray;                                       // 0x0018(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABPCharacter_Demo_C*>            CallFunc_GetAllActorsOfClass_OutActors;            // 0x0038(0x0010)(ReferenceParm)
	class ABPCharacter_Demo_C*                    CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAC_VineGrowth_C*                       CallFunc_GetComponentByClass_ReturnValue;          // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AC_VineGrowth_C_CheckAllPlayersTangled) == 0x000008, "Wrong alignment on AC_VineGrowth_C_CheckAllPlayersTangled");
static_assert(sizeof(AC_VineGrowth_C_CheckAllPlayersTangled) == 0x000060, "Wrong size on AC_VineGrowth_C_CheckAllPlayersTangled");
static_assert(offsetof(AC_VineGrowth_C_CheckAllPlayersTangled, AllTangled) == 0x000000, "Member 'AC_VineGrowth_C_CheckAllPlayersTangled::AllTangled' has a wrong offset!");
static_assert(offsetof(AC_VineGrowth_C_CheckAllPlayersTangled, Characters) == 0x000008, "Member 'AC_VineGrowth_C_CheckAllPlayersTangled::Characters' has a wrong offset!");
static_assert(offsetof(AC_VineGrowth_C_CheckAllPlayersTangled, PlayerArray) == 0x000018, "Member 'AC_VineGrowth_C_CheckAllPlayersTangled::PlayerArray' has a wrong offset!");
static_assert(offsetof(AC_VineGrowth_C_CheckAllPlayersTangled, Temp_int_Array_Index_Variable) == 0x000028, "Member 'AC_VineGrowth_C_CheckAllPlayersTangled::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AC_VineGrowth_C_CheckAllPlayersTangled, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'AC_VineGrowth_C_CheckAllPlayersTangled::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AC_VineGrowth_C_CheckAllPlayersTangled, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'AC_VineGrowth_C_CheckAllPlayersTangled::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_VineGrowth_C_CheckAllPlayersTangled, CallFunc_GetAllActorsOfClass_OutActors) == 0x000038, "Member 'AC_VineGrowth_C_CheckAllPlayersTangled::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(AC_VineGrowth_C_CheckAllPlayersTangled, CallFunc_Array_Get_Item) == 0x000048, "Member 'AC_VineGrowth_C_CheckAllPlayersTangled::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AC_VineGrowth_C_CheckAllPlayersTangled, CallFunc_GetComponentByClass_ReturnValue) == 0x000050, "Member 'AC_VineGrowth_C_CheckAllPlayersTangled::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_VineGrowth_C_CheckAllPlayersTangled, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'AC_VineGrowth_C_CheckAllPlayersTangled::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_VineGrowth_C_CheckAllPlayersTangled, CallFunc_Less_IntInt_ReturnValue) == 0x00005C, "Member 'AC_VineGrowth_C_CheckAllPlayersTangled::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_VineGrowth_C_CheckAllPlayersTangled, CallFunc_Not_PreBool_ReturnValue) == 0x00005D, "Member 'AC_VineGrowth_C_CheckAllPlayersTangled::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

}

