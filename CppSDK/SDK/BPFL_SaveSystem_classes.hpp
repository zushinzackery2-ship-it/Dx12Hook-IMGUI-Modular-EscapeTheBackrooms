#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPFL_SaveSystem

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "E_Difficulty_structs.hpp"
#include "E_Mailbox_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPFL_SaveSystem.BPFL_SaveSystem_C
// 0x0000 (0x0028 - 0x0028)
class UBPFL_SaveSystem_C final : public UBlueprintFunctionLibrary
{
public:
	static void Found_Ladder(class UObject* __WorldContext);
	static void Load_Game(class UObject* __WorldContext, class UBP_New_SaveGame_C** SaveGame_0);
	static void SaveGame(class UBP_New_SaveGame_C* SaveGame_0, bool ForceSync, class UObject* __WorldContext);
	static void ConvertStringToFloat(const class FString& In, class UObject* __WorldContext, float* Out);
	static void SetCurrentLevel(class FName Level, class UObject* __WorldContext);
	static void Get_Difficulty(class UObject* __WorldContext, E_Difficulty* Difficulty);
	static void Set_Collected_Key(class UObject* __WorldContext);
	static void Create_New_Slot(const class FString& SlotName, const class FString& SaveType, class UObject* __WorldContext, bool* Success);
	static void SetOpenedVendingMachine(class UObject* __WorldContext);
	static void SetUnlockedMEG(class UObject* __WorldContext);
	static void SetMEGPowerOn(class UObject* __WorldContext);
	static void SetHeavyDoorOpened(class UObject* __WorldContext);
	static void FoundKey(class UObject* __WorldContext);
	static void SetUnlockedBottom(class UObject* __WorldContext);
	static void SetMEGSecurityUnlocked(class UObject* __WorldContext);
	static void SetWestSubstationUnlocked(class UObject* __WorldContext);
	static void SetEastSubstationUnlocked(class UObject* __WorldContext);
	static void SetGeneratorUnlocked(class UObject* __WorldContext);
	static void SetPoweredAllGenerators(class UObject* __WorldContext);
	static void FinishedLevel(class FName Level, float Speed, class UObject* __WorldContext);
	static void SetHotelLobbyOpened(class UObject* __WorldContext);
	static void SetBoilerOpened(class UObject* __WorldContext);
	static void FoundHotelKey(class UObject* __WorldContext);
	static void SetNotesPlaced(const TMap<class FName, E_Mailbox>& Notes, class UObject* __WorldContext);
	static void SavePlayerData(const class FString& UUID, const struct FS_PlayerData& PlayerData, class UObject* __WorldContext);
	static void LoadPlayerData(const class FString& UUID, class UObject* __WorldContext, bool* DidFind, struct FS_PlayerData* Inventory);
	static void SetGaragePowerOn(class UObject* __WorldContext);
	static void SetLevel94Checkpoint(int32 Progress, class UObject* __WorldContext);
	static void UnlockedHub(class FName Level, class UObject* __WorldContext);
	static void SaveLevelItems(class FName Level, class UObject* __WorldContext);
	static void SetTeethOpened(class UObject* __WorldContext);
	static void SetCheckpointReached(class UObject* __WorldContext);
	static void SetBoilerCheckpoint(int32 Progress, class UObject* __WorldContext);
	static void SetUnlockedFun(class UObject* __WorldContext);
	static void SetDifficulty(E_Difficulty Difficulty, class UObject* __WorldContext);
	static void SetSeenFirstHound(class UObject* __WorldContext);
	static void PlacedCan(class UObject* __WorldContext);
	static void SetMEGCardCollected(class UObject* __WorldContext);
	static void SetLevel7Checkpoint(int32 Progress, class UObject* __WorldContext);
	static void GetPlacedCans(class UObject* __WorldContext, int32* CansPlaced);
	static void SetUnlockedSafe(class UObject* __WorldContext);
	static void SetLevel05Checkpoint(int32 Progress, class UObject* __WorldContext);
	static void SetDoorBroken(const class FString& DoorID, class UObject* __WorldContext);
	static void SetActivatedMap(TArray<struct FS_UploadStatus>& Activated, class UObject* __WorldContext);
	static void SetMEGGateOpened(class UObject* __WorldContext);
	static void SetLevel10Checkpoint(class UObject* __WorldContext);
	static void SetTurbinesActivated(int32 Activated, class UObject* __WorldContext);
	static void SetFacelingSpawned(class UObject* __WorldContext);
	static void UnlockedManillaRoom(class UObject* __WorldContext);
	static void SetVentBroken(class UObject* __WorldContext);
	static void SetReachedCheckpoint(class UObject* __WorldContext);
	static void SetCaveCheckpoint(int32 Progress, class UObject* __WorldContext);
	static void SetHasWatchedVideo(class UObject* __WorldContext);
	static void Set_Spawn_in_Elevator(bool ShouldSpawn, class UObject* __WorldContext);
	static void GetCompletedLevels(class UObject* __WorldContext, TArray<struct FS_LevelStats>* LevelsCompleted);
	static void SetMembriSpawned(class UObject* __WorldContext);
	static void SetFoundCassette(class UObject* __WorldContext);
	static void SetCompletedBallonPuzzle(class UObject* __WorldContext);
	static void SetHasZone1Key(class UObject* __WorldContext);
	static void SetHasZone2Key(class UObject* __WorldContext);
	static void SetHasZone3Key(class UObject* __WorldContext);
	static void SetHasZone4Key(class UObject* __WorldContext);
	static void SetTVsPlaced(TArray<struct FS_TV_Data>& TVsPlaced, class UObject* __WorldContext);
	static void AddDroppedGlowstick(const struct FGuid& GlowstickID, const struct FS_Glowstick_Data& GlowstickData, class UObject* __WorldContext);
	static void RemoveDroppedGlowstick(const struct FGuid& GlowstickID, class UObject* __WorldContext);
	static void SetPoolsActivated(int32 PoolsActivated, class UObject* __WorldContext);
	static void SetKeyPlaced(int32 Index_0, class UObject* __WorldContext);
	static void Set_Powered_All(class UObject* __WorldContext);
	static void SetUnlockedElevator(class UObject* __WorldContext);
	static void SetPlacedAllTVs(class UObject* __WorldContext);
	static void ActivateControlPanel(int32 Index_0, class UObject* __WorldContext);
	static void FinishedValve(int32 LevelIndex, int32 ValveIndex, class UObject* __WorldContext);
	static void SetFinishedElevator(class UObject* __WorldContext);
	static void SetDoorUnlocked(const class FString& DoorID, class UObject* __WorldContext);
	static void SetUnlockedSnackrooms(class UObject* __WorldContext);
	static void SetLevelDashCheckpoint(int32 Progress, class UObject* __WorldContext);
	static void SetExitIndex(int32 Index_0, class UObject* __WorldContext);
	static void SetFloorIndex(int32 Index_0, class UObject* __WorldContext);
	static void SetPicturesTaken(int32 Progress, class UObject* __WorldContext);
	static void SetDidResetPictures(class UObject* __WorldContext);
	static void SetEyeDisarmed(const class FString& EyeID, class UObject* __WorldContext);
	static void SetWatchedElevatorVideo(class UObject* __WorldContext);
	static void SetPoppedBalloon(const class FString& BalloonID, class UObject* __WorldContext);
	static void SetTapesCollected(int32 TapesCollected, class UObject* __WorldContext);
	static void SetActivatedComputer(class UObject* __WorldContext);
	static void SetGarageExitIndex(int32 Index_0, class UObject* __WorldContext);
	static void SetGarageElevatorIndex(int32 Index_0, class UObject* __WorldContext);
	static void Save_Fuseboxes(class FName Tag, const TMap<class FName, bool>& Fuseboxes, class UObject* __WorldContext);
	static void SetHasOpenedDeathSlidesGates(class UObject* __WorldContext);
	static void SetGrassroomsCheckpoint(int32 Checkpoint, class UObject* __WorldContext);
	static void SetHasUnlockedMainEnding(class UObject* __WorldContext);
	static void SetHasUnlockedHillsEnding(class UObject* __WorldContext);
	static void SetHasUnlockedCityEnding(class UObject* __WorldContext);
	static void SetHasUnlocked974Ending(class UObject* __WorldContext);
	static void SetHasUnlockedFinalEnding(class UObject* __WorldContext);
	static void Add_Placed_Plushie(class UObject* __WorldContext);
	static void SetSlidesDropped(TArray<bool>& Slides, class UObject* __WorldContext);
	static void SetNPCDropped(TArray<bool>& InputPin, class UObject* __WorldContext);
	static void CalculateGameTime(TArray<class FName>& AdditionalLevelsToCount, class UObject* __WorldContext, float* Time);
	static void SetCollectedAllPlushies(class UObject* __WorldContext);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPFL_SaveSystem_C">();
	}
	static class UBPFL_SaveSystem_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBPFL_SaveSystem_C>();
	}
};
static_assert(alignof(UBPFL_SaveSystem_C) == 0x000008, "Wrong alignment on UBPFL_SaveSystem_C");
static_assert(sizeof(UBPFL_SaveSystem_C) == 0x000028, "Wrong size on UBPFL_SaveSystem_C");

}

