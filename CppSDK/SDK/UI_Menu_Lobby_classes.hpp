#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_Menu_Lobby

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "E_Difficulty_structs.hpp"
#include "Backrooms_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"
#include "AdvancedSessions_structs.hpp"
#include "SlateCore_structs.hpp"
#include "E_GameMode_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_Menu_Lobby.UI_Menu_Lobby_C
// 0x01E8 (0x0448 - 0x0260)
class UUI_Menu_Lobby_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UUI_Menu_Button_C*                      Btn_InvitePlayer;                                  // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_Menu_Button_C*                      Btn_Start;                                         // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Canvas;                                            // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               GamepadControls;                                   // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_2;                                           // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_128;                                         // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_131;                                         // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Panel_Icon;                                    // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_PlayersStatus_WaitingIcon;                     // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               KeyboardControls;                                  // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             SaveSlotError;                                     // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             SB_Players;                                        // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_Menu_Lobby_Button_C*                SelectLevelButton;                                 // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        StoryModeHubSwitcher;                              // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_Menu_Lobby_Switcher_C*              Switcher_Game;                                     // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_Menu_Lobby_Switcher_C*              Switcher_GameDifficulty;                           // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_Menu_Lobby_Switcher_C*              Switcher_GameDifficulty_Continue;                  // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_Menu_Lobby_Switcher_C*              Switcher_SaveGameName_Continue;                    // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_Menu_Lobby_TextField_C*             Textfield_SaveGame;                                // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Txt_Back;                                          // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Txt_Difficulty_Description;                        // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Txt_GameMode_Description;                          // 0x0310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Txt_Invite;                                        // 0x0318(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Txt_Name;                                          // 0x0320(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Txt_PlayersStatus;                                 // 0x0328(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Txt_Settings;                                      // 0x0330(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Txt_Switch;                                        // 0x0338(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Txt_WindowName;                                    // 0x0340(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Confirmation_C*                      W_Confirmation;                                    // 0x0348(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Input_Icon_C*                        W_Input_Icon;                                      // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Input_Icon_C*                        W_Input_Icon_1;                                    // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Input_Icon_C*                        W_Input_Icon_2;                                    // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Input_Icon_C*                        W_Input_Icon_3;                                    // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher_Difficulty;                         // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher_SaveGame;                           // 0x0378(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcherControls;                            // 0x0380(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ALobby_GS_C*                            LobbyGS;                                           // 0x0388(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ALobbyPS_C*                             LobbyPS;                                           // 0x0390(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ALobby_PlayerController_Nebula_C*       LobbyPC;                                           // 0x0398(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(E_Difficulty Difficulty)> OnSwitched_Difficulty;                   // 0x03A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	E_Difficulty                                  Difficulty;                                        // 0x03B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B1[0x7];                                      // 0x03B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CurrentSaveSlotName;                               // 0x03B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 CurrentMode;                                       // 0x03C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          LaunchingGame_;                                    // 0x03D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          LaunchActive_;                                     // 0x03D9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DA[0x2];                                      // 0x03DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Countdown;                                         // 0x03DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UWidget*>                        FocusArrayNewGame;                                 // 0x03E0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UWidget*>                        FocusArrayContinue;                                // 0x03F0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UWidget*>                        FocusArrayPlayerList;                              // 0x0400(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UWidget*>                        FocusArrayHUB;                                     // 0x0410(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	int32                                         FocusArrayNewGameIndex;                            // 0x0420(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FocusArrayContinueIndex;                           // 0x0424(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FocusArrayPlayerListIndex;                         // 0x0428(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FocusArrayHUBIndex;                                // 0x042C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentFocussedMenu;                               // 0x0430(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_434[0x4];                                      // 0x0434(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               PanelImageMID;                                     // 0x0438(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsInSession;                                       // 0x0440(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_UI_Menu_Lobby(int32 EntryPoint);
	void ManualSwitchDifficulty();
	void Refocus();
	void StartActivityForAll();
	void ToggleFocus(bool IsFocused);
	void ServerTravel();
	void ManualConfirmMain();
	void UpdateSelectedLevel(const struct FST_UI_Mission& MissionData);
	void BndEvt__UI_Menu_Lobby_UI_Menu_Lobby_Button_C_0_K2Node_ComponentBoundEvent_6_OnClick__DelegateSignature();
	void SetupMode();
	void BackToMainMenu();
	void GatherPlayerFocusArray();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void InitialFocus();
	void ManualInvite();
	void DeviceBinding();
	void OnDeviceChanged(EFancyInputDevice NewInputDevice);
	void Countdown_Launchevent();
	void ToggleLaunchEvent(bool LaunchingGame__0);
	void UpdateDifficultyBasedOnSaveSlot(const class FString& SlotName);
	void BndEvt__UI_Menu_Lobby_Switcher_SaveGameName_Continue_K2Node_ComponentBoundEvent_5_OnSwitched__DelegateSignature(int32 SelectedOption);
	void UpdateAvailableSaveSlots();
	void BndEvt__UI_Menu_Lobby_Switcher_Game_K2Node_ComponentBoundEvent_4_OnSwitched__DelegateSignature(int32 SelectedOption);
	void BndEvt__UI_Menu_Lobby_UI_Menu_Lobby_TextField_C_0_K2Node_ComponentBoundEvent_2_OnTextCommitted__DelegateSignature(const class FText& Text);
	void InitializeCasts();
	void BndEvt__UI_Menu_Lobby_Switcher_GameDifficulty_K2Node_ComponentBoundEvent_3_OnSwitched__DelegateSignature(int32 SelectedOption);
	void BndEvt__UI_Menu_Lobby_UI_Menu_Button_13_K2Node_ComponentBoundEvent_1_OnClick__DelegateSignature();
	void BndEvt__UI_Menu_Lobby_UI_Menu_Button_K2Node_ComponentBoundEvent_0_OnClick__DelegateSignature();
	void UpdatePlayersStatus();
	void KickPlayer(class UUI_Menu_Lobby_Player_C* UI_Menu_Lobby_Player);
	void Construct();
	void ToggleEnabled(bool IsEnabled);
	void ToggleHover(bool IsHovered_0);
	void OnSuccess_D1CC000D4466CEB0658C09A04E4AFDF3();
	void OnFailure_D1CC000D4466CEB0658C09A04E4AFDF3();
	bool AllPlayersAreReady();
	void AddPlayer(const class FText& PlayerName, const struct FS_ConnectedPlayer& ConnectedPlayer);
	void UpdateReadyButton(const class FText& Text, bool WarningState_, bool HideButton_, bool LockButton_);
	void InitializeReadyButton();
	void UpdatePlayerList(TArray<struct FS_ConnectedPlayer>& ConnectedPlayers);
	void ServerLaunchGame();
	void CanHostLaunch(bool* Yes);
	void UpdateLobbyStatusIndicator(ESlateVisibility CircularThrobber_Visibility, const class FText& LobbyStatus_Text);
	void UpdateOptionVisibility();
	void CheckSaveGameSlotName(bool* Valid);
	void DoesStringContainSpecialCharacter(bool* Yes);
	struct FEventReply OnKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent);
	void GatherFocusArrays();
	class FString RemoveDifficultyFromGameSaveString(const class FString& SourceString);
	class UWidget* CustomNavigation(EUINavigation Navigation_0);
	void IsSettingsMenuOpen(bool* Yes);
	void IsMissionMenuOpen(bool* Yes);
	void IsConfirmationOpen(bool* Yes);
	void SetupPanelImageMID();
	void IsEvaluationMenuOpen(bool* Yes);
	void CreateMissionSave(class UBP_MyGameInstance_C* GameInstance);
	ESlateVisibility GetInviteButtonVisibility();
	void HasChatFocus(bool* Yes);
	void CleanUpMainSave();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_Menu_Lobby_C">();
	}
	static class UUI_Menu_Lobby_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_Menu_Lobby_C>();
	}
};
static_assert(alignof(UUI_Menu_Lobby_C) == 0x000008, "Wrong alignment on UUI_Menu_Lobby_C");
static_assert(sizeof(UUI_Menu_Lobby_C) == 0x000448, "Wrong size on UUI_Menu_Lobby_C");
static_assert(offsetof(UUI_Menu_Lobby_C, UberGraphFrame) == 0x000260, "Member 'UUI_Menu_Lobby_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_Menu_Lobby_C, Btn_InvitePlayer) == 0x000268, "Member 'UUI_Menu_Lobby_C::Btn_InvitePlayer' has a wrong offset!");
static_assert(offsetof(UUI_Menu_Lobby_C, Btn_Start) == 0x000270, "Member 'UUI_Menu_Lobby_C::Btn_Start' has a wrong offset!");
static_assert(offsetof(UUI_Menu_Lobby_C, Canvas) == 0x000278, "Member 'UUI_Menu_Lobby_C::Canvas' has a wrong offset!");
static_assert(offsetof(UUI_Menu_Lobby_C, GamepadControls) == 0x000280, "Member 'UUI_Menu_Lobby_C::GamepadControls' has a wrong offset!");
static_assert(offsetof(UUI_Menu_Lobby_C, Image_2) == 0x000288, "Member 'UUI_Menu_Lobby_C::Image_2' has a wrong offset!");
static_assert(offsetof(UUI_Menu_Lobby_C, Image_128) == 0x000290, "Member 'UUI_Menu_Lobby_C::Image_128' has a wrong offset!");
static_assert(offsetof(UUI_Menu_Lobby_C, Image_131) == 0x000298, "Member 'UUI_Menu_Lobby_C::Image_131' has a wrong offset!");
static_assert(offsetof(UUI_Menu_Lobby_C, Img_Panel_Icon) == 0x0002A0, "Member 'UUI_Menu_Lobby_C::Img_Panel_Icon' has a wrong offset!");
static_assert(offsetof(UUI_Menu_Lobby_C, Img_PlayersStatus_WaitingIcon) == 0x0002A8, "Member 'UUI_Menu_Lobby_C::Img_PlayersStatus_WaitingIcon' has a wrong offset!");
static_assert(offsetof(UUI_Menu_Lobby_C, KeyboardControls) == 0x0002B0, "Member 'UUI_Menu_Lobby_C::KeyboardControls' has a wrong offset!");
static_assert(offsetof(UUI_Menu_Lobby_C, SaveSlotError) == 0x0002B8, "Member 'UUI_Menu_Lobby_C::SaveSlotError' has a wrong offset!");
static_assert(offsetof(UUI_Menu_Lobby_C, SB_Players) == 0x0002C0, "Member 'UUI_Menu_Lobby_C::SB_Players' has a wrong offset!");
static_assert(offsetof(UUI_Menu_Lobby_C, SelectLevelButton) == 0x0002C8, "Member 'UUI_Menu_Lobby_C::SelectLevelButton' has a wrong offset!");
static_assert(offsetof(UUI_Menu_Lobby_C, StoryModeHubSwitcher) == 0x0002D0, "Member 'UUI_Menu_Lobby_C::StoryModeHubSwitcher' has a wrong offset!");
static_assert(offsetof(UUI_Menu_Lobby_C, Switcher_Game) == 0x0002D8, "Member 'UUI_Menu_Lobby_C::Switcher_Game' has a wrong offset!");
static_assert(offsetof(UUI_Menu_Lobby_C, Switcher_GameDifficulty) == 0x0002E0, "Member 'UUI_Menu_Lobby_C::Switcher_GameDifficulty' has a wrong offset!");
static_assert(offsetof(UUI_Menu_Lobby_C, Switcher_GameDifficulty_Continue) == 0x0002E8, "Member 'UUI_Menu_Lobby_C::Switcher_GameDifficulty_Continue' has a wrong offset!");
static_assert(offsetof(UUI_Menu_Lobby_C, Switcher_SaveGameName_Continue) == 0x0002F0, "Member 'UUI_Menu_Lobby_C::Switcher_SaveGameName_Continue' has a wrong offset!");
static_assert(offsetof(UUI_Menu_Lobby_C, Textfield_SaveGame) == 0x0002F8, "Member 'UUI_Menu_Lobby_C::Textfield_SaveGame' has a wrong offset!");
static_assert(offsetof(UUI_Menu_Lobby_C, Txt_Back) == 0x000300, "Member 'UUI_Menu_Lobby_C::Txt_Back' has a wrong offset!");
static_assert(offsetof(UUI_Menu_Lobby_C, Txt_Difficulty_Description) == 0x000308, "Member 'UUI_Menu_Lobby_C::Txt_Difficulty_Description' has a wrong offset!");
static_assert(offsetof(UUI_Menu_Lobby_C, Txt_GameMode_Description) == 0x000310, "Member 'UUI_Menu_Lobby_C::Txt_GameMode_Description' has a wrong offset!");
static_assert(offsetof(UUI_Menu_Lobby_C, Txt_Invite) == 0x000318, "Member 'UUI_Menu_Lobby_C::Txt_Invite' has a wrong offset!");
static_assert(offsetof(UUI_Menu_Lobby_C, Txt_Name) == 0x000320, "Member 'UUI_Menu_Lobby_C::Txt_Name' has a wrong offset!");
static_assert(offsetof(UUI_Menu_Lobby_C, Txt_PlayersStatus) == 0x000328, "Member 'UUI_Menu_Lobby_C::Txt_PlayersStatus' has a wrong offset!");
static_assert(offsetof(UUI_Menu_Lobby_C, Txt_Settings) == 0x000330, "Member 'UUI_Menu_Lobby_C::Txt_Settings' has a wrong offset!");
static_assert(offsetof(UUI_Menu_Lobby_C, Txt_Switch) == 0x000338, "Member 'UUI_Menu_Lobby_C::Txt_Switch' has a wrong offset!");
static_assert(offsetof(UUI_Menu_Lobby_C, Txt_WindowName) == 0x000340, "Member 'UUI_Menu_Lobby_C::Txt_WindowName' has a wrong offset!");
static_assert(offsetof(UUI_Menu_Lobby_C, W_Confirmation) == 0x000348, "Member 'UUI_Menu_Lobby_C::W_Confirmation' has a wrong offset!");
static_assert(offsetof(UUI_Menu_Lobby_C, W_Input_Icon) == 0x000350, "Member 'UUI_Menu_Lobby_C::W_Input_Icon' has a wrong offset!");
static_assert(offsetof(UUI_Menu_Lobby_C, W_Input_Icon_1) == 0x000358, "Member 'UUI_Menu_Lobby_C::W_Input_Icon_1' has a wrong offset!");
static_assert(offsetof(UUI_Menu_Lobby_C, W_Input_Icon_2) == 0x000360, "Member 'UUI_Menu_Lobby_C::W_Input_Icon_2' has a wrong offset!");
static_assert(offsetof(UUI_Menu_Lobby_C, W_Input_Icon_3) == 0x000368, "Member 'UUI_Menu_Lobby_C::W_Input_Icon_3' has a wrong offset!");
static_assert(offsetof(UUI_Menu_Lobby_C, WidgetSwitcher_Difficulty) == 0x000370, "Member 'UUI_Menu_Lobby_C::WidgetSwitcher_Difficulty' has a wrong offset!");
static_assert(offsetof(UUI_Menu_Lobby_C, WidgetSwitcher_SaveGame) == 0x000378, "Member 'UUI_Menu_Lobby_C::WidgetSwitcher_SaveGame' has a wrong offset!");
static_assert(offsetof(UUI_Menu_Lobby_C, WidgetSwitcherControls) == 0x000380, "Member 'UUI_Menu_Lobby_C::WidgetSwitcherControls' has a wrong offset!");
static_assert(offsetof(UUI_Menu_Lobby_C, LobbyGS) == 0x000388, "Member 'UUI_Menu_Lobby_C::LobbyGS' has a wrong offset!");
static_assert(offsetof(UUI_Menu_Lobby_C, LobbyPS) == 0x000390, "Member 'UUI_Menu_Lobby_C::LobbyPS' has a wrong offset!");
static_assert(offsetof(UUI_Menu_Lobby_C, LobbyPC) == 0x000398, "Member 'UUI_Menu_Lobby_C::LobbyPC' has a wrong offset!");
static_assert(offsetof(UUI_Menu_Lobby_C, OnSwitched_Difficulty) == 0x0003A0, "Member 'UUI_Menu_Lobby_C::OnSwitched_Difficulty' has a wrong offset!");
static_assert(offsetof(UUI_Menu_Lobby_C, Difficulty) == 0x0003B0, "Member 'UUI_Menu_Lobby_C::Difficulty' has a wrong offset!");
static_assert(offsetof(UUI_Menu_Lobby_C, CurrentSaveSlotName) == 0x0003B8, "Member 'UUI_Menu_Lobby_C::CurrentSaveSlotName' has a wrong offset!");
static_assert(offsetof(UUI_Menu_Lobby_C, CurrentMode) == 0x0003C8, "Member 'UUI_Menu_Lobby_C::CurrentMode' has a wrong offset!");
static_assert(offsetof(UUI_Menu_Lobby_C, LaunchingGame_) == 0x0003D8, "Member 'UUI_Menu_Lobby_C::LaunchingGame_' has a wrong offset!");
static_assert(offsetof(UUI_Menu_Lobby_C, LaunchActive_) == 0x0003D9, "Member 'UUI_Menu_Lobby_C::LaunchActive_' has a wrong offset!");
static_assert(offsetof(UUI_Menu_Lobby_C, Countdown) == 0x0003DC, "Member 'UUI_Menu_Lobby_C::Countdown' has a wrong offset!");
static_assert(offsetof(UUI_Menu_Lobby_C, FocusArrayNewGame) == 0x0003E0, "Member 'UUI_Menu_Lobby_C::FocusArrayNewGame' has a wrong offset!");
static_assert(offsetof(UUI_Menu_Lobby_C, FocusArrayContinue) == 0x0003F0, "Member 'UUI_Menu_Lobby_C::FocusArrayContinue' has a wrong offset!");
static_assert(offsetof(UUI_Menu_Lobby_C, FocusArrayPlayerList) == 0x000400, "Member 'UUI_Menu_Lobby_C::FocusArrayPlayerList' has a wrong offset!");
static_assert(offsetof(UUI_Menu_Lobby_C, FocusArrayHUB) == 0x000410, "Member 'UUI_Menu_Lobby_C::FocusArrayHUB' has a wrong offset!");
static_assert(offsetof(UUI_Menu_Lobby_C, FocusArrayNewGameIndex) == 0x000420, "Member 'UUI_Menu_Lobby_C::FocusArrayNewGameIndex' has a wrong offset!");
static_assert(offsetof(UUI_Menu_Lobby_C, FocusArrayContinueIndex) == 0x000424, "Member 'UUI_Menu_Lobby_C::FocusArrayContinueIndex' has a wrong offset!");
static_assert(offsetof(UUI_Menu_Lobby_C, FocusArrayPlayerListIndex) == 0x000428, "Member 'UUI_Menu_Lobby_C::FocusArrayPlayerListIndex' has a wrong offset!");
static_assert(offsetof(UUI_Menu_Lobby_C, FocusArrayHUBIndex) == 0x00042C, "Member 'UUI_Menu_Lobby_C::FocusArrayHUBIndex' has a wrong offset!");
static_assert(offsetof(UUI_Menu_Lobby_C, CurrentFocussedMenu) == 0x000430, "Member 'UUI_Menu_Lobby_C::CurrentFocussedMenu' has a wrong offset!");
static_assert(offsetof(UUI_Menu_Lobby_C, PanelImageMID) == 0x000438, "Member 'UUI_Menu_Lobby_C::PanelImageMID' has a wrong offset!");
static_assert(offsetof(UUI_Menu_Lobby_C, IsInSession) == 0x000440, "Member 'UUI_Menu_Lobby_C::IsInSession' has a wrong offset!");

}

