#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_AccountPicker

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function W_AccountPicker.W_AccountPicker_C.ExecuteUbergraph_W_AccountPicker
// 0x0178 (0x0178 - 0x0000)
struct W_AccountPicker_C_ExecuteUbergraph_W_AccountPicker final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FSlateBrush& Icon)> K2Node_CreateDelegate_OutputDelegate;            // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(bool bIsSameUser)>             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFancyUserControllerSystem*             CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0040(0x0018)()
	struct FSlateBrush                            K2Node_CustomEvent_Icon;                           // 0x0058(0x0088)()
	bool                                          K2Node_CustomEvent_bIsSameUser;                    // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFancyUserControllerSystem*             CallFunc_GetGameInstanceSubsystem_ReturnValue_1;   // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateBrush                            CallFunc_GetActiveUserIcon_ReturnValue;            // 0x00F0(0x0088)()
};
static_assert(alignof(W_AccountPicker_C_ExecuteUbergraph_W_AccountPicker) == 0x000008, "Wrong alignment on W_AccountPicker_C_ExecuteUbergraph_W_AccountPicker");
static_assert(sizeof(W_AccountPicker_C_ExecuteUbergraph_W_AccountPicker) == 0x000178, "Wrong size on W_AccountPicker_C_ExecuteUbergraph_W_AccountPicker");
static_assert(offsetof(W_AccountPicker_C_ExecuteUbergraph_W_AccountPicker, EntryPoint) == 0x000000, "Member 'W_AccountPicker_C_ExecuteUbergraph_W_AccountPicker::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_AccountPicker_C_ExecuteUbergraph_W_AccountPicker, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'W_AccountPicker_C_ExecuteUbergraph_W_AccountPicker::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_AccountPicker_C_ExecuteUbergraph_W_AccountPicker, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'W_AccountPicker_C_ExecuteUbergraph_W_AccountPicker::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(W_AccountPicker_C_ExecuteUbergraph_W_AccountPicker, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000028, "Member 'W_AccountPicker_C_ExecuteUbergraph_W_AccountPicker::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_AccountPicker_C_ExecuteUbergraph_W_AccountPicker, CallFunc_GetDisplayName_ReturnValue) == 0x000030, "Member 'W_AccountPicker_C_ExecuteUbergraph_W_AccountPicker::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_AccountPicker_C_ExecuteUbergraph_W_AccountPicker, CallFunc_Conv_StringToText_ReturnValue) == 0x000040, "Member 'W_AccountPicker_C_ExecuteUbergraph_W_AccountPicker::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_AccountPicker_C_ExecuteUbergraph_W_AccountPicker, K2Node_CustomEvent_Icon) == 0x000058, "Member 'W_AccountPicker_C_ExecuteUbergraph_W_AccountPicker::K2Node_CustomEvent_Icon' has a wrong offset!");
static_assert(offsetof(W_AccountPicker_C_ExecuteUbergraph_W_AccountPicker, K2Node_CustomEvent_bIsSameUser) == 0x0000E0, "Member 'W_AccountPicker_C_ExecuteUbergraph_W_AccountPicker::K2Node_CustomEvent_bIsSameUser' has a wrong offset!");
static_assert(offsetof(W_AccountPicker_C_ExecuteUbergraph_W_AccountPicker, CallFunc_GetGameInstanceSubsystem_ReturnValue_1) == 0x0000E8, "Member 'W_AccountPicker_C_ExecuteUbergraph_W_AccountPicker::CallFunc_GetGameInstanceSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_AccountPicker_C_ExecuteUbergraph_W_AccountPicker, CallFunc_GetActiveUserIcon_ReturnValue) == 0x0000F0, "Member 'W_AccountPicker_C_ExecuteUbergraph_W_AccountPicker::CallFunc_GetActiveUserIcon_ReturnValue' has a wrong offset!");

// Function W_AccountPicker.W_AccountPicker_C.UpdateAvatarName
// 0x0001 (0x0001 - 0x0000)
struct W_AccountPicker_C_UpdateAvatarName final
{
public:
	bool                                          bIsSameUser;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_AccountPicker_C_UpdateAvatarName) == 0x000001, "Wrong alignment on W_AccountPicker_C_UpdateAvatarName");
static_assert(sizeof(W_AccountPicker_C_UpdateAvatarName) == 0x000001, "Wrong size on W_AccountPicker_C_UpdateAvatarName");
static_assert(offsetof(W_AccountPicker_C_UpdateAvatarName, bIsSameUser) == 0x000000, "Member 'W_AccountPicker_C_UpdateAvatarName::bIsSameUser' has a wrong offset!");

// Function W_AccountPicker.W_AccountPicker_C.UpdateAvatarIcon
// 0x0088 (0x0088 - 0x0000)
struct W_AccountPicker_C_UpdateAvatarIcon final
{
public:
	struct FSlateBrush                            Icon;                                              // 0x0000(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(W_AccountPicker_C_UpdateAvatarIcon) == 0x000008, "Wrong alignment on W_AccountPicker_C_UpdateAvatarIcon");
static_assert(sizeof(W_AccountPicker_C_UpdateAvatarIcon) == 0x000088, "Wrong size on W_AccountPicker_C_UpdateAvatarIcon");
static_assert(offsetof(W_AccountPicker_C_UpdateAvatarIcon, Icon) == 0x000000, "Member 'W_AccountPicker_C_UpdateAvatarIcon::Icon' has a wrong offset!");

}

