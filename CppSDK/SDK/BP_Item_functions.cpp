#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Item

#include "Basic.hpp"

#include "BP_Item_classes.hpp"
#include "BP_Item_parameters.hpp"


namespace SDK
{

// Function BP_Item.BP_Item_C.ExecuteUbergraph_BP_Item
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Item_C::ExecuteUbergraph_BP_Item(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Item_C", "ExecuteUbergraph_BP_Item");

	Params::BP_Item_C_ExecuteUbergraph_BP_Item Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Item.BP_Item_C.ToggleEvent
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Item_C::ToggleEvent(bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Item_C", "ToggleEvent");

	Params::BP_Item_C_ToggleEvent Parms{};

	Parms.Enable = Enable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Item.BP_Item_C.OnEventLoaded
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EEventType                              EventType                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Item_C::OnEventLoaded(EEventType EventType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Item_C", "OnEventLoaded");

	Params::BP_Item_C_OnEventLoaded Parms{};

	Parms.EventType = EventType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Item.BP_Item_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_Item_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Item_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Item.BP_Item_C.OnFinishConsume
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFancyCharacter*                  Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Item_C::OnFinishConsume(class AFancyCharacter* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Item_C", "OnFinishConsume");

	Params::BP_Item_C_OnFinishConsume Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Item.BP_Item_C.UnHide
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void ABP_Item_C::UnHide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Item_C", "UnHide");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Item.BP_Item_C.UseItem
// (BlueprintCallable, BlueprintEvent)

void ABP_Item_C::UseItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Item_C", "UseItem");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Item.BP_Item_C.SetMaterial
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    EnabledFOV                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Item_C::SetMaterial(bool EnabledFOV)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Item_C", "SetMaterial");

	Params::BP_Item_C_SetMaterial Parms{};

	Parms.EnabledFOV = EnabledFOV;

	UObject::ProcessEvent(Func, &Parms);
}

}

