#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BasePlayerController

#include "Basic.hpp"

#include "BP_BasePlayerController_classes.hpp"
#include "BP_BasePlayerController_parameters.hpp"


namespace SDK
{

// Function BP_BasePlayerController.BP_BasePlayerController_C.ExecuteUbergraph_BP_BasePlayerController
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BasePlayerController_C::ExecuteUbergraph_BP_BasePlayerController(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BasePlayerController_C", "ExecuteUbergraph_BP_BasePlayerController");

	Params::BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BasePlayerController.BP_BasePlayerController_C.ServerRemoveRemoteVoiceForPlayer
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerState*                     TargetPlayerState                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BasePlayerController_C::ServerRemoveRemoteVoiceForPlayer(class APlayerState* TargetPlayerState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BasePlayerController_C", "ServerRemoveRemoteVoiceForPlayer");

	Params::BP_BasePlayerController_C_ServerRemoveRemoteVoiceForPlayer Parms{};

	Parms.TargetPlayerState = TargetPlayerState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BasePlayerController.BP_BasePlayerController_C.ServerInitializeRemotePlayerVoice
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerState*                     TargetPlayerState                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BasePlayerController_C::ServerInitializeRemotePlayerVoice(class APlayerState* TargetPlayerState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BasePlayerController_C", "ServerInitializeRemotePlayerVoice");

	Params::BP_BasePlayerController_C_ServerInitializeRemotePlayerVoice Parms{};

	Parms.TargetPlayerState = TargetPlayerState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BasePlayerController.BP_BasePlayerController_C.UpdatePlayersOnBlockList
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TArray<struct FBPUniqueNetId>&    PlayerBlockList                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABP_BasePlayerController_C::UpdatePlayersOnBlockList(const TArray<struct FBPUniqueNetId>& PlayerBlockList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BasePlayerController_C", "UpdatePlayersOnBlockList");

	Params::BP_BasePlayerController_C_UpdatePlayersOnBlockList Parms{};

	Parms.PlayerBlockList = std::move(PlayerBlockList);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BasePlayerController.BP_BasePlayerController_C.InitializeAllRemoteTalkers
// (BlueprintCallable, BlueprintEvent)

void ABP_BasePlayerController_C::InitializeAllRemoteTalkers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BasePlayerController_C", "InitializeAllRemoteTalkers");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BasePlayerController.BP_BasePlayerController_C.RemoveRemotePlayerVoice
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerState*                     PlayerState_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BasePlayerController_C::RemoveRemotePlayerVoice(class APlayerState* PlayerState_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BasePlayerController_C", "RemoveRemotePlayerVoice");

	Params::BP_BasePlayerController_C_RemoveRemotePlayerVoice Parms{};

	Parms.PlayerState_0 = PlayerState_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BasePlayerController.BP_BasePlayerController_C.InitializeRemotePlayerVoice
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerState*                     NewPlayerState                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BasePlayerController_C::InitializeRemotePlayerVoice(class APlayerState* NewPlayerState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BasePlayerController_C", "InitializeRemotePlayerVoice");

	Params::BP_BasePlayerController_C_InitializeRemotePlayerVoice Parms{};

	Parms.NewPlayerState = NewPlayerState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BasePlayerController.BP_BasePlayerController_C.ReceiveEndPlay
// (Event, Protected, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BasePlayerController_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BasePlayerController_C", "ReceiveEndPlay");

	Params::BP_BasePlayerController_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BasePlayerController.BP_BasePlayerController_C.EndActivity
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    ActivityName                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// EActivityCompletionStatus               Status                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BasePlayerController_C::EndActivity(const class FString& ActivityName, EActivityCompletionStatus Status)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BasePlayerController_C", "EndActivity");

	Params::BP_BasePlayerController_C_EndActivity Parms{};

	Parms.ActivityName = std::move(ActivityName);
	Parms.Status = Status;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BasePlayerController.BP_BasePlayerController_C.StartActivity
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    ActivityName                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_BasePlayerController_C::StartActivity(const class FString& ActivityName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BasePlayerController_C", "StartActivity");

	Params::BP_BasePlayerController_C_StartActivity Parms{};

	Parms.ActivityName = std::move(ActivityName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BasePlayerController.BP_BasePlayerController_C.PrintLevelTimes
// (Event, Public, BlueprintEvent)

void ABP_BasePlayerController_C::PrintLevelTimes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BasePlayerController_C", "PrintLevelTimes");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BasePlayerController.BP_BasePlayerController_C.OnActiveUserChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bIsSameUser                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_BasePlayerController_C::OnActiveUserChanged(bool bIsSameUser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BasePlayerController_C", "OnActiveUserChanged");

	Params::BP_BasePlayerController_C_OnActiveUserChanged Parms{};

	Parms.bIsSameUser = bIsSameUser;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BasePlayerController.BP_BasePlayerController_C.ClientHUDInit
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void ABP_BasePlayerController_C::ClientHUDInit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BasePlayerController_C", "ClientHUDInit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BasePlayerController.BP_BasePlayerController_C.FadeOutOnBegin
// (BlueprintCallable, BlueprintEvent)

void ABP_BasePlayerController_C::FadeOutOnBegin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BasePlayerController_C", "FadeOutOnBegin");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BasePlayerController.BP_BasePlayerController_C.BindOnControllerDisconnect
// (BlueprintCallable, BlueprintEvent)

void ABP_BasePlayerController_C::BindOnControllerDisconnect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BasePlayerController_C", "BindOnControllerDisconnect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BasePlayerController.BP_BasePlayerController_C.OnControllerDisconnected
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EEstablishUserReason                    reason                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BasePlayerController_C::OnControllerDisconnected(EEstablishUserReason reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BasePlayerController_C", "OnControllerDisconnected");

	Params::BP_BasePlayerController_C_OnControllerDisconnected Parms{};

	Parms.reason = reason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BasePlayerController.BP_BasePlayerController_C.UnlockMission
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             LevelName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BasePlayerController_C::UnlockMission(class FName LevelName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BasePlayerController_C", "UnlockMission");

	Params::BP_BasePlayerController_C_UnlockMission Parms{};

	Parms.LevelName = LevelName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BasePlayerController.BP_BasePlayerController_C.VoteToSkipVideo
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_BasePlayerController_C::VoteToSkipVideo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BasePlayerController_C", "VoteToSkipVideo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BasePlayerController.BP_BasePlayerController_C.UnlockAchievement
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             AchievementName                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BasePlayerController_C::UnlockAchievement(class FName AchievementName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BasePlayerController_C", "UnlockAchievement");

	Params::BP_BasePlayerController_C_UnlockAchievement Parms{};

	Parms.AchievementName = AchievementName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BasePlayerController.BP_BasePlayerController_C.OnSuccess_25FE2EED481770906869D8BE77840F55
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TArray<struct FBPUniqueNetId>&    Results                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABP_BasePlayerController_C::OnSuccess_25FE2EED481770906869D8BE77840F55(const TArray<struct FBPUniqueNetId>& Results)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BasePlayerController_C", "OnSuccess_25FE2EED481770906869D8BE77840F55");

	Params::BP_BasePlayerController_C_OnSuccess_25FE2EED481770906869D8BE77840F55 Parms{};

	Parms.Results = std::move(Results);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BasePlayerController.BP_BasePlayerController_C.OnFailure_25FE2EED481770906869D8BE77840F55
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TArray<struct FBPUniqueNetId>&    Results                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABP_BasePlayerController_C::OnFailure_25FE2EED481770906869D8BE77840F55(const TArray<struct FBPUniqueNetId>& Results)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BasePlayerController_C", "OnFailure_25FE2EED481770906869D8BE77840F55");

	Params::BP_BasePlayerController_C_OnFailure_25FE2EED481770906869D8BE77840F55 Parms{};

	Parms.Results = std::move(Results);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BasePlayerController.BP_BasePlayerController_C.OnSuccess_7A38069049F41D425743B08026BC0075
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TArray<struct FBPUniqueNetId>&    Results                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABP_BasePlayerController_C::OnSuccess_7A38069049F41D425743B08026BC0075(const TArray<struct FBPUniqueNetId>& Results)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BasePlayerController_C", "OnSuccess_7A38069049F41D425743B08026BC0075");

	Params::BP_BasePlayerController_C_OnSuccess_7A38069049F41D425743B08026BC0075 Parms{};

	Parms.Results = std::move(Results);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BasePlayerController.BP_BasePlayerController_C.OnFailure_7A38069049F41D425743B08026BC0075
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TArray<struct FBPUniqueNetId>&    Results                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABP_BasePlayerController_C::OnFailure_7A38069049F41D425743B08026BC0075(const TArray<struct FBPUniqueNetId>& Results)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BasePlayerController_C", "OnFailure_7A38069049F41D425743B08026BC0075");

	Params::BP_BasePlayerController_C_OnFailure_7A38069049F41D425743B08026BC0075 Parms{};

	Parms.Results = std::move(Results);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BasePlayerController.BP_BasePlayerController_C.InpActEvt_SkipVideo_K2Node_InputActionEvent_0
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_BasePlayerController_C::InpActEvt_SkipVideo_K2Node_InputActionEvent_0(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BasePlayerController_C", "InpActEvt_SkipVideo_K2Node_InputActionEvent_0");

	Params::BP_BasePlayerController_C_InpActEvt_SkipVideo_K2Node_InputActionEvent_0 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BasePlayerController.BP_BasePlayerController_C.GetPlayerControllerFromPlayerState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerState*                     PlayerState_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_BasePlayerController_C**      PlayerController                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BasePlayerController_C::GetPlayerControllerFromPlayerState(class APlayerState* PlayerState_0, class ABP_BasePlayerController_C** PlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BasePlayerController_C", "GetPlayerControllerFromPlayerState");

	Params::BP_BasePlayerController_C_GetPlayerControllerFromPlayerState Parms{};

	Parms.PlayerState_0 = PlayerState_0;

	UObject::ProcessEvent(Func, &Parms);

	if (PlayerController != nullptr)
		*PlayerController = Parms.PlayerController;
}

}

