#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PlayerStats_UI

#include "Basic.hpp"

#include "PlayerStats_UI_classes.hpp"
#include "PlayerStats_UI_parameters.hpp"


namespace SDK
{

// Function PlayerStats_UI.PlayerStats_UI_C.ExecuteUbergraph_PlayerStats_UI
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPlayerStats_UI_C::ExecuteUbergraph_PlayerStats_UI(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerStats_UI_C", "ExecuteUbergraph_PlayerStats_UI");

	Params::PlayerStats_UI_C_ExecuteUbergraph_PlayerStats_UI Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerStats_UI.PlayerStats_UI_C.BndEvt__PlayerStats_UI_XSXGamerCardButton_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UPlayerStats_UI_C::BndEvt__PlayerStats_UI_XSXGamerCardButton_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerStats_UI_C", "BndEvt__PlayerStats_UI_XSXGamerCardButton_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerStats_UI.PlayerStats_UI_C.UpdateSpeaking
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsSpeaking                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UPlayerStats_UI_C::UpdateSpeaking(bool IsSpeaking)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerStats_UI_C", "UpdateSpeaking");

	Params::PlayerStats_UI_C_UpdateSpeaking Parms{};

	Parms.IsSpeaking = IsSpeaking;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerStats_UI.PlayerStats_UI_C.OnInputChange
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EFancyInputDevice                       NewInputDevice                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPlayerStats_UI_C::OnInputChange(EFancyInputDevice NewInputDevice)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerStats_UI_C", "OnInputChange");

	Params::PlayerStats_UI_C_OnInputChange Parms{};

	Parms.NewInputDevice = NewInputDevice;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerStats_UI.PlayerStats_UI_C.BindToInputChange
// (BlueprintCallable, BlueprintEvent)

void UPlayerStats_UI_C::BindToInputChange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerStats_UI_C", "BindToInputChange");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerStats_UI.PlayerStats_UI_C.ManualKick
// (BlueprintCallable, BlueprintEvent)

void UPlayerStats_UI_C::ManualKick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerStats_UI_C", "ManualKick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerStats_UI.PlayerStats_UI_C.ToggleFocus
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsFocused                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UPlayerStats_UI_C::ToggleFocus(bool IsFocused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerStats_UI_C", "ToggleFocus");

	Params::PlayerStats_UI_C_ToggleFocus Parms{};

	Parms.IsFocused = IsFocused;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerStats_UI.PlayerStats_UI_C.BndEvt__PlayerStats_UI_UI_Menu_Button_Kick_K2Node_ComponentBoundEvent_0_OnClick__DelegateSignature
// (BlueprintEvent)

void UPlayerStats_UI_C::BndEvt__PlayerStats_UI_UI_Menu_Button_Kick_K2Node_ComponentBoundEvent_0_OnClick__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerStats_UI_C", "BndEvt__PlayerStats_UI_UI_Menu_Button_Kick_K2Node_ComponentBoundEvent_0_OnClick__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerStats_UI.PlayerStats_UI_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UPlayerStats_UI_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerStats_UI_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerStats_UI.PlayerStats_UI_C.ToggleEnabled
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsEnabled                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UPlayerStats_UI_C::ToggleEnabled(bool IsEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerStats_UI_C", "ToggleEnabled");

	Params::PlayerStats_UI_C_ToggleEnabled Parms{};

	Parms.IsEnabled = IsEnabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerStats_UI.PlayerStats_UI_C.ToggleHover
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsHovered_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UPlayerStats_UI_C::ToggleHover(bool IsHovered_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerStats_UI_C", "ToggleHover");

	Params::PlayerStats_UI_C_ToggleHover Parms{};

	Parms.IsHovered_0 = IsHovered_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerStats_UI.PlayerStats_UI_C.Update Killed
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UPlayerStats_UI_C::Update_Killed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerStats_UI_C", "Update Killed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerStats_UI.PlayerStats_UI_C.GetPingText
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText UPlayerStats_UI_C::GetPingText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerStats_UI_C", "GetPingText");

	Params::PlayerStats_UI_C_GetPingText Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PlayerStats_UI.PlayerStats_UI_C.GetKickButtonVisibility
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ESlateVisibility                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

ESlateVisibility UPlayerStats_UI_C::GetKickButtonVisibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerStats_UI_C", "GetKickButtonVisibility");

	Params::PlayerStats_UI_C_GetKickButtonVisibility Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PlayerStats_UI.PlayerStats_UI_C.GetPlayerById
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerState**                    PlayerState_0                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPlayerStats_UI_C::GetPlayerById(class APlayerState** PlayerState_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerStats_UI_C", "GetPlayerById");

	Params::PlayerStats_UI_C_GetPlayerById Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (PlayerState_0 != nullptr)
		*PlayerState_0 = Parms.PlayerState_0;
}


// Function PlayerStats_UI.PlayerStats_UI_C.OnKeyDown
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// const struct FKeyEvent&                 InKeyEvent                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UPlayerStats_UI_C::OnKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerStats_UI_C", "OnKeyDown");

	Params::PlayerStats_UI_C_OnKeyDown Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InKeyEvent = std::move(InKeyEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PlayerStats_UI.PlayerStats_UI_C.GetPlayerName
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText UPlayerStats_UI_C::GetPlayerName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerStats_UI_C", "GetPlayerName");

	Params::PlayerStats_UI_C_GetPlayerName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PlayerStats_UI.PlayerStats_UI_C.UpdateLevelIconColor
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UPlayerStats_UI_C::UpdateLevelIconColor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerStats_UI_C", "UpdateLevelIconColor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerStats_UI.PlayerStats_UI_C.Get_Speaker_Image_Visibility_0
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ESlateVisibility                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

ESlateVisibility UPlayerStats_UI_C::Get_Speaker_Image_Visibility_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerStats_UI_C", "Get_Speaker_Image_Visibility_0");

	Params::PlayerStats_UI_C_Get_Speaker_Image_Visibility_0 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PlayerStats_UI.PlayerStats_UI_C.Get_XSXGamerCardButton_Visibility_0
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ESlateVisibility                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

ESlateVisibility UPlayerStats_UI_C::Get_XSXGamerCardButton_Visibility_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerStats_UI_C", "Get_XSXGamerCardButton_Visibility_0");

	Params::PlayerStats_UI_C_Get_XSXGamerCardButton_Visibility_0 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

