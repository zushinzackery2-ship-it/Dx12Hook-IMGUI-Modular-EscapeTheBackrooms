#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ScannerComponent

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_ScannerComponent.BP_ScannerComponent_C.ExecuteUbergraph_BP_ScannerComponent
// 0x0048 (0x0048 - 0x0000)
struct BP_ScannerComponent_C_ExecuteUbergraph_BP_ScannerComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_1; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue;           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_UseFOV;                         // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_2; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ScannerComponent_C_ExecuteUbergraph_BP_ScannerComponent) == 0x000008, "Wrong alignment on BP_ScannerComponent_C_ExecuteUbergraph_BP_ScannerComponent");
static_assert(sizeof(BP_ScannerComponent_C_ExecuteUbergraph_BP_ScannerComponent) == 0x000048, "Wrong size on BP_ScannerComponent_C_ExecuteUbergraph_BP_ScannerComponent");
static_assert(offsetof(BP_ScannerComponent_C_ExecuteUbergraph_BP_ScannerComponent, EntryPoint) == 0x000000, "Member 'BP_ScannerComponent_C_ExecuteUbergraph_BP_ScannerComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ScannerComponent_C_ExecuteUbergraph_BP_ScannerComponent, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000008, "Member 'BP_ScannerComponent_C_ExecuteUbergraph_BP_ScannerComponent::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScannerComponent_C_ExecuteUbergraph_BP_ScannerComponent, K2Node_Event_DeltaSeconds) == 0x000010, "Member 'BP_ScannerComponent_C_ExecuteUbergraph_BP_ScannerComponent::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_ScannerComponent_C_ExecuteUbergraph_BP_ScannerComponent, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000014, "Member 'BP_ScannerComponent_C_ExecuteUbergraph_BP_ScannerComponent::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScannerComponent_C_ExecuteUbergraph_BP_ScannerComponent, CallFunc_GetOwner_ReturnValue) == 0x000018, "Member 'BP_ScannerComponent_C_ExecuteUbergraph_BP_ScannerComponent::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScannerComponent_C_ExecuteUbergraph_BP_ScannerComponent, CallFunc_CreateDynamicMaterialInstance_ReturnValue_1) == 0x000020, "Member 'BP_ScannerComponent_C_ExecuteUbergraph_BP_ScannerComponent::CallFunc_CreateDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ScannerComponent_C_ExecuteUbergraph_BP_ScannerComponent, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000028, "Member 'BP_ScannerComponent_C_ExecuteUbergraph_BP_ScannerComponent::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScannerComponent_C_ExecuteUbergraph_BP_ScannerComponent, CallFunc_SpawnSoundAttached_ReturnValue) == 0x000030, "Member 'BP_ScannerComponent_C_ExecuteUbergraph_BP_ScannerComponent::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScannerComponent_C_ExecuteUbergraph_BP_ScannerComponent, K2Node_CustomEvent_UseFOV) == 0x000038, "Member 'BP_ScannerComponent_C_ExecuteUbergraph_BP_ScannerComponent::K2Node_CustomEvent_UseFOV' has a wrong offset!");
static_assert(offsetof(BP_ScannerComponent_C_ExecuteUbergraph_BP_ScannerComponent, CallFunc_CreateDynamicMaterialInstance_ReturnValue_2) == 0x000040, "Member 'BP_ScannerComponent_C_ExecuteUbergraph_BP_ScannerComponent::CallFunc_CreateDynamicMaterialInstance_ReturnValue_2' has a wrong offset!");

// Function BP_ScannerComponent.BP_ScannerComponent_C.UpdateMaterial
// 0x0001 (0x0001 - 0x0000)
struct BP_ScannerComponent_C_UpdateMaterial final
{
public:
	bool                                          UseFOV;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ScannerComponent_C_UpdateMaterial) == 0x000001, "Wrong alignment on BP_ScannerComponent_C_UpdateMaterial");
static_assert(sizeof(BP_ScannerComponent_C_UpdateMaterial) == 0x000001, "Wrong size on BP_ScannerComponent_C_UpdateMaterial");
static_assert(offsetof(BP_ScannerComponent_C_UpdateMaterial, UseFOV) == 0x000000, "Member 'BP_ScannerComponent_C_UpdateMaterial::UseFOV' has a wrong offset!");

// Function BP_ScannerComponent.BP_ScannerComponent_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_ScannerComponent_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ScannerComponent_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_ScannerComponent_C_ReceiveTick");
static_assert(sizeof(BP_ScannerComponent_C_ReceiveTick) == 0x000004, "Wrong size on BP_ScannerComponent_C_ReceiveTick");
static_assert(offsetof(BP_ScannerComponent_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_ScannerComponent_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_ScannerComponent.BP_ScannerComponent_C.SetWavePosition
// 0x0001 (0x0001 - 0x0000)
struct BP_ScannerComponent_C_SetWavePosition final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ScannerComponent_C_SetWavePosition) == 0x000001, "Wrong alignment on BP_ScannerComponent_C_SetWavePosition");
static_assert(sizeof(BP_ScannerComponent_C_SetWavePosition) == 0x000001, "Wrong size on BP_ScannerComponent_C_SetWavePosition");
static_assert(offsetof(BP_ScannerComponent_C_SetWavePosition, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_ScannerComponent_C_SetWavePosition::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

