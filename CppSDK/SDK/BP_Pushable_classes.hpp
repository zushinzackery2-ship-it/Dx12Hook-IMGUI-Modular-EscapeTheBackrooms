#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Pushable

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Backrooms_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Pushable.BP_Pushable_C
// 0x0048 (0x0298 - 0x0250)
class ABP_Pushable_C final : public APushableActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0250(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   StaticMesh1;                                       // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Audio;                                             // 0x0260(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh3;                                       // 0x0268(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CablePoint;                                        // 0x0270(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh2;                                       // 0x0278(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0280(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_284[0x4];                                      // 0x0284(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPCharacter_Demo_C*                    PushingActor;                                      // 0x0288(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Active;                                            // 0x0290(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	bool                                          CanPush;                                           // 0x0291(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	bool                                          IsPlaced;                                          // 0x0292(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_Pushable(int32 EntryPoint);
	void OnActorUsed(class ACharacter* Character);
	void UserConstructionScript();
	void OnRep_Active();
	void OnRep_CanPush();
	void Get_Forward_Collision_Points(class ABPCharacter_Demo_C* PushingActor_0, float Axis, TArray<struct FVector>* CollisionPoints);
	void Can_Push(class ABPCharacter_Demo_C* Target, float NewParam, bool MoveForward, bool* NewParam2);
	TArray<struct FVector> Get_Right_Collision_Points(class ABPCharacter_Demo_C* PushingActor_0, float Axis);
	void OnRep_Index();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Pushable_C">();
	}
	static class ABP_Pushable_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Pushable_C>();
	}
};
static_assert(alignof(ABP_Pushable_C) == 0x000008, "Wrong alignment on ABP_Pushable_C");
static_assert(sizeof(ABP_Pushable_C) == 0x000298, "Wrong size on ABP_Pushable_C");
static_assert(offsetof(ABP_Pushable_C, UberGraphFrame) == 0x000250, "Member 'ABP_Pushable_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Pushable_C, StaticMesh1) == 0x000258, "Member 'ABP_Pushable_C::StaticMesh1' has a wrong offset!");
static_assert(offsetof(ABP_Pushable_C, Audio) == 0x000260, "Member 'ABP_Pushable_C::Audio' has a wrong offset!");
static_assert(offsetof(ABP_Pushable_C, StaticMesh3) == 0x000268, "Member 'ABP_Pushable_C::StaticMesh3' has a wrong offset!");
static_assert(offsetof(ABP_Pushable_C, CablePoint) == 0x000270, "Member 'ABP_Pushable_C::CablePoint' has a wrong offset!");
static_assert(offsetof(ABP_Pushable_C, StaticMesh2) == 0x000278, "Member 'ABP_Pushable_C::StaticMesh2' has a wrong offset!");
static_assert(offsetof(ABP_Pushable_C, Index_0) == 0x000280, "Member 'ABP_Pushable_C::Index_0' has a wrong offset!");
static_assert(offsetof(ABP_Pushable_C, PushingActor) == 0x000288, "Member 'ABP_Pushable_C::PushingActor' has a wrong offset!");
static_assert(offsetof(ABP_Pushable_C, Active) == 0x000290, "Member 'ABP_Pushable_C::Active' has a wrong offset!");
static_assert(offsetof(ABP_Pushable_C, CanPush) == 0x000291, "Member 'ABP_Pushable_C::CanPush' has a wrong offset!");
static_assert(offsetof(ABP_Pushable_C, IsPlaced) == 0x000292, "Member 'ABP_Pushable_C::IsPlaced' has a wrong offset!");

}

