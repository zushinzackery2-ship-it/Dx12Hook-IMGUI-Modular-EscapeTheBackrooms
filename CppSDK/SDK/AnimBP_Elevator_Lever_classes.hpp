#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AnimBP_Elevator_Lever

#include "Basic.hpp"

#include "AnimGraphRuntime_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass AnimBP_Elevator_Lever.AnimBP_Elevator_Lever_C
// 0x05C0 (0x0880 - 0x02C0)
class UAnimBP_Elevator_Lever_C final : public UAnimInstance
{
public:
	uint8                                         Pad_2B8[0x8];                                      // 0x02B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x02C8(0x0030)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_3;                        // 0x02F8(0x0108)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_2;                        // 0x0400(0x0108)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_3;             // 0x0508(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_2;             // 0x0528(0x0020)()
	struct FAnimNode_MeshSpaceRefPose             AnimGraphNode_MeshRefPose_3;                       // 0x0548(0x0010)()
	struct FAnimNode_MeshSpaceRefPose             AnimGraphNode_MeshRefPose_2;                       // 0x0558(0x0010)()
	struct FAnimNode_BlendListByInt               AnimGraphNode_BlendListByInt;                      // 0x0568(0x00A0)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_1;                        // 0x0608(0x0108)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_1;             // 0x0710(0x0020)()
	struct FAnimNode_MeshSpaceRefPose             AnimGraphNode_MeshRefPose_1;                       // 0x0730(0x0010)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x0740(0x0108)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x0848(0x0020)()
	struct FAnimNode_MeshSpaceRefPose             AnimGraphNode_MeshRefPose;                         // 0x0868(0x0010)()
	int32                                         LeverState;                                        // 0x0878(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_AnimBP_Elevator_Lever(int32 EntryPoint);
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void AnimGraph(struct FPoseLink* AnimGraph_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AnimBP_Elevator_Lever_C">();
	}
	static class UAnimBP_Elevator_Lever_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimBP_Elevator_Lever_C>();
	}
};
static_assert(alignof(UAnimBP_Elevator_Lever_C) == 0x000010, "Wrong alignment on UAnimBP_Elevator_Lever_C");
static_assert(sizeof(UAnimBP_Elevator_Lever_C) == 0x000880, "Wrong size on UAnimBP_Elevator_Lever_C");
static_assert(offsetof(UAnimBP_Elevator_Lever_C, UberGraphFrame) == 0x0002C0, "Member 'UAnimBP_Elevator_Lever_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAnimBP_Elevator_Lever_C, AnimGraphNode_Root) == 0x0002C8, "Member 'UAnimBP_Elevator_Lever_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UAnimBP_Elevator_Lever_C, AnimGraphNode_ModifyBone_3) == 0x0002F8, "Member 'UAnimBP_Elevator_Lever_C::AnimGraphNode_ModifyBone_3' has a wrong offset!");
static_assert(offsetof(UAnimBP_Elevator_Lever_C, AnimGraphNode_ModifyBone_2) == 0x000400, "Member 'UAnimBP_Elevator_Lever_C::AnimGraphNode_ModifyBone_2' has a wrong offset!");
static_assert(offsetof(UAnimBP_Elevator_Lever_C, AnimGraphNode_ComponentToLocalSpace_3) == 0x000508, "Member 'UAnimBP_Elevator_Lever_C::AnimGraphNode_ComponentToLocalSpace_3' has a wrong offset!");
static_assert(offsetof(UAnimBP_Elevator_Lever_C, AnimGraphNode_ComponentToLocalSpace_2) == 0x000528, "Member 'UAnimBP_Elevator_Lever_C::AnimGraphNode_ComponentToLocalSpace_2' has a wrong offset!");
static_assert(offsetof(UAnimBP_Elevator_Lever_C, AnimGraphNode_MeshRefPose_3) == 0x000548, "Member 'UAnimBP_Elevator_Lever_C::AnimGraphNode_MeshRefPose_3' has a wrong offset!");
static_assert(offsetof(UAnimBP_Elevator_Lever_C, AnimGraphNode_MeshRefPose_2) == 0x000558, "Member 'UAnimBP_Elevator_Lever_C::AnimGraphNode_MeshRefPose_2' has a wrong offset!");
static_assert(offsetof(UAnimBP_Elevator_Lever_C, AnimGraphNode_BlendListByInt) == 0x000568, "Member 'UAnimBP_Elevator_Lever_C::AnimGraphNode_BlendListByInt' has a wrong offset!");
static_assert(offsetof(UAnimBP_Elevator_Lever_C, AnimGraphNode_ModifyBone_1) == 0x000608, "Member 'UAnimBP_Elevator_Lever_C::AnimGraphNode_ModifyBone_1' has a wrong offset!");
static_assert(offsetof(UAnimBP_Elevator_Lever_C, AnimGraphNode_ComponentToLocalSpace_1) == 0x000710, "Member 'UAnimBP_Elevator_Lever_C::AnimGraphNode_ComponentToLocalSpace_1' has a wrong offset!");
static_assert(offsetof(UAnimBP_Elevator_Lever_C, AnimGraphNode_MeshRefPose_1) == 0x000730, "Member 'UAnimBP_Elevator_Lever_C::AnimGraphNode_MeshRefPose_1' has a wrong offset!");
static_assert(offsetof(UAnimBP_Elevator_Lever_C, AnimGraphNode_ModifyBone) == 0x000740, "Member 'UAnimBP_Elevator_Lever_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(UAnimBP_Elevator_Lever_C, AnimGraphNode_ComponentToLocalSpace) == 0x000848, "Member 'UAnimBP_Elevator_Lever_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UAnimBP_Elevator_Lever_C, AnimGraphNode_MeshRefPose) == 0x000868, "Member 'UAnimBP_Elevator_Lever_C::AnimGraphNode_MeshRefPose' has a wrong offset!");
static_assert(offsetof(UAnimBP_Elevator_Lever_C, LeverState) == 0x000878, "Member 'UAnimBP_Elevator_Lever_C::LeverState' has a wrong offset!");

}

