#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Smiler_Zone

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "HE_Subtitle_structs.hpp"
#include "HE_SubtitleSeq_structs.hpp"


namespace SDK::Params
{

// Function BP_Smiler_Zone.BP_Smiler_Zone_C.ExecuteUbergraph_BP_Smiler_Zone
// 0x01C0 (0x01C0 - 0x0000)
struct BP_Smiler_Zone_C_ExecuteUbergraph_BP_Smiler_Zone final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMP_PlayerController_C*                 K2Node_DynamicCast_AsMP_Player_Controller;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0040(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPCharacter_Demo_C*                    K2Node_DynamicCast_AsBPCharacter_Demo;             // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DA[0x6];                                       // 0x00DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Item_Camera_C*                      K2Node_DynamicCast_AsBP_Item_Camera;               // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPCharacter_Demo_C*                    K2Node_DynamicCast_AsBPCharacter_Demo_1;           // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHE_Subtitle                           K2Node_MakeStruct_HE_Subtitle;                     // 0x0100(0x0050)(HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FHE_Subtitle>                   K2Node_MakeArray_Array;                            // 0x0158(0x0010)(ReferenceParm)
	struct FHE_SubtitleSeq                        K2Node_MakeStruct_HE_SubtitleSeq;                  // 0x0168(0x0018)(HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0180(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0190(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19C[0x4];                                      // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPCharacter_Demo_C*                    K2Node_DynamicCast_AsBPCharacter_Demo_2;           // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1AB[0x5];                                      // 0x01AB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Item_Camera_C*                      K2Node_DynamicCast_AsBP_Item_Camera_1;             // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x01B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Smiler_Zone_C_ExecuteUbergraph_BP_Smiler_Zone) == 0x000008, "Wrong alignment on BP_Smiler_Zone_C_ExecuteUbergraph_BP_Smiler_Zone");
static_assert(sizeof(BP_Smiler_Zone_C_ExecuteUbergraph_BP_Smiler_Zone) == 0x0001C0, "Wrong size on BP_Smiler_Zone_C_ExecuteUbergraph_BP_Smiler_Zone");
static_assert(offsetof(BP_Smiler_Zone_C_ExecuteUbergraph_BP_Smiler_Zone, EntryPoint) == 0x000000, "Member 'BP_Smiler_Zone_C_ExecuteUbergraph_BP_Smiler_Zone::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Smiler_Zone_C_ExecuteUbergraph_BP_Smiler_Zone, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'BP_Smiler_Zone_C_ExecuteUbergraph_BP_Smiler_Zone::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Smiler_Zone_C_ExecuteUbergraph_BP_Smiler_Zone, K2Node_DynamicCast_AsMP_Player_Controller) == 0x000010, "Member 'BP_Smiler_Zone_C_ExecuteUbergraph_BP_Smiler_Zone::K2Node_DynamicCast_AsMP_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_Smiler_Zone_C_ExecuteUbergraph_BP_Smiler_Zone, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_Smiler_Zone_C_ExecuteUbergraph_BP_Smiler_Zone::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Smiler_Zone_C_ExecuteUbergraph_BP_Smiler_Zone, CallFunc_HasAuthority_ReturnValue) == 0x000019, "Member 'BP_Smiler_Zone_C_ExecuteUbergraph_BP_Smiler_Zone::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Smiler_Zone_C_ExecuteUbergraph_BP_Smiler_Zone, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x000020, "Member 'BP_Smiler_Zone_C_ExecuteUbergraph_BP_Smiler_Zone::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(BP_Smiler_Zone_C_ExecuteUbergraph_BP_Smiler_Zone, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000028, "Member 'BP_Smiler_Zone_C_ExecuteUbergraph_BP_Smiler_Zone::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(BP_Smiler_Zone_C_ExecuteUbergraph_BP_Smiler_Zone, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000030, "Member 'BP_Smiler_Zone_C_ExecuteUbergraph_BP_Smiler_Zone::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(BP_Smiler_Zone_C_ExecuteUbergraph_BP_Smiler_Zone, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x000038, "Member 'BP_Smiler_Zone_C_ExecuteUbergraph_BP_Smiler_Zone::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(BP_Smiler_Zone_C_ExecuteUbergraph_BP_Smiler_Zone, K2Node_ComponentBoundEvent_bFromSweep) == 0x00003C, "Member 'BP_Smiler_Zone_C_ExecuteUbergraph_BP_Smiler_Zone::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_Smiler_Zone_C_ExecuteUbergraph_BP_Smiler_Zone, K2Node_ComponentBoundEvent_SweepResult) == 0x000040, "Member 'BP_Smiler_Zone_C_ExecuteUbergraph_BP_Smiler_Zone::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_Smiler_Zone_C_ExecuteUbergraph_BP_Smiler_Zone, Temp_bool_Has_Been_Initd_Variable) == 0x0000C8, "Member 'BP_Smiler_Zone_C_ExecuteUbergraph_BP_Smiler_Zone::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_Smiler_Zone_C_ExecuteUbergraph_BP_Smiler_Zone, K2Node_DynamicCast_AsBPCharacter_Demo) == 0x0000D0, "Member 'BP_Smiler_Zone_C_ExecuteUbergraph_BP_Smiler_Zone::K2Node_DynamicCast_AsBPCharacter_Demo' has a wrong offset!");
static_assert(offsetof(BP_Smiler_Zone_C_ExecuteUbergraph_BP_Smiler_Zone, K2Node_DynamicCast_bSuccess_1) == 0x0000D8, "Member 'BP_Smiler_Zone_C_ExecuteUbergraph_BP_Smiler_Zone::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Smiler_Zone_C_ExecuteUbergraph_BP_Smiler_Zone, CallFunc_IsValid_ReturnValue) == 0x0000D9, "Member 'BP_Smiler_Zone_C_ExecuteUbergraph_BP_Smiler_Zone::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Smiler_Zone_C_ExecuteUbergraph_BP_Smiler_Zone, K2Node_DynamicCast_AsBP_Item_Camera) == 0x0000E0, "Member 'BP_Smiler_Zone_C_ExecuteUbergraph_BP_Smiler_Zone::K2Node_DynamicCast_AsBP_Item_Camera' has a wrong offset!");
static_assert(offsetof(BP_Smiler_Zone_C_ExecuteUbergraph_BP_Smiler_Zone, K2Node_DynamicCast_bSuccess_2) == 0x0000E8, "Member 'BP_Smiler_Zone_C_ExecuteUbergraph_BP_Smiler_Zone::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_Smiler_Zone_C_ExecuteUbergraph_BP_Smiler_Zone, K2Node_DynamicCast_AsBPCharacter_Demo_1) == 0x0000F0, "Member 'BP_Smiler_Zone_C_ExecuteUbergraph_BP_Smiler_Zone::K2Node_DynamicCast_AsBPCharacter_Demo_1' has a wrong offset!");
static_assert(offsetof(BP_Smiler_Zone_C_ExecuteUbergraph_BP_Smiler_Zone, K2Node_DynamicCast_bSuccess_3) == 0x0000F8, "Member 'BP_Smiler_Zone_C_ExecuteUbergraph_BP_Smiler_Zone::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_Smiler_Zone_C_ExecuteUbergraph_BP_Smiler_Zone, K2Node_MakeStruct_HE_Subtitle) == 0x000100, "Member 'BP_Smiler_Zone_C_ExecuteUbergraph_BP_Smiler_Zone::K2Node_MakeStruct_HE_Subtitle' has a wrong offset!");
static_assert(offsetof(BP_Smiler_Zone_C_ExecuteUbergraph_BP_Smiler_Zone, CallFunc_IsLocallyControlled_ReturnValue) == 0x000150, "Member 'BP_Smiler_Zone_C_ExecuteUbergraph_BP_Smiler_Zone::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Smiler_Zone_C_ExecuteUbergraph_BP_Smiler_Zone, K2Node_MakeArray_Array) == 0x000158, "Member 'BP_Smiler_Zone_C_ExecuteUbergraph_BP_Smiler_Zone::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Smiler_Zone_C_ExecuteUbergraph_BP_Smiler_Zone, K2Node_MakeStruct_HE_SubtitleSeq) == 0x000168, "Member 'BP_Smiler_Zone_C_ExecuteUbergraph_BP_Smiler_Zone::K2Node_MakeStruct_HE_SubtitleSeq' has a wrong offset!");
static_assert(offsetof(BP_Smiler_Zone_C_ExecuteUbergraph_BP_Smiler_Zone, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000180, "Member 'BP_Smiler_Zone_C_ExecuteUbergraph_BP_Smiler_Zone::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_Smiler_Zone_C_ExecuteUbergraph_BP_Smiler_Zone, K2Node_ComponentBoundEvent_OtherActor) == 0x000188, "Member 'BP_Smiler_Zone_C_ExecuteUbergraph_BP_Smiler_Zone::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_Smiler_Zone_C_ExecuteUbergraph_BP_Smiler_Zone, K2Node_ComponentBoundEvent_OtherComp) == 0x000190, "Member 'BP_Smiler_Zone_C_ExecuteUbergraph_BP_Smiler_Zone::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_Smiler_Zone_C_ExecuteUbergraph_BP_Smiler_Zone, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000198, "Member 'BP_Smiler_Zone_C_ExecuteUbergraph_BP_Smiler_Zone::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_Smiler_Zone_C_ExecuteUbergraph_BP_Smiler_Zone, K2Node_DynamicCast_AsBPCharacter_Demo_2) == 0x0001A0, "Member 'BP_Smiler_Zone_C_ExecuteUbergraph_BP_Smiler_Zone::K2Node_DynamicCast_AsBPCharacter_Demo_2' has a wrong offset!");
static_assert(offsetof(BP_Smiler_Zone_C_ExecuteUbergraph_BP_Smiler_Zone, K2Node_DynamicCast_bSuccess_4) == 0x0001A8, "Member 'BP_Smiler_Zone_C_ExecuteUbergraph_BP_Smiler_Zone::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_Smiler_Zone_C_ExecuteUbergraph_BP_Smiler_Zone, CallFunc_HasAuthority_ReturnValue_1) == 0x0001A9, "Member 'BP_Smiler_Zone_C_ExecuteUbergraph_BP_Smiler_Zone::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Smiler_Zone_C_ExecuteUbergraph_BP_Smiler_Zone, CallFunc_IsValid_ReturnValue_1) == 0x0001AA, "Member 'BP_Smiler_Zone_C_ExecuteUbergraph_BP_Smiler_Zone::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Smiler_Zone_C_ExecuteUbergraph_BP_Smiler_Zone, K2Node_DynamicCast_AsBP_Item_Camera_1) == 0x0001B0, "Member 'BP_Smiler_Zone_C_ExecuteUbergraph_BP_Smiler_Zone::K2Node_DynamicCast_AsBP_Item_Camera_1' has a wrong offset!");
static_assert(offsetof(BP_Smiler_Zone_C_ExecuteUbergraph_BP_Smiler_Zone, K2Node_DynamicCast_bSuccess_5) == 0x0001B8, "Member 'BP_Smiler_Zone_C_ExecuteUbergraph_BP_Smiler_Zone::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_Smiler_Zone_C_ExecuteUbergraph_BP_Smiler_Zone, Temp_bool_IsClosed_Variable) == 0x0001B9, "Member 'BP_Smiler_Zone_C_ExecuteUbergraph_BP_Smiler_Zone::Temp_bool_IsClosed_Variable' has a wrong offset!");

// Function BP_Smiler_Zone.BP_Smiler_Zone_C.BndEvt__BP_Smiler_Zone_CollisionComponent_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_Smiler_Zone_C_BndEvt__BP_Smiler_Zone_CollisionComponent_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Smiler_Zone_C_BndEvt__BP_Smiler_Zone_CollisionComponent_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_Smiler_Zone_C_BndEvt__BP_Smiler_Zone_CollisionComponent_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_Smiler_Zone_C_BndEvt__BP_Smiler_Zone_CollisionComponent_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on BP_Smiler_Zone_C_BndEvt__BP_Smiler_Zone_CollisionComponent_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_Smiler_Zone_C_BndEvt__BP_Smiler_Zone_CollisionComponent_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_Smiler_Zone_C_BndEvt__BP_Smiler_Zone_CollisionComponent_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_Smiler_Zone_C_BndEvt__BP_Smiler_Zone_CollisionComponent_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_Smiler_Zone_C_BndEvt__BP_Smiler_Zone_CollisionComponent_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_Smiler_Zone_C_BndEvt__BP_Smiler_Zone_CollisionComponent_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_Smiler_Zone_C_BndEvt__BP_Smiler_Zone_CollisionComponent_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_Smiler_Zone_C_BndEvt__BP_Smiler_Zone_CollisionComponent_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_Smiler_Zone_C_BndEvt__BP_Smiler_Zone_CollisionComponent_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function BP_Smiler_Zone.BP_Smiler_Zone_C.BndEvt__BP_NoClip_Zone_CollisionComponent_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct BP_Smiler_Zone_C_BndEvt__BP_NoClip_Zone_CollisionComponent_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_Smiler_Zone_C_BndEvt__BP_NoClip_Zone_CollisionComponent_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_Smiler_Zone_C_BndEvt__BP_NoClip_Zone_CollisionComponent_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_Smiler_Zone_C_BndEvt__BP_NoClip_Zone_CollisionComponent_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on BP_Smiler_Zone_C_BndEvt__BP_NoClip_Zone_CollisionComponent_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_Smiler_Zone_C_BndEvt__BP_NoClip_Zone_CollisionComponent_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_Smiler_Zone_C_BndEvt__BP_NoClip_Zone_CollisionComponent_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_Smiler_Zone_C_BndEvt__BP_NoClip_Zone_CollisionComponent_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_Smiler_Zone_C_BndEvt__BP_NoClip_Zone_CollisionComponent_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_Smiler_Zone_C_BndEvt__BP_NoClip_Zone_CollisionComponent_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_Smiler_Zone_C_BndEvt__BP_NoClip_Zone_CollisionComponent_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_Smiler_Zone_C_BndEvt__BP_NoClip_Zone_CollisionComponent_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_Smiler_Zone_C_BndEvt__BP_NoClip_Zone_CollisionComponent_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_Smiler_Zone_C_BndEvt__BP_NoClip_Zone_CollisionComponent_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_Smiler_Zone_C_BndEvt__BP_NoClip_Zone_CollisionComponent_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_Smiler_Zone_C_BndEvt__BP_NoClip_Zone_CollisionComponent_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_Smiler_Zone_C_BndEvt__BP_NoClip_Zone_CollisionComponent_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

}

