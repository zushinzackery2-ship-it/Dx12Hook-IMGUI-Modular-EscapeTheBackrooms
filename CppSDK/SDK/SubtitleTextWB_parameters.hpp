#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SubtitleTextWB

#include "Basic.hpp"


namespace SDK::Params
{

// Function SubtitleTextWB.SubtitleTextWB_C.ExecuteUbergraph_SubtitleTextWB
// 0x0048 (0x0048 - 0x0000)
struct SubtitleTextWB_C_ExecuteUbergraph_SubtitleTextWB final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMP_PlayerController_C*                 K2Node_DynamicCast_AsMP_Player_Controller;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_Speed;                          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Reverse;                        // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_ReverseFromCurrent;             // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetAnimationCurrentTime_ReturnValue;      // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SubtitleTextWB_C_ExecuteUbergraph_SubtitleTextWB) == 0x000008, "Wrong alignment on SubtitleTextWB_C_ExecuteUbergraph_SubtitleTextWB");
static_assert(sizeof(SubtitleTextWB_C_ExecuteUbergraph_SubtitleTextWB) == 0x000048, "Wrong size on SubtitleTextWB_C_ExecuteUbergraph_SubtitleTextWB");
static_assert(offsetof(SubtitleTextWB_C_ExecuteUbergraph_SubtitleTextWB, EntryPoint) == 0x000000, "Member 'SubtitleTextWB_C_ExecuteUbergraph_SubtitleTextWB::EntryPoint' has a wrong offset!");
static_assert(offsetof(SubtitleTextWB_C_ExecuteUbergraph_SubtitleTextWB, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'SubtitleTextWB_C_ExecuteUbergraph_SubtitleTextWB::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(SubtitleTextWB_C_ExecuteUbergraph_SubtitleTextWB, K2Node_DynamicCast_AsMP_Player_Controller) == 0x000010, "Member 'SubtitleTextWB_C_ExecuteUbergraph_SubtitleTextWB::K2Node_DynamicCast_AsMP_Player_Controller' has a wrong offset!");
static_assert(offsetof(SubtitleTextWB_C_ExecuteUbergraph_SubtitleTextWB, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'SubtitleTextWB_C_ExecuteUbergraph_SubtitleTextWB::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(SubtitleTextWB_C_ExecuteUbergraph_SubtitleTextWB, Temp_float_Variable) == 0x00001C, "Member 'SubtitleTextWB_C_ExecuteUbergraph_SubtitleTextWB::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(SubtitleTextWB_C_ExecuteUbergraph_SubtitleTextWB, Temp_bool_Variable) == 0x000020, "Member 'SubtitleTextWB_C_ExecuteUbergraph_SubtitleTextWB::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(SubtitleTextWB_C_ExecuteUbergraph_SubtitleTextWB, K2Node_CustomEvent_Speed) == 0x000024, "Member 'SubtitleTextWB_C_ExecuteUbergraph_SubtitleTextWB::K2Node_CustomEvent_Speed' has a wrong offset!");
static_assert(offsetof(SubtitleTextWB_C_ExecuteUbergraph_SubtitleTextWB, K2Node_CustomEvent_Reverse) == 0x000028, "Member 'SubtitleTextWB_C_ExecuteUbergraph_SubtitleTextWB::K2Node_CustomEvent_Reverse' has a wrong offset!");
static_assert(offsetof(SubtitleTextWB_C_ExecuteUbergraph_SubtitleTextWB, K2Node_CustomEvent_ReverseFromCurrent) == 0x000029, "Member 'SubtitleTextWB_C_ExecuteUbergraph_SubtitleTextWB::K2Node_CustomEvent_ReverseFromCurrent' has a wrong offset!");
static_assert(offsetof(SubtitleTextWB_C_ExecuteUbergraph_SubtitleTextWB, CallFunc_GetAnimationCurrentTime_ReturnValue) == 0x00002C, "Member 'SubtitleTextWB_C_ExecuteUbergraph_SubtitleTextWB::CallFunc_GetAnimationCurrentTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(SubtitleTextWB_C_ExecuteUbergraph_SubtitleTextWB, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000030, "Member 'SubtitleTextWB_C_ExecuteUbergraph_SubtitleTextWB::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SubtitleTextWB_C_ExecuteUbergraph_SubtitleTextWB, K2Node_Select_Default) == 0x000034, "Member 'SubtitleTextWB_C_ExecuteUbergraph_SubtitleTextWB::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(SubtitleTextWB_C_ExecuteUbergraph_SubtitleTextWB, CallFunc_PlayAnimation_ReturnValue) == 0x000038, "Member 'SubtitleTextWB_C_ExecuteUbergraph_SubtitleTextWB::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(SubtitleTextWB_C_ExecuteUbergraph_SubtitleTextWB, CallFunc_PlayAnimation_ReturnValue_1) == 0x000040, "Member 'SubtitleTextWB_C_ExecuteUbergraph_SubtitleTextWB::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");

// Function SubtitleTextWB.SubtitleTextWB_C.MoveSubtitle
// 0x0008 (0x0008 - 0x0000)
struct SubtitleTextWB_C_MoveSubtitle final
{
public:
	float                                         Speed;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Reverse;                                           // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ReverseFromCurrent;                                // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SubtitleTextWB_C_MoveSubtitle) == 0x000004, "Wrong alignment on SubtitleTextWB_C_MoveSubtitle");
static_assert(sizeof(SubtitleTextWB_C_MoveSubtitle) == 0x000008, "Wrong size on SubtitleTextWB_C_MoveSubtitle");
static_assert(offsetof(SubtitleTextWB_C_MoveSubtitle, Speed) == 0x000000, "Member 'SubtitleTextWB_C_MoveSubtitle::Speed' has a wrong offset!");
static_assert(offsetof(SubtitleTextWB_C_MoveSubtitle, Reverse) == 0x000004, "Member 'SubtitleTextWB_C_MoveSubtitle::Reverse' has a wrong offset!");
static_assert(offsetof(SubtitleTextWB_C_MoveSubtitle, ReverseFromCurrent) == 0x000005, "Member 'SubtitleTextWB_C_MoveSubtitle::ReverseFromCurrent' has a wrong offset!");

}

