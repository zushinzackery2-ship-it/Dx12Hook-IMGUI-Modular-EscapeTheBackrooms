#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Spectator

#include "Basic.hpp"

#include "InputCore_structs.hpp"
#include "Backrooms_structs.hpp"


namespace SDK::Params
{

// Function BP_Spectator.BP_Spectator_C.ExecuteUbergraph_BP_Spectator
// 0x0128 (0x0128 - 0x0000)
struct BP_Spectator_C_ExecuteUbergraph_BP_Spectator final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_Spectating;                     // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class UGameEnd_UI_2_C*>                CallFunc_GetAllWidgetsOfClass_FoundWidgets;        // 0x0018(0x0010)(ReferenceParm, ContainsInstancedReference)
	float                                         K2Node_InputAxisEvent_AxisValue_2;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameEnd_UI_2_C*                        CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UShocked_UI_C*>                  CallFunc_GetAllWidgetsOfClass_FoundWidgets_1;      // 0x0040(0x0010)(ReferenceParm, ContainsInstancedReference)
	float                                         K2Node_InputAxisEvent_AxisValue_3;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UShocked_UI_C*                          CallFunc_Array_Get_Item_1;                         // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_InputAxisEvent_AxisValue_1;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_InputAxisEvent_AxisValue;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key;                       // 0x0070(0x0018)(HasGetValueTypeHash)
	EFancyInputDevice                             CallFunc_GetCurrentInputDevice_ReturnValue;        // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_1;                     // 0x0090(0x0018)(HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AA[0x6];                                       // 0x00AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            K2Node_Event_NewController;                        // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMP_PlayerController_C*                 K2Node_CustomEvent_PlayerController;               // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMP_PlayerController_C*                 K2Node_DynamicCast_AsMP_Player_Controller;         // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_2;                     // 0x00D0(0x0018)(HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_DestroyedActor;                 // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UWB_SettingsPanel_Theme2_C*>     CallFunc_GetAllWidgetsOfClass_FoundWidgets_2;      // 0x00F0(0x0010)(ReferenceParm, ContainsInstancedReference)
	struct FKey                                   K2Node_InputActionEvent_Key_3;                     // 0x0100(0x0018)(HasGetValueTypeHash)
	class UWB_SettingsPanel_Theme2_C*             CallFunc_Array_Get_Item_2;                         // 0x0118(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Spectator_C_ExecuteUbergraph_BP_Spectator) == 0x000008, "Wrong alignment on BP_Spectator_C_ExecuteUbergraph_BP_Spectator");
static_assert(sizeof(BP_Spectator_C_ExecuteUbergraph_BP_Spectator) == 0x000128, "Wrong size on BP_Spectator_C_ExecuteUbergraph_BP_Spectator");
static_assert(offsetof(BP_Spectator_C_ExecuteUbergraph_BP_Spectator, EntryPoint) == 0x000000, "Member 'BP_Spectator_C_ExecuteUbergraph_BP_Spectator::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Spectator_C_ExecuteUbergraph_BP_Spectator, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'BP_Spectator_C_ExecuteUbergraph_BP_Spectator::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Spectator_C_ExecuteUbergraph_BP_Spectator, K2Node_CustomEvent_Spectating) == 0x000008, "Member 'BP_Spectator_C_ExecuteUbergraph_BP_Spectator::K2Node_CustomEvent_Spectating' has a wrong offset!");
static_assert(offsetof(BP_Spectator_C_ExecuteUbergraph_BP_Spectator, CallFunc_GetAllWidgetsOfClass_FoundWidgets) == 0x000018, "Member 'BP_Spectator_C_ExecuteUbergraph_BP_Spectator::CallFunc_GetAllWidgetsOfClass_FoundWidgets' has a wrong offset!");
static_assert(offsetof(BP_Spectator_C_ExecuteUbergraph_BP_Spectator, K2Node_InputAxisEvent_AxisValue_2) == 0x000028, "Member 'BP_Spectator_C_ExecuteUbergraph_BP_Spectator::K2Node_InputAxisEvent_AxisValue_2' has a wrong offset!");
static_assert(offsetof(BP_Spectator_C_ExecuteUbergraph_BP_Spectator, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_Spectator_C_ExecuteUbergraph_BP_Spectator::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Spectator_C_ExecuteUbergraph_BP_Spectator, CallFunc_IsValid_ReturnValue_1) == 0x000038, "Member 'BP_Spectator_C_ExecuteUbergraph_BP_Spectator::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Spectator_C_ExecuteUbergraph_BP_Spectator, CallFunc_GetAllWidgetsOfClass_FoundWidgets_1) == 0x000040, "Member 'BP_Spectator_C_ExecuteUbergraph_BP_Spectator::CallFunc_GetAllWidgetsOfClass_FoundWidgets_1' has a wrong offset!");
static_assert(offsetof(BP_Spectator_C_ExecuteUbergraph_BP_Spectator, K2Node_InputAxisEvent_AxisValue_3) == 0x000050, "Member 'BP_Spectator_C_ExecuteUbergraph_BP_Spectator::K2Node_InputAxisEvent_AxisValue_3' has a wrong offset!");
static_assert(offsetof(BP_Spectator_C_ExecuteUbergraph_BP_Spectator, CallFunc_Array_Get_Item_1) == 0x000058, "Member 'BP_Spectator_C_ExecuteUbergraph_BP_Spectator::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_Spectator_C_ExecuteUbergraph_BP_Spectator, CallFunc_IsValid_ReturnValue_2) == 0x000060, "Member 'BP_Spectator_C_ExecuteUbergraph_BP_Spectator::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Spectator_C_ExecuteUbergraph_BP_Spectator, K2Node_InputAxisEvent_AxisValue_1) == 0x000064, "Member 'BP_Spectator_C_ExecuteUbergraph_BP_Spectator::K2Node_InputAxisEvent_AxisValue_1' has a wrong offset!");
static_assert(offsetof(BP_Spectator_C_ExecuteUbergraph_BP_Spectator, K2Node_InputAxisEvent_AxisValue) == 0x000068, "Member 'BP_Spectator_C_ExecuteUbergraph_BP_Spectator::K2Node_InputAxisEvent_AxisValue' has a wrong offset!");
static_assert(offsetof(BP_Spectator_C_ExecuteUbergraph_BP_Spectator, K2Node_InputActionEvent_Key) == 0x000070, "Member 'BP_Spectator_C_ExecuteUbergraph_BP_Spectator::K2Node_InputActionEvent_Key' has a wrong offset!");
static_assert(offsetof(BP_Spectator_C_ExecuteUbergraph_BP_Spectator, CallFunc_GetCurrentInputDevice_ReturnValue) == 0x000088, "Member 'BP_Spectator_C_ExecuteUbergraph_BP_Spectator::CallFunc_GetCurrentInputDevice_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Spectator_C_ExecuteUbergraph_BP_Spectator, K2Node_InputActionEvent_Key_1) == 0x000090, "Member 'BP_Spectator_C_ExecuteUbergraph_BP_Spectator::K2Node_InputActionEvent_Key_1' has a wrong offset!");
static_assert(offsetof(BP_Spectator_C_ExecuteUbergraph_BP_Spectator, K2Node_SwitchEnum_CmpSuccess) == 0x0000A8, "Member 'BP_Spectator_C_ExecuteUbergraph_BP_Spectator::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_Spectator_C_ExecuteUbergraph_BP_Spectator, K2Node_SwitchEnum_CmpSuccess_1) == 0x0000A9, "Member 'BP_Spectator_C_ExecuteUbergraph_BP_Spectator::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Spectator_C_ExecuteUbergraph_BP_Spectator, K2Node_Event_NewController) == 0x0000B0, "Member 'BP_Spectator_C_ExecuteUbergraph_BP_Spectator::K2Node_Event_NewController' has a wrong offset!");
static_assert(offsetof(BP_Spectator_C_ExecuteUbergraph_BP_Spectator, K2Node_CustomEvent_PlayerController) == 0x0000B8, "Member 'BP_Spectator_C_ExecuteUbergraph_BP_Spectator::K2Node_CustomEvent_PlayerController' has a wrong offset!");
static_assert(offsetof(BP_Spectator_C_ExecuteUbergraph_BP_Spectator, K2Node_DynamicCast_AsMP_Player_Controller) == 0x0000C0, "Member 'BP_Spectator_C_ExecuteUbergraph_BP_Spectator::K2Node_DynamicCast_AsMP_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_Spectator_C_ExecuteUbergraph_BP_Spectator, K2Node_DynamicCast_bSuccess) == 0x0000C8, "Member 'BP_Spectator_C_ExecuteUbergraph_BP_Spectator::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Spectator_C_ExecuteUbergraph_BP_Spectator, K2Node_InputActionEvent_Key_2) == 0x0000D0, "Member 'BP_Spectator_C_ExecuteUbergraph_BP_Spectator::K2Node_InputActionEvent_Key_2' has a wrong offset!");
static_assert(offsetof(BP_Spectator_C_ExecuteUbergraph_BP_Spectator, K2Node_CustomEvent_DestroyedActor) == 0x0000E8, "Member 'BP_Spectator_C_ExecuteUbergraph_BP_Spectator::K2Node_CustomEvent_DestroyedActor' has a wrong offset!");
static_assert(offsetof(BP_Spectator_C_ExecuteUbergraph_BP_Spectator, CallFunc_GetAllWidgetsOfClass_FoundWidgets_2) == 0x0000F0, "Member 'BP_Spectator_C_ExecuteUbergraph_BP_Spectator::CallFunc_GetAllWidgetsOfClass_FoundWidgets_2' has a wrong offset!");
static_assert(offsetof(BP_Spectator_C_ExecuteUbergraph_BP_Spectator, K2Node_InputActionEvent_Key_3) == 0x000100, "Member 'BP_Spectator_C_ExecuteUbergraph_BP_Spectator::K2Node_InputActionEvent_Key_3' has a wrong offset!");
static_assert(offsetof(BP_Spectator_C_ExecuteUbergraph_BP_Spectator, CallFunc_Array_Get_Item_2) == 0x000118, "Member 'BP_Spectator_C_ExecuteUbergraph_BP_Spectator::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_Spectator_C_ExecuteUbergraph_BP_Spectator, CallFunc_IsValid_ReturnValue_3) == 0x000120, "Member 'BP_Spectator_C_ExecuteUbergraph_BP_Spectator::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");

// Function BP_Spectator.BP_Spectator_C.OnTargetDestroyed
// 0x0008 (0x0008 - 0x0000)
struct BP_Spectator_C_OnTargetDestroyed final
{
public:
	class AActor*                                 DestroyedActor;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Spectator_C_OnTargetDestroyed) == 0x000008, "Wrong alignment on BP_Spectator_C_OnTargetDestroyed");
static_assert(sizeof(BP_Spectator_C_OnTargetDestroyed) == 0x000008, "Wrong size on BP_Spectator_C_OnTargetDestroyed");
static_assert(offsetof(BP_Spectator_C_OnTargetDestroyed, DestroyedActor) == 0x000000, "Member 'BP_Spectator_C_OnTargetDestroyed::DestroyedActor' has a wrong offset!");

// Function BP_Spectator.BP_Spectator_C.ClientPossessed
// 0x0008 (0x0008 - 0x0000)
struct BP_Spectator_C_ClientPossessed final
{
public:
	class AMP_PlayerController_C*                 PlayerController;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Spectator_C_ClientPossessed) == 0x000008, "Wrong alignment on BP_Spectator_C_ClientPossessed");
static_assert(sizeof(BP_Spectator_C_ClientPossessed) == 0x000008, "Wrong size on BP_Spectator_C_ClientPossessed");
static_assert(offsetof(BP_Spectator_C_ClientPossessed, PlayerController) == 0x000000, "Member 'BP_Spectator_C_ClientPossessed::PlayerController' has a wrong offset!");

// Function BP_Spectator.BP_Spectator_C.ReceivePossessed
// 0x0008 (0x0008 - 0x0000)
struct BP_Spectator_C_ReceivePossessed final
{
public:
	class AController*                            NewController;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Spectator_C_ReceivePossessed) == 0x000008, "Wrong alignment on BP_Spectator_C_ReceivePossessed");
static_assert(sizeof(BP_Spectator_C_ReceivePossessed) == 0x000008, "Wrong size on BP_Spectator_C_ReceivePossessed");
static_assert(offsetof(BP_Spectator_C_ReceivePossessed, NewController) == 0x000000, "Member 'BP_Spectator_C_ReceivePossessed::NewController' has a wrong offset!");

// Function BP_Spectator.BP_Spectator_C.InpAxisEvt_TurnRate_K2Node_InputAxisEvent_3
// 0x0004 (0x0004 - 0x0000)
struct BP_Spectator_C_InpAxisEvt_TurnRate_K2Node_InputAxisEvent_3 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Spectator_C_InpAxisEvt_TurnRate_K2Node_InputAxisEvent_3) == 0x000004, "Wrong alignment on BP_Spectator_C_InpAxisEvt_TurnRate_K2Node_InputAxisEvent_3");
static_assert(sizeof(BP_Spectator_C_InpAxisEvt_TurnRate_K2Node_InputAxisEvent_3) == 0x000004, "Wrong size on BP_Spectator_C_InpAxisEvt_TurnRate_K2Node_InputAxisEvent_3");
static_assert(offsetof(BP_Spectator_C_InpAxisEvt_TurnRate_K2Node_InputAxisEvent_3, AxisValue) == 0x000000, "Member 'BP_Spectator_C_InpAxisEvt_TurnRate_K2Node_InputAxisEvent_3::AxisValue' has a wrong offset!");

// Function BP_Spectator.BP_Spectator_C.InpAxisEvt_LookUpRate_K2Node_InputAxisEvent_2
// 0x0004 (0x0004 - 0x0000)
struct BP_Spectator_C_InpAxisEvt_LookUpRate_K2Node_InputAxisEvent_2 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Spectator_C_InpAxisEvt_LookUpRate_K2Node_InputAxisEvent_2) == 0x000004, "Wrong alignment on BP_Spectator_C_InpAxisEvt_LookUpRate_K2Node_InputAxisEvent_2");
static_assert(sizeof(BP_Spectator_C_InpAxisEvt_LookUpRate_K2Node_InputAxisEvent_2) == 0x000004, "Wrong size on BP_Spectator_C_InpAxisEvt_LookUpRate_K2Node_InputAxisEvent_2");
static_assert(offsetof(BP_Spectator_C_InpAxisEvt_LookUpRate_K2Node_InputAxisEvent_2, AxisValue) == 0x000000, "Member 'BP_Spectator_C_InpAxisEvt_LookUpRate_K2Node_InputAxisEvent_2::AxisValue' has a wrong offset!");

// Function BP_Spectator.BP_Spectator_C.UpdateSpectating
// 0x0010 (0x0010 - 0x0000)
struct BP_Spectator_C_UpdateSpectating final
{
public:
	class FString                                 Spectating;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Spectator_C_UpdateSpectating) == 0x000008, "Wrong alignment on BP_Spectator_C_UpdateSpectating");
static_assert(sizeof(BP_Spectator_C_UpdateSpectating) == 0x000010, "Wrong size on BP_Spectator_C_UpdateSpectating");
static_assert(offsetof(BP_Spectator_C_UpdateSpectating, Spectating) == 0x000000, "Member 'BP_Spectator_C_UpdateSpectating::Spectating' has a wrong offset!");

// Function BP_Spectator.BP_Spectator_C.InpAxisEvt_Turn_K2Node_InputAxisEvent_1
// 0x0004 (0x0004 - 0x0000)
struct BP_Spectator_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_1 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Spectator_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_1) == 0x000004, "Wrong alignment on BP_Spectator_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_1");
static_assert(sizeof(BP_Spectator_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_1) == 0x000004, "Wrong size on BP_Spectator_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_1");
static_assert(offsetof(BP_Spectator_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_1, AxisValue) == 0x000000, "Member 'BP_Spectator_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_1::AxisValue' has a wrong offset!");

// Function BP_Spectator.BP_Spectator_C.InpAxisEvt_LookUp_K2Node_InputAxisEvent_0
// 0x0004 (0x0004 - 0x0000)
struct BP_Spectator_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_0 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Spectator_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_0) == 0x000004, "Wrong alignment on BP_Spectator_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_0");
static_assert(sizeof(BP_Spectator_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_0) == 0x000004, "Wrong size on BP_Spectator_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_0");
static_assert(offsetof(BP_Spectator_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_0, AxisValue) == 0x000000, "Member 'BP_Spectator_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_0::AxisValue' has a wrong offset!");

// Function BP_Spectator.BP_Spectator_C.InpActEvt_LeanRight_K2Node_InputActionEvent_0
// 0x0018 (0x0018 - 0x0000)
struct BP_Spectator_C_InpActEvt_LeanRight_K2Node_InputActionEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_Spectator_C_InpActEvt_LeanRight_K2Node_InputActionEvent_0) == 0x000008, "Wrong alignment on BP_Spectator_C_InpActEvt_LeanRight_K2Node_InputActionEvent_0");
static_assert(sizeof(BP_Spectator_C_InpActEvt_LeanRight_K2Node_InputActionEvent_0) == 0x000018, "Wrong size on BP_Spectator_C_InpActEvt_LeanRight_K2Node_InputActionEvent_0");
static_assert(offsetof(BP_Spectator_C_InpActEvt_LeanRight_K2Node_InputActionEvent_0, Key) == 0x000000, "Member 'BP_Spectator_C_InpActEvt_LeanRight_K2Node_InputActionEvent_0::Key' has a wrong offset!");

// Function BP_Spectator.BP_Spectator_C.InpActEvt_LeanLeft_K2Node_InputActionEvent_1
// 0x0018 (0x0018 - 0x0000)
struct BP_Spectator_C_InpActEvt_LeanLeft_K2Node_InputActionEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_Spectator_C_InpActEvt_LeanLeft_K2Node_InputActionEvent_1) == 0x000008, "Wrong alignment on BP_Spectator_C_InpActEvt_LeanLeft_K2Node_InputActionEvent_1");
static_assert(sizeof(BP_Spectator_C_InpActEvt_LeanLeft_K2Node_InputActionEvent_1) == 0x000018, "Wrong size on BP_Spectator_C_InpActEvt_LeanLeft_K2Node_InputActionEvent_1");
static_assert(offsetof(BP_Spectator_C_InpActEvt_LeanLeft_K2Node_InputActionEvent_1, Key) == 0x000000, "Member 'BP_Spectator_C_InpActEvt_LeanLeft_K2Node_InputActionEvent_1::Key' has a wrong offset!");

// Function BP_Spectator.BP_Spectator_C.InpActEvt_Use_K2Node_InputActionEvent_2
// 0x0018 (0x0018 - 0x0000)
struct BP_Spectator_C_InpActEvt_Use_K2Node_InputActionEvent_2 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_Spectator_C_InpActEvt_Use_K2Node_InputActionEvent_2) == 0x000008, "Wrong alignment on BP_Spectator_C_InpActEvt_Use_K2Node_InputActionEvent_2");
static_assert(sizeof(BP_Spectator_C_InpActEvt_Use_K2Node_InputActionEvent_2) == 0x000018, "Wrong size on BP_Spectator_C_InpActEvt_Use_K2Node_InputActionEvent_2");
static_assert(offsetof(BP_Spectator_C_InpActEvt_Use_K2Node_InputActionEvent_2, Key) == 0x000000, "Member 'BP_Spectator_C_InpActEvt_Use_K2Node_InputActionEvent_2::Key' has a wrong offset!");

// Function BP_Spectator.BP_Spectator_C.InpActEvt_Secondary_K2Node_InputActionEvent_3
// 0x0018 (0x0018 - 0x0000)
struct BP_Spectator_C_InpActEvt_Secondary_K2Node_InputActionEvent_3 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_Spectator_C_InpActEvt_Secondary_K2Node_InputActionEvent_3) == 0x000008, "Wrong alignment on BP_Spectator_C_InpActEvt_Secondary_K2Node_InputActionEvent_3");
static_assert(sizeof(BP_Spectator_C_InpActEvt_Secondary_K2Node_InputActionEvent_3) == 0x000018, "Wrong size on BP_Spectator_C_InpActEvt_Secondary_K2Node_InputActionEvent_3");
static_assert(offsetof(BP_Spectator_C_InpActEvt_Secondary_K2Node_InputActionEvent_3, Key) == 0x000000, "Member 'BP_Spectator_C_InpActEvt_Secondary_K2Node_InputActionEvent_3::Key' has a wrong offset!");

// Function BP_Spectator.BP_Spectator_C.SpectatePrevious
// 0x0070 (0x0070 - 0x0000)
struct BP_Spectator_C_SpectatePrevious final
{
public:
	TDelegate<void(class AActor* DestroyedActor)> K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMP_GameState_C*                        K2Node_DynamicCast_AsMP_Game_State;                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABPCharacter_Demo_C*                    CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABPCharacter_Demo_C*                    CallFunc_Array_Get_Item_1;                         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetPlayerName_ReturnValue_1;              // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Spectator_C_SpectatePrevious) == 0x000008, "Wrong alignment on BP_Spectator_C_SpectatePrevious");
static_assert(sizeof(BP_Spectator_C_SpectatePrevious) == 0x000070, "Wrong size on BP_Spectator_C_SpectatePrevious");
static_assert(offsetof(BP_Spectator_C_SpectatePrevious, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'BP_Spectator_C_SpectatePrevious::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_Spectator_C_SpectatePrevious, Temp_int_Variable) == 0x000010, "Member 'BP_Spectator_C_SpectatePrevious::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_Spectator_C_SpectatePrevious, CallFunc_GetGameState_ReturnValue) == 0x000018, "Member 'BP_Spectator_C_SpectatePrevious::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Spectator_C_SpectatePrevious, K2Node_DynamicCast_AsMP_Game_State) == 0x000020, "Member 'BP_Spectator_C_SpectatePrevious::K2Node_DynamicCast_AsMP_Game_State' has a wrong offset!");
static_assert(offsetof(BP_Spectator_C_SpectatePrevious, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_Spectator_C_SpectatePrevious::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Spectator_C_SpectatePrevious, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000029, "Member 'BP_Spectator_C_SpectatePrevious::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Spectator_C_SpectatePrevious, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'BP_Spectator_C_SpectatePrevious::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Spectator_C_SpectatePrevious, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000030, "Member 'BP_Spectator_C_SpectatePrevious::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Spectator_C_SpectatePrevious, CallFunc_Subtract_IntInt_ReturnValue) == 0x000034, "Member 'BP_Spectator_C_SpectatePrevious::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Spectator_C_SpectatePrevious, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_Spectator_C_SpectatePrevious::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Spectator_C_SpectatePrevious, CallFunc_Array_Get_Item_1) == 0x000040, "Member 'BP_Spectator_C_SpectatePrevious::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_Spectator_C_SpectatePrevious, CallFunc_GetPlayerName_ReturnValue) == 0x000048, "Member 'BP_Spectator_C_SpectatePrevious::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Spectator_C_SpectatePrevious, CallFunc_GetPlayerName_ReturnValue_1) == 0x000058, "Member 'BP_Spectator_C_SpectatePrevious::CallFunc_GetPlayerName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Spectator_C_SpectatePrevious, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000068, "Member 'BP_Spectator_C_SpectatePrevious::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_Spectator.BP_Spectator_C.SpectateNext
// 0x0078 (0x0078 - 0x0000)
struct BP_Spectator_C_SpectateNext final
{
public:
	TDelegate<void(class AActor* DestroyedActor)> K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMP_GameState_C*                        K2Node_DynamicCast_AsMP_Game_State;                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPCharacter_Demo_C*                    CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPCharacter_Demo_C*                    CallFunc_Array_Get_Item_1;                         // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetPlayerName_ReturnValue_1;              // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Spectator_C_SpectateNext) == 0x000008, "Wrong alignment on BP_Spectator_C_SpectateNext");
static_assert(sizeof(BP_Spectator_C_SpectateNext) == 0x000078, "Wrong size on BP_Spectator_C_SpectateNext");
static_assert(offsetof(BP_Spectator_C_SpectateNext, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'BP_Spectator_C_SpectateNext::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_Spectator_C_SpectateNext, Temp_int_Variable) == 0x000010, "Member 'BP_Spectator_C_SpectateNext::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_Spectator_C_SpectateNext, CallFunc_GetGameState_ReturnValue) == 0x000018, "Member 'BP_Spectator_C_SpectateNext::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Spectator_C_SpectateNext, K2Node_DynamicCast_AsMP_Game_State) == 0x000020, "Member 'BP_Spectator_C_SpectateNext::K2Node_DynamicCast_AsMP_Game_State' has a wrong offset!");
static_assert(offsetof(BP_Spectator_C_SpectateNext, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_Spectator_C_SpectateNext::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Spectator_C_SpectateNext, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_Spectator_C_SpectateNext::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Spectator_C_SpectateNext, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_Spectator_C_SpectateNext::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Spectator_C_SpectateNext, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00003C, "Member 'BP_Spectator_C_SpectateNext::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Spectator_C_SpectateNext, CallFunc_Subtract_IntInt_ReturnValue) == 0x000040, "Member 'BP_Spectator_C_SpectateNext::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Spectator_C_SpectateNext, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000044, "Member 'BP_Spectator_C_SpectateNext::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Spectator_C_SpectateNext, CallFunc_GetPlayerName_ReturnValue) == 0x000048, "Member 'BP_Spectator_C_SpectateNext::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Spectator_C_SpectateNext, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'BP_Spectator_C_SpectateNext::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Spectator_C_SpectateNext, CallFunc_Array_Get_Item_1) == 0x000060, "Member 'BP_Spectator_C_SpectateNext::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_Spectator_C_SpectateNext, CallFunc_GetPlayerName_ReturnValue_1) == 0x000068, "Member 'BP_Spectator_C_SpectateNext::CallFunc_GetPlayerName_ReturnValue_1' has a wrong offset!");

// Function BP_Spectator.BP_Spectator_C.SpectateIndex
// 0x0050 (0x0050 - 0x0000)
struct BP_Spectator_C_SpectateIndex final
{
public:
	int32                                         SpectateIndex_0;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* DestroyedActor)> K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMP_GameState_C*                        K2Node_DynamicCast_AsMP_Game_State;                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABPCharacter_Demo_C*                    CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Spectator_C_SpectateIndex) == 0x000008, "Wrong alignment on BP_Spectator_C_SpectateIndex");
static_assert(sizeof(BP_Spectator_C_SpectateIndex) == 0x000050, "Wrong size on BP_Spectator_C_SpectateIndex");
static_assert(offsetof(BP_Spectator_C_SpectateIndex, SpectateIndex_0) == 0x000000, "Member 'BP_Spectator_C_SpectateIndex::SpectateIndex_0' has a wrong offset!");
static_assert(offsetof(BP_Spectator_C_SpectateIndex, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_Spectator_C_SpectateIndex::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_Spectator_C_SpectateIndex, CallFunc_GetGameState_ReturnValue) == 0x000018, "Member 'BP_Spectator_C_SpectateIndex::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Spectator_C_SpectateIndex, K2Node_DynamicCast_AsMP_Game_State) == 0x000020, "Member 'BP_Spectator_C_SpectateIndex::K2Node_DynamicCast_AsMP_Game_State' has a wrong offset!");
static_assert(offsetof(BP_Spectator_C_SpectateIndex, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_Spectator_C_SpectateIndex::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Spectator_C_SpectateIndex, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'BP_Spectator_C_SpectateIndex::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Spectator_C_SpectateIndex, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_Spectator_C_SpectateIndex::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Spectator_C_SpectateIndex, CallFunc_Greater_IntInt_ReturnValue) == 0x000038, "Member 'BP_Spectator_C_SpectateIndex::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Spectator_C_SpectateIndex, CallFunc_IsValid_ReturnValue) == 0x000039, "Member 'BP_Spectator_C_SpectateIndex::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Spectator_C_SpectateIndex, CallFunc_GetPlayerName_ReturnValue) == 0x000040, "Member 'BP_Spectator_C_SpectateIndex::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");

}

