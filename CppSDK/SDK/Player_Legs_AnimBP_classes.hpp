#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Player_Legs_AnimBP

#include "Basic.hpp"

#include "AnimGraphRuntime_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass Player_Legs_AnimBP.Player_Legs_AnimBP_C
// 0x13D0 (0x1690 - 0x02C0)
class UPlayer_Legs_AnimBP_C final : public UAnimInstance
{
public:
	uint8                                         Pad_2B8[0x8];                                      // 0x02B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x02C8(0x0030)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_15;                 // 0x02F8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_14;                 // 0x0320(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_13;                 // 0x0348(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_12;                 // 0x0370(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_11;                 // 0x0398(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_10;                 // 0x03C0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_9;                  // 0x03E8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0x0410(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x0438(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x0460(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x0488(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x04B0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x04D8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x0500(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0528(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0550(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_8;                    // 0x0578(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_9;                       // 0x05F8(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_7;                    // 0x0628(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_8;                       // 0x06A8(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x06D8(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_7;                       // 0x0758(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x0788(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_6;                       // 0x0808(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x0838(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x08B8(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x08E8(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x0968(0x0030)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_1;                  // 0x0998(0x00E8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x0A80(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x0AB0(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x0B30(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0B60(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x0BE0(0x0030)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x0C10(0x00E8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x0CF8(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x0D28(0x00B0)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0x0DD8(0x00A0)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x0E78(0x00C0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_1;                    // 0x0F38(0x0158)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_3;                     // 0x1090(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_2;                     // 0x10B8(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x10E0(0x0080)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x1160(0x0048)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_1;                        // 0x11A8(0x0108)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x12B0(0x0158)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x1408(0x0108)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_1;             // 0x1510(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_1;             // 0x1530(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x1550(0x0028)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x1578(0x00A0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x1618(0x0028)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x1640(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x1660(0x0020)()
	float                                         Speed;                                             // 0x1680(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Direction;                                         // 0x1684(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Crouching;                                         // 0x1688(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Jumping;                                           // 0x1689(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_Player_Legs_AnimBP(int32 EntryPoint);
	void AnimNotify_JumpEnd();
	void AnimNotify_JumpStart();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Player_Legs_AnimBP_AnimGraphNode_TransitionResult_B1F89C094126BF8C4144809D7ABB6249();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Player_Legs_AnimBP_AnimGraphNode_TransitionResult_60925A4C4B18F7B28A5522B5691D7D65();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Player_Legs_AnimBP_AnimGraphNode_TransitionResult_BD5F089C453819C28877879AF374AB81();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Player_Legs_AnimBP_AnimGraphNode_TransitionResult_914DE35F476091BA53B292AC4EE26AF1();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Player_Legs_AnimBP_AnimGraphNode_TransitionResult_6FD42B9F476E764603B3B59A931F690B();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Player_Legs_AnimBP_AnimGraphNode_TransitionResult_B148701C4EA9CDAA9CAD6595429CA86E();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Player_Legs_AnimBP_AnimGraphNode_TransitionResult_BB939D674E19F7B7B6E0DB8CA633050B();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Player_Legs_AnimBP_AnimGraphNode_BlendListByBool_DB35C5724E3F3B37A9416A966E03EA48();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Player_Legs_AnimBP_AnimGraphNode_TransitionResult_429C2C4F47475BFE9C767B8C46F9723A();
	void AnimGraph(struct FPoseLink* AnimGraph_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Player_Legs_AnimBP_C">();
	}
	static class UPlayer_Legs_AnimBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayer_Legs_AnimBP_C>();
	}
};
static_assert(alignof(UPlayer_Legs_AnimBP_C) == 0x000010, "Wrong alignment on UPlayer_Legs_AnimBP_C");
static_assert(sizeof(UPlayer_Legs_AnimBP_C) == 0x001690, "Wrong size on UPlayer_Legs_AnimBP_C");
static_assert(offsetof(UPlayer_Legs_AnimBP_C, UberGraphFrame) == 0x0002C0, "Member 'UPlayer_Legs_AnimBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UPlayer_Legs_AnimBP_C, AnimGraphNode_Root) == 0x0002C8, "Member 'UPlayer_Legs_AnimBP_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UPlayer_Legs_AnimBP_C, AnimGraphNode_TransitionResult_15) == 0x0002F8, "Member 'UPlayer_Legs_AnimBP_C::AnimGraphNode_TransitionResult_15' has a wrong offset!");
static_assert(offsetof(UPlayer_Legs_AnimBP_C, AnimGraphNode_TransitionResult_14) == 0x000320, "Member 'UPlayer_Legs_AnimBP_C::AnimGraphNode_TransitionResult_14' has a wrong offset!");
static_assert(offsetof(UPlayer_Legs_AnimBP_C, AnimGraphNode_TransitionResult_13) == 0x000348, "Member 'UPlayer_Legs_AnimBP_C::AnimGraphNode_TransitionResult_13' has a wrong offset!");
static_assert(offsetof(UPlayer_Legs_AnimBP_C, AnimGraphNode_TransitionResult_12) == 0x000370, "Member 'UPlayer_Legs_AnimBP_C::AnimGraphNode_TransitionResult_12' has a wrong offset!");
static_assert(offsetof(UPlayer_Legs_AnimBP_C, AnimGraphNode_TransitionResult_11) == 0x000398, "Member 'UPlayer_Legs_AnimBP_C::AnimGraphNode_TransitionResult_11' has a wrong offset!");
static_assert(offsetof(UPlayer_Legs_AnimBP_C, AnimGraphNode_TransitionResult_10) == 0x0003C0, "Member 'UPlayer_Legs_AnimBP_C::AnimGraphNode_TransitionResult_10' has a wrong offset!");
static_assert(offsetof(UPlayer_Legs_AnimBP_C, AnimGraphNode_TransitionResult_9) == 0x0003E8, "Member 'UPlayer_Legs_AnimBP_C::AnimGraphNode_TransitionResult_9' has a wrong offset!");
static_assert(offsetof(UPlayer_Legs_AnimBP_C, AnimGraphNode_TransitionResult_8) == 0x000410, "Member 'UPlayer_Legs_AnimBP_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(UPlayer_Legs_AnimBP_C, AnimGraphNode_TransitionResult_7) == 0x000438, "Member 'UPlayer_Legs_AnimBP_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UPlayer_Legs_AnimBP_C, AnimGraphNode_TransitionResult_6) == 0x000460, "Member 'UPlayer_Legs_AnimBP_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UPlayer_Legs_AnimBP_C, AnimGraphNode_TransitionResult_5) == 0x000488, "Member 'UPlayer_Legs_AnimBP_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UPlayer_Legs_AnimBP_C, AnimGraphNode_TransitionResult_4) == 0x0004B0, "Member 'UPlayer_Legs_AnimBP_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UPlayer_Legs_AnimBP_C, AnimGraphNode_TransitionResult_3) == 0x0004D8, "Member 'UPlayer_Legs_AnimBP_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UPlayer_Legs_AnimBP_C, AnimGraphNode_TransitionResult_2) == 0x000500, "Member 'UPlayer_Legs_AnimBP_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UPlayer_Legs_AnimBP_C, AnimGraphNode_TransitionResult_1) == 0x000528, "Member 'UPlayer_Legs_AnimBP_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UPlayer_Legs_AnimBP_C, AnimGraphNode_TransitionResult) == 0x000550, "Member 'UPlayer_Legs_AnimBP_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UPlayer_Legs_AnimBP_C, AnimGraphNode_SequencePlayer_8) == 0x000578, "Member 'UPlayer_Legs_AnimBP_C::AnimGraphNode_SequencePlayer_8' has a wrong offset!");
static_assert(offsetof(UPlayer_Legs_AnimBP_C, AnimGraphNode_StateResult_9) == 0x0005F8, "Member 'UPlayer_Legs_AnimBP_C::AnimGraphNode_StateResult_9' has a wrong offset!");
static_assert(offsetof(UPlayer_Legs_AnimBP_C, AnimGraphNode_SequencePlayer_7) == 0x000628, "Member 'UPlayer_Legs_AnimBP_C::AnimGraphNode_SequencePlayer_7' has a wrong offset!");
static_assert(offsetof(UPlayer_Legs_AnimBP_C, AnimGraphNode_StateResult_8) == 0x0006A8, "Member 'UPlayer_Legs_AnimBP_C::AnimGraphNode_StateResult_8' has a wrong offset!");
static_assert(offsetof(UPlayer_Legs_AnimBP_C, AnimGraphNode_SequencePlayer_6) == 0x0006D8, "Member 'UPlayer_Legs_AnimBP_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UPlayer_Legs_AnimBP_C, AnimGraphNode_StateResult_7) == 0x000758, "Member 'UPlayer_Legs_AnimBP_C::AnimGraphNode_StateResult_7' has a wrong offset!");
static_assert(offsetof(UPlayer_Legs_AnimBP_C, AnimGraphNode_SequencePlayer_5) == 0x000788, "Member 'UPlayer_Legs_AnimBP_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UPlayer_Legs_AnimBP_C, AnimGraphNode_StateResult_6) == 0x000808, "Member 'UPlayer_Legs_AnimBP_C::AnimGraphNode_StateResult_6' has a wrong offset!");
static_assert(offsetof(UPlayer_Legs_AnimBP_C, AnimGraphNode_SequencePlayer_4) == 0x000838, "Member 'UPlayer_Legs_AnimBP_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UPlayer_Legs_AnimBP_C, AnimGraphNode_StateResult_5) == 0x0008B8, "Member 'UPlayer_Legs_AnimBP_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UPlayer_Legs_AnimBP_C, AnimGraphNode_SequencePlayer_3) == 0x0008E8, "Member 'UPlayer_Legs_AnimBP_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UPlayer_Legs_AnimBP_C, AnimGraphNode_StateResult_4) == 0x000968, "Member 'UPlayer_Legs_AnimBP_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UPlayer_Legs_AnimBP_C, AnimGraphNode_BlendSpacePlayer_1) == 0x000998, "Member 'UPlayer_Legs_AnimBP_C::AnimGraphNode_BlendSpacePlayer_1' has a wrong offset!");
static_assert(offsetof(UPlayer_Legs_AnimBP_C, AnimGraphNode_StateResult_3) == 0x000A80, "Member 'UPlayer_Legs_AnimBP_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UPlayer_Legs_AnimBP_C, AnimGraphNode_SequencePlayer_2) == 0x000AB0, "Member 'UPlayer_Legs_AnimBP_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UPlayer_Legs_AnimBP_C, AnimGraphNode_StateResult_2) == 0x000B30, "Member 'UPlayer_Legs_AnimBP_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UPlayer_Legs_AnimBP_C, AnimGraphNode_SequencePlayer_1) == 0x000B60, "Member 'UPlayer_Legs_AnimBP_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UPlayer_Legs_AnimBP_C, AnimGraphNode_StateResult_1) == 0x000BE0, "Member 'UPlayer_Legs_AnimBP_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UPlayer_Legs_AnimBP_C, AnimGraphNode_BlendSpacePlayer) == 0x000C10, "Member 'UPlayer_Legs_AnimBP_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UPlayer_Legs_AnimBP_C, AnimGraphNode_StateResult) == 0x000CF8, "Member 'UPlayer_Legs_AnimBP_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UPlayer_Legs_AnimBP_C, AnimGraphNode_StateMachine) == 0x000D28, "Member 'UPlayer_Legs_AnimBP_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UPlayer_Legs_AnimBP_C, AnimGraphNode_BlendListByBool_1) == 0x000DD8, "Member 'UPlayer_Legs_AnimBP_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(UPlayer_Legs_AnimBP_C, AnimGraphNode_LayeredBoneBlend) == 0x000E78, "Member 'UPlayer_Legs_AnimBP_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UPlayer_Legs_AnimBP_C, AnimGraphNode_SaveCachedPose_1) == 0x000F38, "Member 'UPlayer_Legs_AnimBP_C::AnimGraphNode_SaveCachedPose_1' has a wrong offset!");
static_assert(offsetof(UPlayer_Legs_AnimBP_C, AnimGraphNode_UseCachedPose_3) == 0x001090, "Member 'UPlayer_Legs_AnimBP_C::AnimGraphNode_UseCachedPose_3' has a wrong offset!");
static_assert(offsetof(UPlayer_Legs_AnimBP_C, AnimGraphNode_UseCachedPose_2) == 0x0010B8, "Member 'UPlayer_Legs_AnimBP_C::AnimGraphNode_UseCachedPose_2' has a wrong offset!");
static_assert(offsetof(UPlayer_Legs_AnimBP_C, AnimGraphNode_SequencePlayer) == 0x0010E0, "Member 'UPlayer_Legs_AnimBP_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UPlayer_Legs_AnimBP_C, AnimGraphNode_Slot) == 0x001160, "Member 'UPlayer_Legs_AnimBP_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UPlayer_Legs_AnimBP_C, AnimGraphNode_ModifyBone_1) == 0x0011A8, "Member 'UPlayer_Legs_AnimBP_C::AnimGraphNode_ModifyBone_1' has a wrong offset!");
static_assert(offsetof(UPlayer_Legs_AnimBP_C, AnimGraphNode_SaveCachedPose) == 0x0012B0, "Member 'UPlayer_Legs_AnimBP_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UPlayer_Legs_AnimBP_C, AnimGraphNode_ModifyBone) == 0x001408, "Member 'UPlayer_Legs_AnimBP_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(UPlayer_Legs_AnimBP_C, AnimGraphNode_ComponentToLocalSpace_1) == 0x001510, "Member 'UPlayer_Legs_AnimBP_C::AnimGraphNode_ComponentToLocalSpace_1' has a wrong offset!");
static_assert(offsetof(UPlayer_Legs_AnimBP_C, AnimGraphNode_LocalToComponentSpace_1) == 0x001530, "Member 'UPlayer_Legs_AnimBP_C::AnimGraphNode_LocalToComponentSpace_1' has a wrong offset!");
static_assert(offsetof(UPlayer_Legs_AnimBP_C, AnimGraphNode_UseCachedPose_1) == 0x001550, "Member 'UPlayer_Legs_AnimBP_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UPlayer_Legs_AnimBP_C, AnimGraphNode_BlendListByBool) == 0x001578, "Member 'UPlayer_Legs_AnimBP_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UPlayer_Legs_AnimBP_C, AnimGraphNode_UseCachedPose) == 0x001618, "Member 'UPlayer_Legs_AnimBP_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UPlayer_Legs_AnimBP_C, AnimGraphNode_LocalToComponentSpace) == 0x001640, "Member 'UPlayer_Legs_AnimBP_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UPlayer_Legs_AnimBP_C, AnimGraphNode_ComponentToLocalSpace) == 0x001660, "Member 'UPlayer_Legs_AnimBP_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UPlayer_Legs_AnimBP_C, Speed) == 0x001680, "Member 'UPlayer_Legs_AnimBP_C::Speed' has a wrong offset!");
static_assert(offsetof(UPlayer_Legs_AnimBP_C, Direction) == 0x001684, "Member 'UPlayer_Legs_AnimBP_C::Direction' has a wrong offset!");
static_assert(offsetof(UPlayer_Legs_AnimBP_C, Crouching) == 0x001688, "Member 'UPlayer_Legs_AnimBP_C::Crouching' has a wrong offset!");
static_assert(offsetof(UPlayer_Legs_AnimBP_C, Jumping) == 0x001689, "Member 'UPlayer_Legs_AnimBP_C::Jumping' has a wrong offset!");

}

