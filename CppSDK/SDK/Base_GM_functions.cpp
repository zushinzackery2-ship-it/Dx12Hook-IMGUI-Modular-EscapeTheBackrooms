#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Base_GM

#include "Basic.hpp"

#include "Base_GM_classes.hpp"
#include "Base_GM_parameters.hpp"


namespace SDK
{

// Function Base_GM.Base_GM_C.ExecuteUbergraph_Base_GM
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABase_GM_C::ExecuteUbergraph_Base_GM(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Base_GM_C", "ExecuteUbergraph_Base_GM");

	Params::Base_GM_C_ExecuteUbergraph_Base_GM Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Base_GM.Base_GM_C.K2_OnLogout
// (Event, Public, BlueprintEvent)
// Parameters:
// class AController*                      ExitingController                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABase_GM_C::K2_OnLogout(class AController* ExitingController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Base_GM_C", "K2_OnLogout");

	Params::Base_GM_C_K2_OnLogout Parms{};

	Parms.ExitingController = ExitingController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Base_GM.Base_GM_C.K2_OnSwapPlayerControllers
// (Event, Protected, BlueprintEvent)
// Parameters:
// class APlayerController*                OldPC                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APlayerController*                NewPC                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABase_GM_C::K2_OnSwapPlayerControllers(class APlayerController* OldPC, class APlayerController* NewPC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Base_GM_C", "K2_OnSwapPlayerControllers");

	Params::Base_GM_C_K2_OnSwapPlayerControllers Parms{};

	Parms.OldPC = OldPC;
	Parms.NewPC = NewPC;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Base_GM.Base_GM_C.K2_PostLogin
// (Event, Public, BlueprintEvent)
// Parameters:
// class APlayerController*                NewPlayer                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABase_GM_C::K2_PostLogin(class APlayerController* NewPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Base_GM_C", "K2_PostLogin");

	Params::Base_GM_C_K2_PostLogin Parms{};

	Parms.NewPlayer = NewPlayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Base_GM.Base_GM_C.ServerTravel_ToGameplayMap
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Map                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABase_GM_C::ServerTravel_ToGameplayMap(class FName Map)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Base_GM_C", "ServerTravel_ToGameplayMap");

	Params::Base_GM_C_ServerTravel_ToGameplayMap Parms{};

	Parms.Map = Map;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Base_GM.Base_GM_C.Handle_PlayerConnection
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                NewPlayer                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABase_GM_C::Handle_PlayerConnection(class APlayerController* NewPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Base_GM_C", "Handle_PlayerConnection");

	Params::Base_GM_C_Handle_PlayerConnection Parms{};

	Parms.NewPlayer = NewPlayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Base_GM.Base_GM_C.Handle Player Disconnection
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AController*                      Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABase_GM_C::Handle_Player_Disconnection(class AController* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Base_GM_C", "Handle Player Disconnection");

	Params::Base_GM_C_Handle_Player_Disconnection Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Base_GM.Base_GM_C.KickPlayer
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerId                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABase_GM_C::KickPlayer(int32 PlayerId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Base_GM_C", "KickPlayer");

	Params::Base_GM_C_KickPlayer Parms{};

	Parms.PlayerId = PlayerId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Base_GM.Base_GM_C.GetPlayerControllerFromPlayerState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerState*                     PlayerState                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_BasePlayerController_C**      PlayerController                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABase_GM_C::GetPlayerControllerFromPlayerState(class APlayerState* PlayerState, class ABP_BasePlayerController_C** PlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Base_GM_C", "GetPlayerControllerFromPlayerState");

	Params::Base_GM_C_GetPlayerControllerFromPlayerState Parms{};

	Parms.PlayerState = PlayerState;

	UObject::ProcessEvent(Func, &Parms);

	if (PlayerController != nullptr)
		*PlayerController = Parms.PlayerController;
}

}

