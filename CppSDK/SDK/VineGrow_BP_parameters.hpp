#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VineGrow_BP

#include "Basic.hpp"

#include "S_VineSpline_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function VineGrow_BP.VineGrow_BP_C.ExecuteUbergraph_VineGrow_BP
// 0x0240 (0x0240 - 0x0000)
struct VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_VineSpline                          CallFunc_Array_Get_Item;                           // 0x0050(0x0018)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72[0x6];                                       // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USplineMeshComponent*                   CallFunc_Array_Get_Item_1;                         // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue; // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue; // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue_1; // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTangentAtDistanceAlongSpline_ReturnValue; // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetTangentAtDistanceAlongSpline_ReturnValue_1; // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue_1; // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Max_Number_Of_Segments_Segments;      // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Max_Number_Of_Segments_Segments_1;    // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Max_Number_Of_Segments_Segments_2;    // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_VineSpline                          CallFunc_Array_Get_Item_2;                         // 0x00F8(0x0018)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_115[0x3];                                      // 0x0115(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_5;                  // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0125(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_126[0x2];                                      // 0x0126(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_1;                           // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12D[0x3];                                      // 0x012D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USplineMeshComponent*                   CallFunc_Array_Get_Item_3;                         // 0x0130(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_2;                           // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13A[0x2];                                      // 0x013A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_VineSpline                          CallFunc_Array_Get_Item_4;                         // 0x0148(0x0018)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_165[0x3];                                      // 0x0165(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USplineMeshComponent*                   CallFunc_Array_Get_Item_5;                         // 0x0168(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Max_Number_Of_Segments_Segments_3;    // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_179[0x3];                                      // 0x0179(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_181[0x3];                                      // 0x0181(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue_1;                  // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_189[0x3];                                      // 0x0189(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_3;                           // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_191[0x3];                                      // 0x0191(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_5;                   // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_VineSpline                          CallFunc_Array_Get_Item_6;                         // 0x0198(0x0018)(ContainsInstancedReference, HasGetValueTypeHash)
	class USplineMeshComponent*                   CallFunc_Array_Get_Item_7;                         // 0x01B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_6;                // 0x01BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1BD[0x3];                                      // 0x01BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetStartTangent_ReturnValue;              // 0x01C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetStartPosition_ReturnValue;             // 0x01CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlayAnimMontage_ReturnValue;              // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DC[0x4];                                      // 0x01DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x01E0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0210(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x021C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0228(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_234[0x4];                                      // 0x0234(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x0238(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP) == 0x000010, "Wrong alignment on VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP");
static_assert(sizeof(VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP) == 0x000240, "Wrong size on VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP");
static_assert(offsetof(VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP, EntryPoint) == 0x000000, "Member 'VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP, Temp_bool_Variable) == 0x000004, "Member 'VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP, Temp_bool_Variable_1) == 0x000005, "Member 'VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP, Temp_bool_Variable_2) == 0x000006, "Member 'VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP, Temp_bool_Variable_3) == 0x000007, "Member 'VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP, Temp_int_Array_Index_Variable) == 0x000008, "Member 'VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP, Temp_int_Array_Index_Variable_1) == 0x000014, "Member 'VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP, Temp_int_Loop_Counter_Variable_1) == 0x000018, "Member 'VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP, CallFunc_Add_IntInt_ReturnValue_1) == 0x00001C, "Member 'VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP, Temp_int_Loop_Counter_Variable_2) == 0x000020, "Member 'VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP, CallFunc_Add_IntInt_ReturnValue_2) == 0x000024, "Member 'VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP, Temp_int_Array_Index_Variable_2) == 0x000028, "Member 'VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP, Temp_bool_Variable_4) == 0x00002C, "Member 'VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP, Temp_int_Loop_Counter_Variable_3) == 0x000030, "Member 'VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP, Temp_int_Array_Index_Variable_3) == 0x000034, "Member 'VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP, CallFunc_Add_IntInt_ReturnValue_3) == 0x000038, "Member 'VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP, Temp_int_Loop_Counter_Variable_4) == 0x00003C, "Member 'VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP, CallFunc_Add_IntInt_ReturnValue_4) == 0x000040, "Member 'VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP, Temp_int_Array_Index_Variable_4) == 0x000044, "Member 'VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP, CallFunc_Array_Get_Item) == 0x000050, "Member 'VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP, CallFunc_Less_IntInt_ReturnValue) == 0x000068, "Member 'VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP, CallFunc_Array_Length_ReturnValue_1) == 0x00006C, "Member 'VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP, Temp_bool_Variable_5) == 0x000070, "Member 'VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP, CallFunc_Less_IntInt_ReturnValue_1) == 0x000071, "Member 'VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP, CallFunc_Array_Get_Item_1) == 0x000078, "Member 'VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP, CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue) == 0x000080, "Member 'VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP::CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP, CallFunc_Add_IntInt_ReturnValue_5) == 0x000084, "Member 'VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP, CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue) == 0x000088, "Member 'VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP::CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP, CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue_1) == 0x000094, "Member 'VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP::CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP, CallFunc_GetTangentAtDistanceAlongSpline_ReturnValue) == 0x000098, "Member 'VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP::CallFunc_GetTangentAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP, CallFunc_Lerp_ReturnValue) == 0x0000A4, "Member 'VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0000A8, "Member 'VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP, CallFunc_GetTangentAtDistanceAlongSpline_ReturnValue_1) == 0x0000AC, "Member 'VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP::CallFunc_GetTangentAtDistanceAlongSpline_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP, CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue_1) == 0x0000B8, "Member 'VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP::CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP, K2Node_Event_DeltaSeconds) == 0x0000C4, "Member 'VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000C8, "Member 'VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0000CC, "Member 'VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000D0, "Member 'VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP, CallFunc_Get_Max_Number_Of_Segments_Segments) == 0x0000D4, "Member 'VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP::CallFunc_Get_Max_Number_Of_Segments_Segments' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP, CallFunc_Get_Max_Number_Of_Segments_Segments_1) == 0x0000D8, "Member 'VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP::CallFunc_Get_Max_Number_Of_Segments_Segments_1' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP, CallFunc_Conv_IntToFloat_ReturnValue) == 0x0000DC, "Member 'VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x0000E0, "Member 'VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x0000E4, "Member 'VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x0000E8, "Member 'VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP, CallFunc_Get_Max_Number_Of_Segments_Segments_2) == 0x0000EC, "Member 'VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP::CallFunc_Get_Max_Number_Of_Segments_Segments_2' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP, CallFunc_SelectFloat_ReturnValue) == 0x0000F0, "Member 'VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP, CallFunc_Array_Get_Item_2) == 0x0000F8, "Member 'VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP, CallFunc_Array_Length_ReturnValue_2) == 0x000110, "Member 'VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP, CallFunc_Less_IntInt_ReturnValue_2) == 0x000114, "Member 'VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP, Temp_int_Loop_Counter_Variable_5) == 0x000118, "Member 'VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP::Temp_int_Loop_Counter_Variable_5' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP, CallFunc_Add_IntInt_ReturnValue_6) == 0x00011C, "Member 'VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP, CallFunc_Subtract_IntInt_ReturnValue) == 0x000120, "Member 'VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP, K2Node_Select_Default) == 0x000124, "Member 'VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP, CallFunc_Greater_IntInt_ReturnValue) == 0x000125, "Member 'VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP, K2Node_Select_Default_1) == 0x000128, "Member 'VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP, CallFunc_Less_IntInt_ReturnValue_3) == 0x00012C, "Member 'VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP, CallFunc_Array_Get_Item_3) == 0x000130, "Member 'VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP, K2Node_Select_Default_2) == 0x000138, "Member 'VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x000139, "Member 'VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP, CallFunc_SelectFloat_ReturnValue_1) == 0x00013C, "Member 'VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP, CallFunc_Not_PreBool_ReturnValue) == 0x000140, "Member 'VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP, CallFunc_Array_Get_Item_4) == 0x000148, "Member 'VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP, CallFunc_Array_Length_ReturnValue_3) == 0x000160, "Member 'VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP, CallFunc_Less_IntInt_ReturnValue_4) == 0x000164, "Member 'VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP, CallFunc_Array_Get_Item_5) == 0x000168, "Member 'VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP, CallFunc_Array_Length_ReturnValue_4) == 0x000170, "Member 'VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP, CallFunc_Get_Max_Number_Of_Segments_Segments_3) == 0x000174, "Member 'VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP::CallFunc_Get_Max_Number_Of_Segments_Segments_3' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP, CallFunc_Less_IntInt_ReturnValue_5) == 0x000178, "Member 'VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP, CallFunc_SelectInt_ReturnValue) == 0x00017C, "Member 'VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000180, "Member 'VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP, CallFunc_SelectInt_ReturnValue_1) == 0x000184, "Member 'VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP::CallFunc_SelectInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000188, "Member 'VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP, CallFunc_Add_IntInt_ReturnValue_7) == 0x00018C, "Member 'VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP, K2Node_Select_Default_3) == 0x000190, "Member 'VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP, Temp_int_Array_Index_Variable_5) == 0x000194, "Member 'VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP::Temp_int_Array_Index_Variable_5' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP, CallFunc_Array_Get_Item_6) == 0x000198, "Member 'VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP, CallFunc_Array_Get_Item_7) == 0x0001B0, "Member 'VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP::CallFunc_Array_Get_Item_7' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP, CallFunc_Array_Length_ReturnValue_5) == 0x0001B8, "Member 'VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP, CallFunc_Less_IntInt_ReturnValue_6) == 0x0001BC, "Member 'VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP::CallFunc_Less_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP, CallFunc_GetStartTangent_ReturnValue) == 0x0001C0, "Member 'VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP::CallFunc_GetStartTangent_ReturnValue' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP, CallFunc_GetStartPosition_ReturnValue) == 0x0001CC, "Member 'VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP::CallFunc_GetStartPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP, CallFunc_PlayAnimMontage_ReturnValue) == 0x0001D8, "Member 'VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP::CallFunc_PlayAnimMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x0001E0, "Member 'VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP, CallFunc_BreakTransform_Location) == 0x000210, "Member 'VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP, CallFunc_BreakTransform_Rotation) == 0x00021C, "Member 'VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP, CallFunc_BreakTransform_Scale) == 0x000228, "Member 'VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x000238, "Member 'VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");

// Function VineGrow_BP.VineGrow_BP_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct VineGrow_BP_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VineGrow_BP_C_ReceiveTick) == 0x000004, "Wrong alignment on VineGrow_BP_C_ReceiveTick");
static_assert(sizeof(VineGrow_BP_C_ReceiveTick) == 0x000004, "Wrong size on VineGrow_BP_C_ReceiveTick");
static_assert(offsetof(VineGrow_BP_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'VineGrow_BP_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function VineGrow_BP.VineGrow_BP_C.UserConstructionScript
// 0x0130 (0x0130 - 0x0000)
struct VineGrow_BP_C_UserConstructionScript final
{
public:
	TArray<class USplineMeshComponent*>           CurrentSplineMeshes;                               // 0x0000(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	class USplineComponent*                       CurrentSpline;                                     // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_VineSpline                          K2Node_MakeStruct_S_VineSpline;                    // 0x0030(0x0018)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USplineMeshComponent*>           CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0050(0x0010)(ReferenceParm, ContainsInstancedReference)
	class USplineMeshComponent*                   CallFunc_Array_Get_Item;                           // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAndTangentAtSplinePoint_Location; // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAndTangentAtSplinePoint_Tangent; // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAndTangentAtSplinePoint_Location_1; // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAndTangentAtSplinePoint_Tangent_1; // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Temp_struct_Variable;                              // 0x00A0(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USplineMeshComponent*                   CallFunc_AddComponent_ReturnValue;                 // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E5[0x3];                                       // 0x00E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_ED[0x3];                                       // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USplineComponent*>               K2Node_MakeArray_Array;                            // 0x00F8(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USplineComponent*                       CallFunc_Array_Get_Item_1;                         // 0x0110(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_119[0x3];                                      // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue;      // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VineGrow_BP_C_UserConstructionScript) == 0x000010, "Wrong alignment on VineGrow_BP_C_UserConstructionScript");
static_assert(sizeof(VineGrow_BP_C_UserConstructionScript) == 0x000130, "Wrong size on VineGrow_BP_C_UserConstructionScript");
static_assert(offsetof(VineGrow_BP_C_UserConstructionScript, CurrentSplineMeshes) == 0x000000, "Member 'VineGrow_BP_C_UserConstructionScript::CurrentSplineMeshes' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_UserConstructionScript, CurrentSpline) == 0x000010, "Member 'VineGrow_BP_C_UserConstructionScript::CurrentSpline' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_UserConstructionScript, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'VineGrow_BP_C_UserConstructionScript::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_UserConstructionScript, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'VineGrow_BP_C_UserConstructionScript::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_UserConstructionScript, Temp_int_Array_Index_Variable) == 0x000020, "Member 'VineGrow_BP_C_UserConstructionScript::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_UserConstructionScript, Temp_int_Variable) == 0x000024, "Member 'VineGrow_BP_C_UserConstructionScript::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_UserConstructionScript, CallFunc_Add_IntInt_ReturnValue_1) == 0x000028, "Member 'VineGrow_BP_C_UserConstructionScript::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_UserConstructionScript, CallFunc_Add_IntInt_ReturnValue_2) == 0x00002C, "Member 'VineGrow_BP_C_UserConstructionScript::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_UserConstructionScript, K2Node_MakeStruct_S_VineSpline) == 0x000030, "Member 'VineGrow_BP_C_UserConstructionScript::K2Node_MakeStruct_S_VineSpline' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_UserConstructionScript, Temp_int_Array_Index_Variable_1) == 0x000048, "Member 'VineGrow_BP_C_UserConstructionScript::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_UserConstructionScript, CallFunc_Array_Add_ReturnValue) == 0x00004C, "Member 'VineGrow_BP_C_UserConstructionScript::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_UserConstructionScript, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000050, "Member 'VineGrow_BP_C_UserConstructionScript::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_UserConstructionScript, CallFunc_Array_Get_Item) == 0x000060, "Member 'VineGrow_BP_C_UserConstructionScript::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_UserConstructionScript, CallFunc_GetLocationAndTangentAtSplinePoint_Location) == 0x000068, "Member 'VineGrow_BP_C_UserConstructionScript::CallFunc_GetLocationAndTangentAtSplinePoint_Location' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_UserConstructionScript, CallFunc_GetLocationAndTangentAtSplinePoint_Tangent) == 0x000074, "Member 'VineGrow_BP_C_UserConstructionScript::CallFunc_GetLocationAndTangentAtSplinePoint_Tangent' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_UserConstructionScript, CallFunc_GetLocationAndTangentAtSplinePoint_Location_1) == 0x000080, "Member 'VineGrow_BP_C_UserConstructionScript::CallFunc_GetLocationAndTangentAtSplinePoint_Location_1' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_UserConstructionScript, CallFunc_GetLocationAndTangentAtSplinePoint_Tangent_1) == 0x00008C, "Member 'VineGrow_BP_C_UserConstructionScript::CallFunc_GetLocationAndTangentAtSplinePoint_Tangent_1' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_UserConstructionScript, CallFunc_Array_Length_ReturnValue) == 0x000098, "Member 'VineGrow_BP_C_UserConstructionScript::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_UserConstructionScript, Temp_struct_Variable) == 0x0000A0, "Member 'VineGrow_BP_C_UserConstructionScript::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_UserConstructionScript, CallFunc_GetMaterial_ReturnValue) == 0x0000D0, "Member 'VineGrow_BP_C_UserConstructionScript::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_UserConstructionScript, CallFunc_AddComponent_ReturnValue) == 0x0000D8, "Member 'VineGrow_BP_C_UserConstructionScript::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_UserConstructionScript, Temp_int_Loop_Counter_Variable_1) == 0x0000E0, "Member 'VineGrow_BP_C_UserConstructionScript::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_UserConstructionScript, CallFunc_Less_IntInt_ReturnValue) == 0x0000E4, "Member 'VineGrow_BP_C_UserConstructionScript::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_UserConstructionScript, CallFunc_Add_IntInt_ReturnValue_3) == 0x0000E8, "Member 'VineGrow_BP_C_UserConstructionScript::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_UserConstructionScript, CallFunc_SetStaticMesh_ReturnValue) == 0x0000EC, "Member 'VineGrow_BP_C_UserConstructionScript::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_UserConstructionScript, CallFunc_Array_Add_ReturnValue_1) == 0x0000F0, "Member 'VineGrow_BP_C_UserConstructionScript::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_UserConstructionScript, K2Node_MakeArray_Array) == 0x0000F8, "Member 'VineGrow_BP_C_UserConstructionScript::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_UserConstructionScript, CallFunc_Array_Length_ReturnValue_1) == 0x000108, "Member 'VineGrow_BP_C_UserConstructionScript::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_UserConstructionScript, CallFunc_Array_Get_Item_1) == 0x000110, "Member 'VineGrow_BP_C_UserConstructionScript::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_UserConstructionScript, CallFunc_Less_IntInt_ReturnValue_1) == 0x000118, "Member 'VineGrow_BP_C_UserConstructionScript::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_UserConstructionScript, CallFunc_GetNumberOfSplinePoints_ReturnValue) == 0x00011C, "Member 'VineGrow_BP_C_UserConstructionScript::CallFunc_GetNumberOfSplinePoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_UserConstructionScript, CallFunc_Subtract_IntInt_ReturnValue) == 0x000120, "Member 'VineGrow_BP_C_UserConstructionScript::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_UserConstructionScript, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000124, "Member 'VineGrow_BP_C_UserConstructionScript::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function VineGrow_BP.VineGrow_BP_C.Get Max Number Of Segments
// 0x0040 (0x0040 - 0x0000)
struct VineGrow_BP_C_Get_Max_Number_Of_Segments final
{
public:
	int32                                         Segments;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxSplineSegments;                                 // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_VineSpline                          CallFunc_Array_Get_Item;                           // 0x0018(0x0018)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VineGrow_BP_C_Get_Max_Number_Of_Segments) == 0x000008, "Wrong alignment on VineGrow_BP_C_Get_Max_Number_Of_Segments");
static_assert(sizeof(VineGrow_BP_C_Get_Max_Number_Of_Segments) == 0x000040, "Wrong size on VineGrow_BP_C_Get_Max_Number_Of_Segments");
static_assert(offsetof(VineGrow_BP_C_Get_Max_Number_Of_Segments, Segments) == 0x000000, "Member 'VineGrow_BP_C_Get_Max_Number_Of_Segments::Segments' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_Get_Max_Number_Of_Segments, MaxSplineSegments) == 0x000004, "Member 'VineGrow_BP_C_Get_Max_Number_Of_Segments::MaxSplineSegments' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_Get_Max_Number_Of_Segments, Temp_int_Array_Index_Variable) == 0x000008, "Member 'VineGrow_BP_C_Get_Max_Number_Of_Segments::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_Get_Max_Number_Of_Segments, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'VineGrow_BP_C_Get_Max_Number_Of_Segments::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_Get_Max_Number_Of_Segments, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'VineGrow_BP_C_Get_Max_Number_Of_Segments::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_Get_Max_Number_Of_Segments, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'VineGrow_BP_C_Get_Max_Number_Of_Segments::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_Get_Max_Number_Of_Segments, CallFunc_Array_Get_Item) == 0x000018, "Member 'VineGrow_BP_C_Get_Max_Number_Of_Segments::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_Get_Max_Number_Of_Segments, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'VineGrow_BP_C_Get_Max_Number_Of_Segments::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_Get_Max_Number_Of_Segments, CallFunc_Array_Length_ReturnValue_1) == 0x000034, "Member 'VineGrow_BP_C_Get_Max_Number_Of_Segments::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VineGrow_BP_C_Get_Max_Number_Of_Segments, CallFunc_Greater_IntInt_ReturnValue) == 0x000038, "Member 'VineGrow_BP_C_Get_Max_Number_Of_Segments::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

}

