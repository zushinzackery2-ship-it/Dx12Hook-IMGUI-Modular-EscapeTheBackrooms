#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Map_Selection

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_Map_Selection.W_Map_Selection_C
// 0x00B8 (0x0318 - 0x0260)
class UW_Map_Selection_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBorder*                                Border;                                            // 0x0268(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                Button_68;                                         // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_395;                                         // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Level_Image;                                       // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             LevelName;                                         // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              ScaleBox_176;                                      // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_642;                                       // 0x0298(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock;                                         // 0x02A0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   Level_Name;                                        // 0x02A8(0x0018)(Edit, BlueprintVisible)
	float                                         Time;                                              // 0x02C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsUnlocked;                                        // 0x02C4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C5[0x3];                                      // 0x02C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Image;                                             // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   MapName;                                           // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              OnHovered;                                         // 0x02D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              OnUnhovered;                                       // 0x02E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class FText                                   MapTooltip;                                        // 0x02F8(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	class UW_MainMenu_C*                          MainMenu_Ref;                                      // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_W_Map_Selection(int32 EntryPoint);
	void UpdateLevelName();
	void Construct();
	void BndEvt__W_Map_Selection_Button_68_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__W_Map_Selection_Button_68_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__W_Map_Selection_Button_68_K2Node_ComponentBoundEvent_2_OnButtonHoverEvent__DelegateSignature();
	class FText GetTime();
	struct FSlateBrush GetImage();
	ESlateVisibility GetLockVisibility();
	ESlateVisibility Is_Time_Visible();
	void RoundedTime(class FString* Time_0);
	void GetRoundedTime(float* Rounded);
	void GetImageSize(struct FVector2D* Size);
	class FText Get_Level_Name();
	void Generate_Encrypted_Name(const class FText& Level, class FString* Name_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_Map_Selection_C">();
	}
	static class UW_Map_Selection_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_Map_Selection_C>();
	}
};
static_assert(alignof(UW_Map_Selection_C) == 0x000008, "Wrong alignment on UW_Map_Selection_C");
static_assert(sizeof(UW_Map_Selection_C) == 0x000318, "Wrong size on UW_Map_Selection_C");
static_assert(offsetof(UW_Map_Selection_C, UberGraphFrame) == 0x000260, "Member 'UW_Map_Selection_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_Map_Selection_C, Border) == 0x000268, "Member 'UW_Map_Selection_C::Border' has a wrong offset!");
static_assert(offsetof(UW_Map_Selection_C, Button_68) == 0x000270, "Member 'UW_Map_Selection_C::Button_68' has a wrong offset!");
static_assert(offsetof(UW_Map_Selection_C, Image_395) == 0x000278, "Member 'UW_Map_Selection_C::Image_395' has a wrong offset!");
static_assert(offsetof(UW_Map_Selection_C, Level_Image) == 0x000280, "Member 'UW_Map_Selection_C::Level_Image' has a wrong offset!");
static_assert(offsetof(UW_Map_Selection_C, LevelName) == 0x000288, "Member 'UW_Map_Selection_C::LevelName' has a wrong offset!");
static_assert(offsetof(UW_Map_Selection_C, ScaleBox_176) == 0x000290, "Member 'UW_Map_Selection_C::ScaleBox_176' has a wrong offset!");
static_assert(offsetof(UW_Map_Selection_C, SizeBox_642) == 0x000298, "Member 'UW_Map_Selection_C::SizeBox_642' has a wrong offset!");
static_assert(offsetof(UW_Map_Selection_C, TextBlock) == 0x0002A0, "Member 'UW_Map_Selection_C::TextBlock' has a wrong offset!");
static_assert(offsetof(UW_Map_Selection_C, Level_Name) == 0x0002A8, "Member 'UW_Map_Selection_C::Level_Name' has a wrong offset!");
static_assert(offsetof(UW_Map_Selection_C, Time) == 0x0002C0, "Member 'UW_Map_Selection_C::Time' has a wrong offset!");
static_assert(offsetof(UW_Map_Selection_C, IsUnlocked) == 0x0002C4, "Member 'UW_Map_Selection_C::IsUnlocked' has a wrong offset!");
static_assert(offsetof(UW_Map_Selection_C, Image) == 0x0002C8, "Member 'UW_Map_Selection_C::Image' has a wrong offset!");
static_assert(offsetof(UW_Map_Selection_C, MapName) == 0x0002D0, "Member 'UW_Map_Selection_C::MapName' has a wrong offset!");
static_assert(offsetof(UW_Map_Selection_C, OnHovered) == 0x0002D8, "Member 'UW_Map_Selection_C::OnHovered' has a wrong offset!");
static_assert(offsetof(UW_Map_Selection_C, OnUnhovered) == 0x0002E8, "Member 'UW_Map_Selection_C::OnUnhovered' has a wrong offset!");
static_assert(offsetof(UW_Map_Selection_C, MapTooltip) == 0x0002F8, "Member 'UW_Map_Selection_C::MapTooltip' has a wrong offset!");
static_assert(offsetof(UW_Map_Selection_C, MainMenu_Ref) == 0x000310, "Member 'UW_Map_Selection_C::MainMenu_Ref' has a wrong offset!");

}

