#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: InteractWithGrass_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "GrassInteractionType_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass InteractWithGrass_BP.InteractWithGrass_BP_C
// 0x0140 (0x0340 - 0x0200)
class UInteractWithGrass_BP_C : public USceneComponent
{
public:
	uint8                                         Pad_1F8[0x8];                                      // 0x01F8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0200(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	bool                                          useDisplacementInteraction;                        // 0x0208(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	EGrassInteractionType                         howToInteract;                                     // 0x0209(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20A[0x2];                                      // 0x020A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         checkRadius;                                       // 0x020C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         checkInterval;                                     // 0x0210(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         interactionCullDistance;                           // 0x0214(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          alwaysSimulate;                                    // 0x0218(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_219[0x3];                                      // 0x0219(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         trample_BendAngle;                                 // 0x021C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         trample_Z_Scale;                                   // 0x0220(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         trample_BendDuration;                              // 0x0224(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InstanceIndex;                                     // 0x0228(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	uint8                                         Pad_22C[0x4];                                      // 0x022C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AInteractiveGrassManager_BP_C*          grassManager;                                      // 0x0230(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	class UINTERACTIVE_FoliageComp_BP_C*          InteractiveFoliageComp;                            // 0x0238(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	bool                                          hasAssignedInteractionChannel;                     // 0x0240(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay)
	uint8                                         Pad_241[0x3];                                      // 0x0241(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         takenInteractionChannel;                           // 0x0244(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	class FName                                   interactionLocationChannelName;                    // 0x0248(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	class FName                                   interactionRadiusChannelName;                      // 0x0250(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	class FName                                   interactionStrengthChannelName;                    // 0x0258(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	bool                                          useMaterialInteraction;                            // 0x0260(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_261[0x3];                                      // 0x0261(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         materialEffectRadius;                              // 0x0264(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         materialEffectStrength;                            // 0x0268(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         matInteractionCullDistance;                        // 0x026C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           timer_UpdateMatInterParam;                         // 0x0270(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	bool                                          isForPrioritizedActor;                             // 0x0278(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          trample_IgnoreFoliageTypeWeights;                  // 0x0279(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_27A[0x6];                                      // 0x027A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           timer_CheckNearbyGrass;                            // 0x0280(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	float                                         BendAwayStrength;                                  // 0x0288(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BendAwayZ_Offset;                                  // 0x028C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BendAwayDuration;                                  // 0x0290(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BendAway_IgnoreFoliageTypeWeights;                 // 0x0294(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_295[0x3];                                      // 0x0295(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         calculatedTrampleBendAngle;                        // 0x0298(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	float                                         calculatedTrample_Z_Scale;                         // 0x029C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	float                                         calculatedTrampleBendDuration;                     // 0x02A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	bool                                          isUsingDispInteraction;                            // 0x02A4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay)
	uint8                                         Pad_2A5[0x3];                                      // 0x02A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AInteractiveFoliageChunk_BP_C*>  nearInterFoliageChunks;                            // 0x02A8(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance, AdvancedDisplay)
	struct FVector                                previousCheckedLocation;                           // 0x02B8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	uint8                                         Pad_2C4[0x4];                                      // 0x02C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AInteractiveFoliageChunk_BP_C*>  chunksToDeactivate;                                // 0x02C8(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance, AdvancedDisplay)
	bool                                          skipVelocityCheck;                                 // 0x02D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D9[0x7];                                      // 0x02D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 detectedInstances;                                 // 0x02E0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, AdvancedDisplay)
	struct FTimerHandle                           timer_UpdateMatInterParam_MainActor;               // 0x02F0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	struct FTimerHandle                           timer_DetectNearbyComponents;                      // 0x02F8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	struct FTimerHandle                           timer_CheckIfComponentsStillNear;                  // 0x0300(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	bool                                          componentTurnedOFF;                                // 0x0308(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay)
	bool                                          startTurnedOFF;                                    // 0x0309(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          useMaxDistanceFromInstance;                        // 0x030A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30B[0x1];                                      // 0x030B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         maxDistanceFromInstance;                           // 0x030C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentIndex;                                      // 0x0310(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LastIndex;                                         // 0x0314(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UINTERACTIVE_FoliageComp_BP_C*          start_Component;                                   // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Vector;                                            // 0x0320(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                newPrevOffset;                                     // 0x032C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StartTime;                                         // 0x0338(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StartUnDeformSpeed;                                // 0x033C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_InteractWithGrass_BP(int32 EntryPoint);
	void Start_Interacting();
	void TurnON();
	void TurnOFF();
	void DetectNearbyComponents();
	void CheckIfComponentsStillNear();
	void CheckIfShouldTurn_OFF_DispInteraction();
	void CheckIfShouldTurn_ON_DispInteraction();
	void UpdateMatInterParamForMainActor();
	void UpdateMatInteractionParam();
	void CheckIfShould_DISABLE_MatInteraction();
	void CheckIfShould_ENABLE_MatInteraction();
	void OnOwnerDestroyed(class AActor* DestroyedActor);
	void FreeUpInteractionChannel();
	void CheckNearbyGrass();
	void ReceiveBeginPlay();
	void IsInDistanceToViewTarget(float InDistance, bool* isInDistance, float* currentDistance);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"InteractWithGrass_BP_C">();
	}
	static class UInteractWithGrass_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UInteractWithGrass_BP_C>();
	}
};
static_assert(alignof(UInteractWithGrass_BP_C) == 0x000010, "Wrong alignment on UInteractWithGrass_BP_C");
static_assert(sizeof(UInteractWithGrass_BP_C) == 0x000340, "Wrong size on UInteractWithGrass_BP_C");
static_assert(offsetof(UInteractWithGrass_BP_C, UberGraphFrame) == 0x000200, "Member 'UInteractWithGrass_BP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UInteractWithGrass_BP_C, useDisplacementInteraction) == 0x000208, "Member 'UInteractWithGrass_BP_C::useDisplacementInteraction' has a wrong offset!");
static_assert(offsetof(UInteractWithGrass_BP_C, howToInteract) == 0x000209, "Member 'UInteractWithGrass_BP_C::howToInteract' has a wrong offset!");
static_assert(offsetof(UInteractWithGrass_BP_C, checkRadius) == 0x00020C, "Member 'UInteractWithGrass_BP_C::checkRadius' has a wrong offset!");
static_assert(offsetof(UInteractWithGrass_BP_C, checkInterval) == 0x000210, "Member 'UInteractWithGrass_BP_C::checkInterval' has a wrong offset!");
static_assert(offsetof(UInteractWithGrass_BP_C, interactionCullDistance) == 0x000214, "Member 'UInteractWithGrass_BP_C::interactionCullDistance' has a wrong offset!");
static_assert(offsetof(UInteractWithGrass_BP_C, alwaysSimulate) == 0x000218, "Member 'UInteractWithGrass_BP_C::alwaysSimulate' has a wrong offset!");
static_assert(offsetof(UInteractWithGrass_BP_C, trample_BendAngle) == 0x00021C, "Member 'UInteractWithGrass_BP_C::trample_BendAngle' has a wrong offset!");
static_assert(offsetof(UInteractWithGrass_BP_C, trample_Z_Scale) == 0x000220, "Member 'UInteractWithGrass_BP_C::trample_Z_Scale' has a wrong offset!");
static_assert(offsetof(UInteractWithGrass_BP_C, trample_BendDuration) == 0x000224, "Member 'UInteractWithGrass_BP_C::trample_BendDuration' has a wrong offset!");
static_assert(offsetof(UInteractWithGrass_BP_C, InstanceIndex) == 0x000228, "Member 'UInteractWithGrass_BP_C::InstanceIndex' has a wrong offset!");
static_assert(offsetof(UInteractWithGrass_BP_C, grassManager) == 0x000230, "Member 'UInteractWithGrass_BP_C::grassManager' has a wrong offset!");
static_assert(offsetof(UInteractWithGrass_BP_C, InteractiveFoliageComp) == 0x000238, "Member 'UInteractWithGrass_BP_C::InteractiveFoliageComp' has a wrong offset!");
static_assert(offsetof(UInteractWithGrass_BP_C, hasAssignedInteractionChannel) == 0x000240, "Member 'UInteractWithGrass_BP_C::hasAssignedInteractionChannel' has a wrong offset!");
static_assert(offsetof(UInteractWithGrass_BP_C, takenInteractionChannel) == 0x000244, "Member 'UInteractWithGrass_BP_C::takenInteractionChannel' has a wrong offset!");
static_assert(offsetof(UInteractWithGrass_BP_C, interactionLocationChannelName) == 0x000248, "Member 'UInteractWithGrass_BP_C::interactionLocationChannelName' has a wrong offset!");
static_assert(offsetof(UInteractWithGrass_BP_C, interactionRadiusChannelName) == 0x000250, "Member 'UInteractWithGrass_BP_C::interactionRadiusChannelName' has a wrong offset!");
static_assert(offsetof(UInteractWithGrass_BP_C, interactionStrengthChannelName) == 0x000258, "Member 'UInteractWithGrass_BP_C::interactionStrengthChannelName' has a wrong offset!");
static_assert(offsetof(UInteractWithGrass_BP_C, useMaterialInteraction) == 0x000260, "Member 'UInteractWithGrass_BP_C::useMaterialInteraction' has a wrong offset!");
static_assert(offsetof(UInteractWithGrass_BP_C, materialEffectRadius) == 0x000264, "Member 'UInteractWithGrass_BP_C::materialEffectRadius' has a wrong offset!");
static_assert(offsetof(UInteractWithGrass_BP_C, materialEffectStrength) == 0x000268, "Member 'UInteractWithGrass_BP_C::materialEffectStrength' has a wrong offset!");
static_assert(offsetof(UInteractWithGrass_BP_C, matInteractionCullDistance) == 0x00026C, "Member 'UInteractWithGrass_BP_C::matInteractionCullDistance' has a wrong offset!");
static_assert(offsetof(UInteractWithGrass_BP_C, timer_UpdateMatInterParam) == 0x000270, "Member 'UInteractWithGrass_BP_C::timer_UpdateMatInterParam' has a wrong offset!");
static_assert(offsetof(UInteractWithGrass_BP_C, isForPrioritizedActor) == 0x000278, "Member 'UInteractWithGrass_BP_C::isForPrioritizedActor' has a wrong offset!");
static_assert(offsetof(UInteractWithGrass_BP_C, trample_IgnoreFoliageTypeWeights) == 0x000279, "Member 'UInteractWithGrass_BP_C::trample_IgnoreFoliageTypeWeights' has a wrong offset!");
static_assert(offsetof(UInteractWithGrass_BP_C, timer_CheckNearbyGrass) == 0x000280, "Member 'UInteractWithGrass_BP_C::timer_CheckNearbyGrass' has a wrong offset!");
static_assert(offsetof(UInteractWithGrass_BP_C, BendAwayStrength) == 0x000288, "Member 'UInteractWithGrass_BP_C::BendAwayStrength' has a wrong offset!");
static_assert(offsetof(UInteractWithGrass_BP_C, BendAwayZ_Offset) == 0x00028C, "Member 'UInteractWithGrass_BP_C::BendAwayZ_Offset' has a wrong offset!");
static_assert(offsetof(UInteractWithGrass_BP_C, BendAwayDuration) == 0x000290, "Member 'UInteractWithGrass_BP_C::BendAwayDuration' has a wrong offset!");
static_assert(offsetof(UInteractWithGrass_BP_C, BendAway_IgnoreFoliageTypeWeights) == 0x000294, "Member 'UInteractWithGrass_BP_C::BendAway_IgnoreFoliageTypeWeights' has a wrong offset!");
static_assert(offsetof(UInteractWithGrass_BP_C, calculatedTrampleBendAngle) == 0x000298, "Member 'UInteractWithGrass_BP_C::calculatedTrampleBendAngle' has a wrong offset!");
static_assert(offsetof(UInteractWithGrass_BP_C, calculatedTrample_Z_Scale) == 0x00029C, "Member 'UInteractWithGrass_BP_C::calculatedTrample_Z_Scale' has a wrong offset!");
static_assert(offsetof(UInteractWithGrass_BP_C, calculatedTrampleBendDuration) == 0x0002A0, "Member 'UInteractWithGrass_BP_C::calculatedTrampleBendDuration' has a wrong offset!");
static_assert(offsetof(UInteractWithGrass_BP_C, isUsingDispInteraction) == 0x0002A4, "Member 'UInteractWithGrass_BP_C::isUsingDispInteraction' has a wrong offset!");
static_assert(offsetof(UInteractWithGrass_BP_C, nearInterFoliageChunks) == 0x0002A8, "Member 'UInteractWithGrass_BP_C::nearInterFoliageChunks' has a wrong offset!");
static_assert(offsetof(UInteractWithGrass_BP_C, previousCheckedLocation) == 0x0002B8, "Member 'UInteractWithGrass_BP_C::previousCheckedLocation' has a wrong offset!");
static_assert(offsetof(UInteractWithGrass_BP_C, chunksToDeactivate) == 0x0002C8, "Member 'UInteractWithGrass_BP_C::chunksToDeactivate' has a wrong offset!");
static_assert(offsetof(UInteractWithGrass_BP_C, skipVelocityCheck) == 0x0002D8, "Member 'UInteractWithGrass_BP_C::skipVelocityCheck' has a wrong offset!");
static_assert(offsetof(UInteractWithGrass_BP_C, detectedInstances) == 0x0002E0, "Member 'UInteractWithGrass_BP_C::detectedInstances' has a wrong offset!");
static_assert(offsetof(UInteractWithGrass_BP_C, timer_UpdateMatInterParam_MainActor) == 0x0002F0, "Member 'UInteractWithGrass_BP_C::timer_UpdateMatInterParam_MainActor' has a wrong offset!");
static_assert(offsetof(UInteractWithGrass_BP_C, timer_DetectNearbyComponents) == 0x0002F8, "Member 'UInteractWithGrass_BP_C::timer_DetectNearbyComponents' has a wrong offset!");
static_assert(offsetof(UInteractWithGrass_BP_C, timer_CheckIfComponentsStillNear) == 0x000300, "Member 'UInteractWithGrass_BP_C::timer_CheckIfComponentsStillNear' has a wrong offset!");
static_assert(offsetof(UInteractWithGrass_BP_C, componentTurnedOFF) == 0x000308, "Member 'UInteractWithGrass_BP_C::componentTurnedOFF' has a wrong offset!");
static_assert(offsetof(UInteractWithGrass_BP_C, startTurnedOFF) == 0x000309, "Member 'UInteractWithGrass_BP_C::startTurnedOFF' has a wrong offset!");
static_assert(offsetof(UInteractWithGrass_BP_C, useMaxDistanceFromInstance) == 0x00030A, "Member 'UInteractWithGrass_BP_C::useMaxDistanceFromInstance' has a wrong offset!");
static_assert(offsetof(UInteractWithGrass_BP_C, maxDistanceFromInstance) == 0x00030C, "Member 'UInteractWithGrass_BP_C::maxDistanceFromInstance' has a wrong offset!");
static_assert(offsetof(UInteractWithGrass_BP_C, CurrentIndex) == 0x000310, "Member 'UInteractWithGrass_BP_C::CurrentIndex' has a wrong offset!");
static_assert(offsetof(UInteractWithGrass_BP_C, LastIndex) == 0x000314, "Member 'UInteractWithGrass_BP_C::LastIndex' has a wrong offset!");
static_assert(offsetof(UInteractWithGrass_BP_C, start_Component) == 0x000318, "Member 'UInteractWithGrass_BP_C::start_Component' has a wrong offset!");
static_assert(offsetof(UInteractWithGrass_BP_C, Vector) == 0x000320, "Member 'UInteractWithGrass_BP_C::Vector' has a wrong offset!");
static_assert(offsetof(UInteractWithGrass_BP_C, newPrevOffset) == 0x00032C, "Member 'UInteractWithGrass_BP_C::newPrevOffset' has a wrong offset!");
static_assert(offsetof(UInteractWithGrass_BP_C, StartTime) == 0x000338, "Member 'UInteractWithGrass_BP_C::StartTime' has a wrong offset!");
static_assert(offsetof(UInteractWithGrass_BP_C, StartUnDeformSpeed) == 0x00033C, "Member 'UInteractWithGrass_BP_C::StartUnDeformSpeed' has a wrong offset!");

}

