#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Animation

#include "Basic.hpp"

#include "AIModule_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Animation.BP_Animation_C
// 0x0030 (0x04F0 - 0x04C0)
class ABP_Animation_C final : public ACharacter
{
public:
	uint8                                         Pad_4B8[0x8];                                      // 0x04B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x04C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAudioComponent*                        Audio;                                             // 0x04C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCapsuleComponent*                      KillPlayer;                                        // 0x04D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldMove;                                        // 0x04D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D9[0x7];                                      // 0x04D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPCharacter_Demo_C*                    Target;                                            // 0x04E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          CanAttack;                                         // 0x04E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_Animation(int32 EntryPoint);
	void StopSound();
	void MC_StopSound();
	void MC_StartSound();
	void MC_ChangeEyeColor();
	void MC_KillAnimation(class ABPCharacter_Demo_C* Player);
	void Retreat(const struct FVector& Location);
	void BndEvt__BP_Animation_KillPlayer_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void Jumpscare(class ABPCharacter_Demo_C* Player);
	void OnQueryFinish(class UEnvQueryInstanceBlueprintWrapper* QueryInstance, EEnvQueryStatus QueryStatus);
	void ReceiveBeginPlay();
	void MC_KillSound(class ABPCharacter_Demo_C* Character);
	void AttackPlayer(class ABPCharacter_Demo_C* Player);
	void StartChasing();
	void OnRequestFailed_FA9FB91748D8CD6E57E2CFB9369E87DF();
	void OnMoveFinished_FA9FB91748D8CD6E57E2CFB9369E87DF(EPathFollowingResult Result, class AAIController* AIController);
	void OnRequestFailed_7E70DA774128EF044FF5A1902873E256();
	void OnMoveFinished_7E70DA774128EF044FF5A1902873E256(EPathFollowingResult Result, class AAIController* AIController);
	void StopMovement();
	void LookAtEntity(class ABPCharacter_Demo_C* Target_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Animation_C">();
	}
	static class ABP_Animation_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Animation_C>();
	}
};
static_assert(alignof(ABP_Animation_C) == 0x000010, "Wrong alignment on ABP_Animation_C");
static_assert(sizeof(ABP_Animation_C) == 0x0004F0, "Wrong size on ABP_Animation_C");
static_assert(offsetof(ABP_Animation_C, UberGraphFrame) == 0x0004C0, "Member 'ABP_Animation_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Animation_C, Audio) == 0x0004C8, "Member 'ABP_Animation_C::Audio' has a wrong offset!");
static_assert(offsetof(ABP_Animation_C, KillPlayer) == 0x0004D0, "Member 'ABP_Animation_C::KillPlayer' has a wrong offset!");
static_assert(offsetof(ABP_Animation_C, ShouldMove) == 0x0004D8, "Member 'ABP_Animation_C::ShouldMove' has a wrong offset!");
static_assert(offsetof(ABP_Animation_C, Target) == 0x0004E0, "Member 'ABP_Animation_C::Target' has a wrong offset!");
static_assert(offsetof(ABP_Animation_C, CanAttack) == 0x0004E8, "Member 'ABP_Animation_C::CanAttack' has a wrong offset!");

}

