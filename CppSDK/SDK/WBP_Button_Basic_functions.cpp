#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Button_Basic

#include "Basic.hpp"

#include "WBP_Button_Basic_classes.hpp"
#include "WBP_Button_Basic_parameters.hpp"


namespace SDK
{

// Function WBP_Button_Basic.WBP_Button_Basic_C.ExecuteUbergraph_WBP_Button_Basic
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Button_Basic_C::ExecuteUbergraph_WBP_Button_Basic(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Button_Basic_C", "ExecuteUbergraph_WBP_Button_Basic");

	Params::WBP_Button_Basic_C_ExecuteUbergraph_WBP_Button_Basic Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Button_Basic.WBP_Button_Basic_C.SendKeyboardText
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_Button_Basic_C::SendKeyboardText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Button_Basic_C", "SendKeyboardText");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Button_Basic.WBP_Button_Basic_C.Shift
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_Button_Basic_C::Shift()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Button_Basic_C", "Shift");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Button_Basic.WBP_Button_Basic_C.Space
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_Button_Basic_C::Space()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Button_Basic_C", "Space");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Button_Basic.WBP_Button_Basic_C.SymbolLock
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_Button_Basic_C::SymbolLock()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Button_Basic_C", "SymbolLock");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Button_Basic.WBP_Button_Basic_C.SetComponentReference
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWidgetInteractionComponent*      WidgetInteractionComponent                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Button_Basic_C::SetComponentReference(class UWidgetInteractionComponent* WidgetInteractionComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Button_Basic_C", "SetComponentReference");

	Params::WBP_Button_Basic_C_SetComponentReference Parms{};

	Parms.WidgetInteractionComponent = WidgetInteractionComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Button_Basic.WBP_Button_Basic_C.CapsLock
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_Button_Basic_C::CapsLock()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Button_Basic_C", "CapsLock");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Button_Basic.WBP_Button_Basic_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWBP_Button_Basic_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Button_Basic_C", "PreConstruct");

	Params::WBP_Button_Basic_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Button_Basic.WBP_Button_Basic_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWBP_Button_Basic_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Button_Basic_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Button_Basic.WBP_Button_Basic_C.BndEvt__Button_0_K2Node_ComponentBoundEvent_0_OnButtonPressedEvent__DelegateSignature
// (BlueprintEvent)

void UWBP_Button_Basic_C::BndEvt__Button_0_K2Node_ComponentBoundEvent_0_OnButtonPressedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Button_Basic_C", "BndEvt__Button_0_K2Node_ComponentBoundEvent_0_OnButtonPressedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Button_Basic.WBP_Button_Basic_C.ChangeTextCasing
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_Button_Basic_C::ChangeTextCasing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Button_Basic_C", "ChangeTextCasing");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Button_Basic.WBP_Button_Basic_C.SetButtonText
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FText&                      TextToUse                                              (BlueprintVisible, BlueprintReadOnly, Parm)

void UWBP_Button_Basic_C::SetButtonText(const class FText& TextToUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Button_Basic_C", "SetButtonText");

	Params::WBP_Button_Basic_C_SetButtonText Parms{};

	Parms.TextToUse = std::move(TextToUse);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Button_Basic.WBP_Button_Basic_C.ChangeTextToSymbols
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_Button_Basic_C::ChangeTextToSymbols()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Button_Basic_C", "ChangeTextToSymbols");

	UObject::ProcessEvent(Func, nullptr);
}

}

