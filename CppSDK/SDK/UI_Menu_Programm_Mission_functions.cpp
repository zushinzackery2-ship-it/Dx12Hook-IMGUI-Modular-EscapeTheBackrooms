#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_Menu_Programm_Mission

#include "Basic.hpp"

#include "UI_Menu_Programm_Mission_classes.hpp"
#include "UI_Menu_Programm_Mission_parameters.hpp"


namespace SDK
{

// Function UI_Menu_Programm_Mission.UI_Menu_Programm_Mission_C.ExecuteUbergraph_UI_Menu_Programm_Mission
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_Menu_Programm_Mission_C::ExecuteUbergraph_UI_Menu_Programm_Mission(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Menu_Programm_Mission_C", "ExecuteUbergraph_UI_Menu_Programm_Mission");

	Params::UI_Menu_Programm_Mission_C_ExecuteUbergraph_UI_Menu_Programm_Mission Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Menu_Programm_Mission.UI_Menu_Programm_Mission_C.ToggleFocus
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsFocused                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUI_Menu_Programm_Mission_C::ToggleFocus(bool IsFocused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Menu_Programm_Mission_C", "ToggleFocus");

	Params::UI_Menu_Programm_Mission_C_ToggleFocus Parms{};

	Parms.IsFocused = IsFocused;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Menu_Programm_Mission.UI_Menu_Programm_Mission_C.Select
// (BlueprintCallable, BlueprintEvent)

void UUI_Menu_Programm_Mission_C::Select()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Menu_Programm_Mission_C", "Select");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Menu_Programm_Mission.UI_Menu_Programm_Mission_C.OnMouseLeave
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FPointerEvent&             MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UUI_Menu_Programm_Mission_C::OnMouseLeave(const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Menu_Programm_Mission_C", "OnMouseLeave");

	Params::UI_Menu_Programm_Mission_C_OnMouseLeave Parms{};

	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Menu_Programm_Mission.UI_Menu_Programm_Mission_C.OnMouseEnter
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// const struct FPointerEvent&             MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UUI_Menu_Programm_Mission_C::OnMouseEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Menu_Programm_Mission_C", "OnMouseEnter");

	Params::UI_Menu_Programm_Mission_C_OnMouseEnter Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Menu_Programm_Mission.UI_Menu_Programm_Mission_C.UpdateSelect
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bSelected_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUI_Menu_Programm_Mission_C::UpdateSelect(bool bSelected_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Menu_Programm_Mission_C", "UpdateSelect");

	Params::UI_Menu_Programm_Mission_C_UpdateSelect Parms{};

	Parms.bSelected_0 = bSelected_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Menu_Programm_Mission.UI_Menu_Programm_Mission_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UUI_Menu_Programm_Mission_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Menu_Programm_Mission_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Menu_Programm_Mission.UI_Menu_Programm_Mission_C.ToggleEnabled
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsEnabled                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUI_Menu_Programm_Mission_C::ToggleEnabled(bool IsEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Menu_Programm_Mission_C", "ToggleEnabled");

	Params::UI_Menu_Programm_Mission_C_ToggleEnabled Parms{};

	Parms.IsEnabled = IsEnabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Menu_Programm_Mission.UI_Menu_Programm_Mission_C.ToggleHover
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsHovered_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUI_Menu_Programm_Mission_C::ToggleHover(bool IsHovered_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Menu_Programm_Mission_C", "ToggleHover");

	Params::UI_Menu_Programm_Mission_C_ToggleHover Parms{};

	Parms.IsHovered_0 = IsHovered_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Menu_Programm_Mission.UI_Menu_Programm_Mission_C.OnMouseButtonDown
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// const struct FPointerEvent&             MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UUI_Menu_Programm_Mission_C::OnMouseButtonDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Menu_Programm_Mission_C", "OnMouseButtonDown");

	Params::UI_Menu_Programm_Mission_C_OnMouseButtonDown Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function UI_Menu_Programm_Mission.UI_Menu_Programm_Mission_C.Get Text Color
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FSlateColor*                     SlateColor                                             (Parm, OutParm)

void UUI_Menu_Programm_Mission_C::Get_Text_Color(struct FSlateColor* SlateColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Menu_Programm_Mission_C", "Get Text Color");

	Params::UI_Menu_Programm_Mission_C_Get_Text_Color Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SlateColor != nullptr)
		*SlateColor = std::move(Parms.SlateColor);
}

}

