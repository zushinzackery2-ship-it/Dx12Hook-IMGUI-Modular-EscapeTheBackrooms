#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Ceiling_Gate

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Ceiling_Gate.BP_Ceiling_Gate_C
// 0x0028 (0x0248 - 0x0220)
class ABP_Ceiling_Gate_C final : public AActor
{
public:
	class UStaticMeshComponent*                   Frame;                                             // 0x0220(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Gate;                                              // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPhysicsConstraintComponent*            PhysicsConstraint;                                 // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          IsOpen;                                            // 0x0240(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)

public:
	void OnRep_IsOpen();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Ceiling_Gate_C">();
	}
	static class ABP_Ceiling_Gate_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Ceiling_Gate_C>();
	}
};
static_assert(alignof(ABP_Ceiling_Gate_C) == 0x000008, "Wrong alignment on ABP_Ceiling_Gate_C");
static_assert(sizeof(ABP_Ceiling_Gate_C) == 0x000248, "Wrong size on ABP_Ceiling_Gate_C");
static_assert(offsetof(ABP_Ceiling_Gate_C, Frame) == 0x000220, "Member 'ABP_Ceiling_Gate_C::Frame' has a wrong offset!");
static_assert(offsetof(ABP_Ceiling_Gate_C, Gate) == 0x000228, "Member 'ABP_Ceiling_Gate_C::Gate' has a wrong offset!");
static_assert(offsetof(ABP_Ceiling_Gate_C, PhysicsConstraint) == 0x000230, "Member 'ABP_Ceiling_Gate_C::PhysicsConstraint' has a wrong offset!");
static_assert(offsetof(ABP_Ceiling_Gate_C, DefaultSceneRoot) == 0x000238, "Member 'ABP_Ceiling_Gate_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_Ceiling_Gate_C, IsOpen) == 0x000240, "Member 'ABP_Ceiling_Gate_C::IsOpen' has a wrong offset!");

}

