#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Boat_AnimBP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function Boat_AnimBP.Boat_AnimBP_C.ExecuteUbergraph_Boat_AnimBP
// 0x0030 (0x0030 - 0x0000)
struct Boat_AnimBP_C_ExecuteUbergraph_Boat_AnimBP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaTimeX;                           // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_RowBoat_C*                          K2Node_DynamicCast_AsBP_Row_Boat;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Boat_AnimBP_C_ExecuteUbergraph_Boat_AnimBP) == 0x000008, "Wrong alignment on Boat_AnimBP_C_ExecuteUbergraph_Boat_AnimBP");
static_assert(sizeof(Boat_AnimBP_C_ExecuteUbergraph_Boat_AnimBP) == 0x000030, "Wrong size on Boat_AnimBP_C_ExecuteUbergraph_Boat_AnimBP");
static_assert(offsetof(Boat_AnimBP_C_ExecuteUbergraph_Boat_AnimBP, EntryPoint) == 0x000000, "Member 'Boat_AnimBP_C_ExecuteUbergraph_Boat_AnimBP::EntryPoint' has a wrong offset!");
static_assert(offsetof(Boat_AnimBP_C_ExecuteUbergraph_Boat_AnimBP, K2Node_Event_DeltaTimeX) == 0x000004, "Member 'Boat_AnimBP_C_ExecuteUbergraph_Boat_AnimBP::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(Boat_AnimBP_C_ExecuteUbergraph_Boat_AnimBP, CallFunc_TryGetPawnOwner_ReturnValue) == 0x000008, "Member 'Boat_AnimBP_C_ExecuteUbergraph_Boat_AnimBP::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(Boat_AnimBP_C_ExecuteUbergraph_Boat_AnimBP, K2Node_DynamicCast_AsBP_Row_Boat) == 0x000010, "Member 'Boat_AnimBP_C_ExecuteUbergraph_Boat_AnimBP::K2Node_DynamicCast_AsBP_Row_Boat' has a wrong offset!");
static_assert(offsetof(Boat_AnimBP_C_ExecuteUbergraph_Boat_AnimBP, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'Boat_AnimBP_C_ExecuteUbergraph_Boat_AnimBP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Boat_AnimBP_C_ExecuteUbergraph_Boat_AnimBP, CallFunc_GetVelocity_ReturnValue) == 0x00001C, "Member 'Boat_AnimBP_C_ExecuteUbergraph_Boat_AnimBP::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Boat_AnimBP_C_ExecuteUbergraph_Boat_AnimBP, CallFunc_VSize_ReturnValue) == 0x000028, "Member 'Boat_AnimBP_C_ExecuteUbergraph_Boat_AnimBP::CallFunc_VSize_ReturnValue' has a wrong offset!");

// Function Boat_AnimBP.Boat_AnimBP_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct Boat_AnimBP_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Boat_AnimBP_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on Boat_AnimBP_C_BlueprintUpdateAnimation");
static_assert(sizeof(Boat_AnimBP_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on Boat_AnimBP_C_BlueprintUpdateAnimation");
static_assert(offsetof(Boat_AnimBP_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'Boat_AnimBP_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function Boat_AnimBP.Boat_AnimBP_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct Boat_AnimBP_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(Boat_AnimBP_C_AnimGraph) == 0x000008, "Wrong alignment on Boat_AnimBP_C_AnimGraph");
static_assert(sizeof(Boat_AnimBP_C_AnimGraph) == 0x000010, "Wrong size on Boat_AnimBP_C_AnimGraph");
static_assert(offsetof(Boat_AnimBP_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'Boat_AnimBP_C_AnimGraph::AnimGraph_0' has a wrong offset!");

}

