#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Elevator

#include "Basic.hpp"

#include "BP_Elevator_classes.hpp"
#include "BP_Elevator_parameters.hpp"


namespace SDK
{

// Function BP_Elevator.BP_Elevator_C.ExecuteUbergraph_BP_Elevator
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Elevator_C::ExecuteUbergraph_BP_Elevator(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Elevator_C", "ExecuteUbergraph_BP_Elevator");

	Params::BP_Elevator_C_ExecuteUbergraph_BP_Elevator Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Elevator.BP_Elevator_C.MoveElevator
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Down                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Elevator_C::MoveElevator(bool Down)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Elevator_C", "MoveElevator");

	Params::BP_Elevator_C_MoveElevator Parms{};

	Parms.Down = Down;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Elevator.BP_Elevator_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Elevator_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Elevator_C", "ReceiveTick");

	Params::BP_Elevator_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Elevator.BP_Elevator_C.SetComplete
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_Elevator_C::SetComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Elevator_C", "SetComplete");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Elevator.BP_Elevator_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_Elevator_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Elevator_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Elevator.BP_Elevator_C.StopElevator
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_Elevator_C::StopElevator()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Elevator_C", "StopElevator");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Elevator.BP_Elevator_C.Elevator__UpdateFunc
// (BlueprintEvent)

void ABP_Elevator_C::Elevator__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Elevator_C", "Elevator__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Elevator.BP_Elevator_C.Elevator__FinishedFunc
// (BlueprintEvent)

void ABP_Elevator_C::Elevator__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Elevator_C", "Elevator__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Elevator.BP_Elevator_C.OnRep_Is Moving?
// (BlueprintCallable, BlueprintEvent)

void ABP_Elevator_C::OnRep_Is_Moving_()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Elevator_C", "OnRep_Is Moving?");

	UObject::ProcessEvent(Func, nullptr);
}

}

