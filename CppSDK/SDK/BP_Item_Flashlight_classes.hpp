#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Item_Flashlight

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_Item_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Item_Flashlight.BP_Item_Flashlight_C
// 0x0088 (0x02E0 - 0x0258)
class ABP_Item_Flashlight_C final : public ABP_Item_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_Item_Flashlight_C;               // 0x0258(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USpringArmComponent*                    FlashlightArm;                                     // 0x0260(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    FlashlightFakeGI;                                  // 0x0268(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    Flashlight;                                        // 0x0270(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight;                                        // 0x0278(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_2_Intensity_008846C045F53BBD4D1894AF62ABCDA4; // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_2__Direction_008846C045F53BBD4D1894AF62ABCDA4; // 0x0284(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_285[0x3];                                      // 0x0285(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_2;                                        // 0x0288(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TogglePower_ConeAngle_13371DEB4B39ADCC2F805FA1A0243354; // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TogglePower_Radius_13371DEB4B39ADCC2F805FA1A0243354; // 0x0294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TogglePower_Intensity_13371DEB4B39ADCC2F805FA1A0243354; // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            TogglePower__Direction_13371DEB4B39ADCC2F805FA1A0243354; // 0x029C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29D[0x3];                                      // 0x029D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     TogglePower;                                       // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_1_Attenuation_E0EC2A9E45AAEE86A82C75B21D1308FD; // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_1_Intensity_E0EC2A9E45AAEE86A82C75B21D1308FD; // 0x02AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_1__Direction_E0EC2A9E45AAEE86A82C75B21D1308FD; // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B1[0x7];                                      // 0x02B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_1;                                        // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_0_Intensity_EDA80A064DE4869B230E87B5CA1781E4; // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_0__Direction_EDA80A064DE4869B230E87B5CA1781E4; // 0x02C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C5[0x3];                                      // 0x02C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_0;                                        // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFlashlightOn;                                    // 0x02D0(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	uint8                                         Pad_2D1[0x3];                                      // 0x02D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Intensity;                                         // 0x02D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasGI;                                             // 0x02D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_Item_Flashlight(int32 EntryPoint);
	void FadeLight(bool FadeOut);
	void ToggleFlashlightPower(bool Power);
	void StartFlicker();
	void PlayAnimation();
	void ToggleFadePower(bool FadeOut);
	void OnCompleted_858C6BED431A8EBEEAB2D09BA256DAA6(class FName NotifyName);
	void OnBlendOut_858C6BED431A8EBEEAB2D09BA256DAA6(class FName NotifyName);
	void OnInterrupted_858C6BED431A8EBEEAB2D09BA256DAA6(class FName NotifyName);
	void OnNotifyBegin_858C6BED431A8EBEEAB2D09BA256DAA6(class FName NotifyName);
	void OnNotifyEnd_858C6BED431A8EBEEAB2D09BA256DAA6(class FName NotifyName);
	void Timeline_2__UpdateFunc();
	void Timeline_2__FinishedFunc();
	void TogglePower__UpdateFunc();
	void TogglePower__FinishedFunc();
	void Timeline_1__UpdateFunc();
	void Timeline_1__FinishedFunc();
	void Timeline_0__UpdateFunc();
	void Timeline_0__FinishedFunc();
	void OnRep_IsFlashlightOn();
	void GetAdjustedIntensity(float Intensity_0, float* Adjusted);
	void GetAdjustedRadius(float Radius, float* Adjusted);
	void ReceiveBeginPlay();
	void UseItem();
	void SetMaterial(bool EnabledFOV);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Item_Flashlight_C">();
	}
	static class ABP_Item_Flashlight_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Item_Flashlight_C>();
	}
};
static_assert(alignof(ABP_Item_Flashlight_C) == 0x000008, "Wrong alignment on ABP_Item_Flashlight_C");
static_assert(sizeof(ABP_Item_Flashlight_C) == 0x0002E0, "Wrong size on ABP_Item_Flashlight_C");
static_assert(offsetof(ABP_Item_Flashlight_C, UberGraphFrame_BP_Item_Flashlight_C) == 0x000258, "Member 'ABP_Item_Flashlight_C::UberGraphFrame_BP_Item_Flashlight_C' has a wrong offset!");
static_assert(offsetof(ABP_Item_Flashlight_C, FlashlightArm) == 0x000260, "Member 'ABP_Item_Flashlight_C::FlashlightArm' has a wrong offset!");
static_assert(offsetof(ABP_Item_Flashlight_C, FlashlightFakeGI) == 0x000268, "Member 'ABP_Item_Flashlight_C::FlashlightFakeGI' has a wrong offset!");
static_assert(offsetof(ABP_Item_Flashlight_C, Flashlight) == 0x000270, "Member 'ABP_Item_Flashlight_C::Flashlight' has a wrong offset!");
static_assert(offsetof(ABP_Item_Flashlight_C, PointLight) == 0x000278, "Member 'ABP_Item_Flashlight_C::PointLight' has a wrong offset!");
static_assert(offsetof(ABP_Item_Flashlight_C, Timeline_2_Intensity_008846C045F53BBD4D1894AF62ABCDA4) == 0x000280, "Member 'ABP_Item_Flashlight_C::Timeline_2_Intensity_008846C045F53BBD4D1894AF62ABCDA4' has a wrong offset!");
static_assert(offsetof(ABP_Item_Flashlight_C, Timeline_2__Direction_008846C045F53BBD4D1894AF62ABCDA4) == 0x000284, "Member 'ABP_Item_Flashlight_C::Timeline_2__Direction_008846C045F53BBD4D1894AF62ABCDA4' has a wrong offset!");
static_assert(offsetof(ABP_Item_Flashlight_C, Timeline_2) == 0x000288, "Member 'ABP_Item_Flashlight_C::Timeline_2' has a wrong offset!");
static_assert(offsetof(ABP_Item_Flashlight_C, TogglePower_ConeAngle_13371DEB4B39ADCC2F805FA1A0243354) == 0x000290, "Member 'ABP_Item_Flashlight_C::TogglePower_ConeAngle_13371DEB4B39ADCC2F805FA1A0243354' has a wrong offset!");
static_assert(offsetof(ABP_Item_Flashlight_C, TogglePower_Radius_13371DEB4B39ADCC2F805FA1A0243354) == 0x000294, "Member 'ABP_Item_Flashlight_C::TogglePower_Radius_13371DEB4B39ADCC2F805FA1A0243354' has a wrong offset!");
static_assert(offsetof(ABP_Item_Flashlight_C, TogglePower_Intensity_13371DEB4B39ADCC2F805FA1A0243354) == 0x000298, "Member 'ABP_Item_Flashlight_C::TogglePower_Intensity_13371DEB4B39ADCC2F805FA1A0243354' has a wrong offset!");
static_assert(offsetof(ABP_Item_Flashlight_C, TogglePower__Direction_13371DEB4B39ADCC2F805FA1A0243354) == 0x00029C, "Member 'ABP_Item_Flashlight_C::TogglePower__Direction_13371DEB4B39ADCC2F805FA1A0243354' has a wrong offset!");
static_assert(offsetof(ABP_Item_Flashlight_C, TogglePower) == 0x0002A0, "Member 'ABP_Item_Flashlight_C::TogglePower' has a wrong offset!");
static_assert(offsetof(ABP_Item_Flashlight_C, Timeline_1_Attenuation_E0EC2A9E45AAEE86A82C75B21D1308FD) == 0x0002A8, "Member 'ABP_Item_Flashlight_C::Timeline_1_Attenuation_E0EC2A9E45AAEE86A82C75B21D1308FD' has a wrong offset!");
static_assert(offsetof(ABP_Item_Flashlight_C, Timeline_1_Intensity_E0EC2A9E45AAEE86A82C75B21D1308FD) == 0x0002AC, "Member 'ABP_Item_Flashlight_C::Timeline_1_Intensity_E0EC2A9E45AAEE86A82C75B21D1308FD' has a wrong offset!");
static_assert(offsetof(ABP_Item_Flashlight_C, Timeline_1__Direction_E0EC2A9E45AAEE86A82C75B21D1308FD) == 0x0002B0, "Member 'ABP_Item_Flashlight_C::Timeline_1__Direction_E0EC2A9E45AAEE86A82C75B21D1308FD' has a wrong offset!");
static_assert(offsetof(ABP_Item_Flashlight_C, Timeline_1) == 0x0002B8, "Member 'ABP_Item_Flashlight_C::Timeline_1' has a wrong offset!");
static_assert(offsetof(ABP_Item_Flashlight_C, Timeline_0_Intensity_EDA80A064DE4869B230E87B5CA1781E4) == 0x0002C0, "Member 'ABP_Item_Flashlight_C::Timeline_0_Intensity_EDA80A064DE4869B230E87B5CA1781E4' has a wrong offset!");
static_assert(offsetof(ABP_Item_Flashlight_C, Timeline_0__Direction_EDA80A064DE4869B230E87B5CA1781E4) == 0x0002C4, "Member 'ABP_Item_Flashlight_C::Timeline_0__Direction_EDA80A064DE4869B230E87B5CA1781E4' has a wrong offset!");
static_assert(offsetof(ABP_Item_Flashlight_C, Timeline_0) == 0x0002C8, "Member 'ABP_Item_Flashlight_C::Timeline_0' has a wrong offset!");
static_assert(offsetof(ABP_Item_Flashlight_C, IsFlashlightOn) == 0x0002D0, "Member 'ABP_Item_Flashlight_C::IsFlashlightOn' has a wrong offset!");
static_assert(offsetof(ABP_Item_Flashlight_C, Intensity) == 0x0002D4, "Member 'ABP_Item_Flashlight_C::Intensity' has a wrong offset!");
static_assert(offsetof(ABP_Item_Flashlight_C, HasGI) == 0x0002D8, "Member 'ABP_Item_Flashlight_C::HasGI' has a wrong offset!");

}

