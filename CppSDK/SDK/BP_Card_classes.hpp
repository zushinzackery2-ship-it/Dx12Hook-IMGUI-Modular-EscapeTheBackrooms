#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Card

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Card.BP_Card_C
// 0x0048 (0x0268 - 0x0220)
class ABP_Card_C final : public AActor
{
public:
	class UWidgetComponent*                       Widget;                                            // 0x0220(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   id_card_03_Strap;                                  // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   id_card_03_Rectangle001;                           // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   id_card_03_Metal_03;                               // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   id_card_03_Metal_02;                               // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   id_card_03_Metal_01;                               // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   PlayerName;                                        // 0x0258(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	bool                                          IsVisible;                                         // 0x0260(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)

public:
	void ToggleVisibility(bool IsVisible_0);
	void OnRep_PlayerName();
	void OnRep_IsVisible();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Card_C">();
	}
	static class ABP_Card_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Card_C>();
	}
};
static_assert(alignof(ABP_Card_C) == 0x000008, "Wrong alignment on ABP_Card_C");
static_assert(sizeof(ABP_Card_C) == 0x000268, "Wrong size on ABP_Card_C");
static_assert(offsetof(ABP_Card_C, Widget) == 0x000220, "Member 'ABP_Card_C::Widget' has a wrong offset!");
static_assert(offsetof(ABP_Card_C, id_card_03_Strap) == 0x000228, "Member 'ABP_Card_C::id_card_03_Strap' has a wrong offset!");
static_assert(offsetof(ABP_Card_C, id_card_03_Rectangle001) == 0x000230, "Member 'ABP_Card_C::id_card_03_Rectangle001' has a wrong offset!");
static_assert(offsetof(ABP_Card_C, id_card_03_Metal_03) == 0x000238, "Member 'ABP_Card_C::id_card_03_Metal_03' has a wrong offset!");
static_assert(offsetof(ABP_Card_C, id_card_03_Metal_02) == 0x000240, "Member 'ABP_Card_C::id_card_03_Metal_02' has a wrong offset!");
static_assert(offsetof(ABP_Card_C, id_card_03_Metal_01) == 0x000248, "Member 'ABP_Card_C::id_card_03_Metal_01' has a wrong offset!");
static_assert(offsetof(ABP_Card_C, DefaultSceneRoot) == 0x000250, "Member 'ABP_Card_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_Card_C, PlayerName) == 0x000258, "Member 'ABP_Card_C::PlayerName' has a wrong offset!");
static_assert(offsetof(ABP_Card_C, IsVisible) == 0x000260, "Member 'ABP_Card_C::IsVisible' has a wrong offset!");

}

