#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Lobby_MapSelection

#include "Basic.hpp"

#include "S_Difficulty_structs.hpp"
#include "SlateCore_structs.hpp"
#include "S_Gamemode_structs.hpp"
#include "E_Difficulty_structs.hpp"
#include "S_LevelStats_structs.hpp"


namespace SDK::Params
{

// Function Lobby_MapSelection.Lobby_MapSelection_C.ExecuteUbergraph_Lobby_MapSelection
// 0x0088 (0x0088 - 0x0000)
struct Lobby_MapSelection_C_ExecuteUbergraph_Lobby_MapSelection final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_MyGameInstance_C*                   K2Node_DynamicCast_AsBP_My_Game_Instance;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_ComponentBoundEvent_SelectedOption_2;       // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UBP_MyGameInstance_C*                   K2Node_DynamicCast_AsBP_My_Game_Instance_1;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_StrStr_ReturnValue;              // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_ComponentBoundEvent_SelectedOption_1;       // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_ComponentBoundEvent_SelectedOption_3;       // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   K2Node_ComponentBoundEvent_SelectedOption;         // 0x0070(0x0018)()
};
static_assert(alignof(Lobby_MapSelection_C_ExecuteUbergraph_Lobby_MapSelection) == 0x000008, "Wrong alignment on Lobby_MapSelection_C_ExecuteUbergraph_Lobby_MapSelection");
static_assert(sizeof(Lobby_MapSelection_C_ExecuteUbergraph_Lobby_MapSelection) == 0x000088, "Wrong size on Lobby_MapSelection_C_ExecuteUbergraph_Lobby_MapSelection");
static_assert(offsetof(Lobby_MapSelection_C_ExecuteUbergraph_Lobby_MapSelection, EntryPoint) == 0x000000, "Member 'Lobby_MapSelection_C_ExecuteUbergraph_Lobby_MapSelection::EntryPoint' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_ExecuteUbergraph_Lobby_MapSelection, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'Lobby_MapSelection_C_ExecuteUbergraph_Lobby_MapSelection::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_ExecuteUbergraph_Lobby_MapSelection, K2Node_DynamicCast_AsBP_My_Game_Instance) == 0x000010, "Member 'Lobby_MapSelection_C_ExecuteUbergraph_Lobby_MapSelection::K2Node_DynamicCast_AsBP_My_Game_Instance' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_ExecuteUbergraph_Lobby_MapSelection, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'Lobby_MapSelection_C_ExecuteUbergraph_Lobby_MapSelection::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_ExecuteUbergraph_Lobby_MapSelection, CallFunc_GetGameInstance_ReturnValue_1) == 0x000020, "Member 'Lobby_MapSelection_C_ExecuteUbergraph_Lobby_MapSelection::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_ExecuteUbergraph_Lobby_MapSelection, K2Node_ComponentBoundEvent_SelectedOption_2) == 0x000028, "Member 'Lobby_MapSelection_C_ExecuteUbergraph_Lobby_MapSelection::K2Node_ComponentBoundEvent_SelectedOption_2' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_ExecuteUbergraph_Lobby_MapSelection, K2Node_DynamicCast_AsBP_My_Game_Instance_1) == 0x000038, "Member 'Lobby_MapSelection_C_ExecuteUbergraph_Lobby_MapSelection::K2Node_DynamicCast_AsBP_My_Game_Instance_1' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_ExecuteUbergraph_Lobby_MapSelection, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'Lobby_MapSelection_C_ExecuteUbergraph_Lobby_MapSelection::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_ExecuteUbergraph_Lobby_MapSelection, CallFunc_NotEqual_StrStr_ReturnValue) == 0x000041, "Member 'Lobby_MapSelection_C_ExecuteUbergraph_Lobby_MapSelection::CallFunc_NotEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_ExecuteUbergraph_Lobby_MapSelection, K2Node_ComponentBoundEvent_SelectedOption_1) == 0x000048, "Member 'Lobby_MapSelection_C_ExecuteUbergraph_Lobby_MapSelection::K2Node_ComponentBoundEvent_SelectedOption_1' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_ExecuteUbergraph_Lobby_MapSelection, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000058, "Member 'Lobby_MapSelection_C_ExecuteUbergraph_Lobby_MapSelection::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_ExecuteUbergraph_Lobby_MapSelection, K2Node_Event_IsDesignTime) == 0x000059, "Member 'Lobby_MapSelection_C_ExecuteUbergraph_Lobby_MapSelection::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_ExecuteUbergraph_Lobby_MapSelection, K2Node_ComponentBoundEvent_SelectedOption_3) == 0x000060, "Member 'Lobby_MapSelection_C_ExecuteUbergraph_Lobby_MapSelection::K2Node_ComponentBoundEvent_SelectedOption_3' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_ExecuteUbergraph_Lobby_MapSelection, K2Node_ComponentBoundEvent_SelectedOption) == 0x000070, "Member 'Lobby_MapSelection_C_ExecuteUbergraph_Lobby_MapSelection::K2Node_ComponentBoundEvent_SelectedOption' has a wrong offset!");

// Function Lobby_MapSelection.Lobby_MapSelection_C.BndEvt__Lobby_MapSelection_Lobby_Name_Box_C_1_K2Node_ComponentBoundEvent_0_OnNameSwitched__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct Lobby_MapSelection_C_BndEvt__Lobby_MapSelection_Lobby_Name_Box_C_1_K2Node_ComponentBoundEvent_0_OnNameSwitched__DelegateSignature final
{
public:
	class FText                                   SelectedOption;                                    // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(Lobby_MapSelection_C_BndEvt__Lobby_MapSelection_Lobby_Name_Box_C_1_K2Node_ComponentBoundEvent_0_OnNameSwitched__DelegateSignature) == 0x000008, "Wrong alignment on Lobby_MapSelection_C_BndEvt__Lobby_MapSelection_Lobby_Name_Box_C_1_K2Node_ComponentBoundEvent_0_OnNameSwitched__DelegateSignature");
static_assert(sizeof(Lobby_MapSelection_C_BndEvt__Lobby_MapSelection_Lobby_Name_Box_C_1_K2Node_ComponentBoundEvent_0_OnNameSwitched__DelegateSignature) == 0x000018, "Wrong size on Lobby_MapSelection_C_BndEvt__Lobby_MapSelection_Lobby_Name_Box_C_1_K2Node_ComponentBoundEvent_0_OnNameSwitched__DelegateSignature");
static_assert(offsetof(Lobby_MapSelection_C_BndEvt__Lobby_MapSelection_Lobby_Name_Box_C_1_K2Node_ComponentBoundEvent_0_OnNameSwitched__DelegateSignature, SelectedOption) == 0x000000, "Member 'Lobby_MapSelection_C_BndEvt__Lobby_MapSelection_Lobby_Name_Box_C_1_K2Node_ComponentBoundEvent_0_OnNameSwitched__DelegateSignature::SelectedOption' has a wrong offset!");

// Function Lobby_MapSelection.Lobby_MapSelection_C.BndEvt__Lobby_MapSelection_Lobby_DifficultySwitcher_K2Node_ComponentBoundEvent_0_OnDifficultySwitched__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct Lobby_MapSelection_C_BndEvt__Lobby_MapSelection_Lobby_DifficultySwitcher_K2Node_ComponentBoundEvent_0_OnDifficultySwitched__DelegateSignature final
{
public:
	class FString                                 SelectedOption;                                    // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(Lobby_MapSelection_C_BndEvt__Lobby_MapSelection_Lobby_DifficultySwitcher_K2Node_ComponentBoundEvent_0_OnDifficultySwitched__DelegateSignature) == 0x000008, "Wrong alignment on Lobby_MapSelection_C_BndEvt__Lobby_MapSelection_Lobby_DifficultySwitcher_K2Node_ComponentBoundEvent_0_OnDifficultySwitched__DelegateSignature");
static_assert(sizeof(Lobby_MapSelection_C_BndEvt__Lobby_MapSelection_Lobby_DifficultySwitcher_K2Node_ComponentBoundEvent_0_OnDifficultySwitched__DelegateSignature) == 0x000010, "Wrong size on Lobby_MapSelection_C_BndEvt__Lobby_MapSelection_Lobby_DifficultySwitcher_K2Node_ComponentBoundEvent_0_OnDifficultySwitched__DelegateSignature");
static_assert(offsetof(Lobby_MapSelection_C_BndEvt__Lobby_MapSelection_Lobby_DifficultySwitcher_K2Node_ComponentBoundEvent_0_OnDifficultySwitched__DelegateSignature, SelectedOption) == 0x000000, "Member 'Lobby_MapSelection_C_BndEvt__Lobby_MapSelection_Lobby_DifficultySwitcher_K2Node_ComponentBoundEvent_0_OnDifficultySwitched__DelegateSignature::SelectedOption' has a wrong offset!");

// Function Lobby_MapSelection.Lobby_MapSelection_C.BndEvt__Lobby_MapSelection_Lobby_Save_Switcher_K2Node_ComponentBoundEvent_4_OnSaveSwitched__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct Lobby_MapSelection_C_BndEvt__Lobby_MapSelection_Lobby_Save_Switcher_K2Node_ComponentBoundEvent_4_OnSaveSwitched__DelegateSignature final
{
public:
	class FString                                 SelectedOption;                                    // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(Lobby_MapSelection_C_BndEvt__Lobby_MapSelection_Lobby_Save_Switcher_K2Node_ComponentBoundEvent_4_OnSaveSwitched__DelegateSignature) == 0x000008, "Wrong alignment on Lobby_MapSelection_C_BndEvt__Lobby_MapSelection_Lobby_Save_Switcher_K2Node_ComponentBoundEvent_4_OnSaveSwitched__DelegateSignature");
static_assert(sizeof(Lobby_MapSelection_C_BndEvt__Lobby_MapSelection_Lobby_Save_Switcher_K2Node_ComponentBoundEvent_4_OnSaveSwitched__DelegateSignature) == 0x000010, "Wrong size on Lobby_MapSelection_C_BndEvt__Lobby_MapSelection_Lobby_Save_Switcher_K2Node_ComponentBoundEvent_4_OnSaveSwitched__DelegateSignature");
static_assert(offsetof(Lobby_MapSelection_C_BndEvt__Lobby_MapSelection_Lobby_Save_Switcher_K2Node_ComponentBoundEvent_4_OnSaveSwitched__DelegateSignature, SelectedOption) == 0x000000, "Member 'Lobby_MapSelection_C_BndEvt__Lobby_MapSelection_Lobby_Save_Switcher_K2Node_ComponentBoundEvent_4_OnSaveSwitched__DelegateSignature::SelectedOption' has a wrong offset!");

// Function Lobby_MapSelection.Lobby_MapSelection_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct Lobby_MapSelection_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Lobby_MapSelection_C_PreConstruct) == 0x000001, "Wrong alignment on Lobby_MapSelection_C_PreConstruct");
static_assert(sizeof(Lobby_MapSelection_C_PreConstruct) == 0x000001, "Wrong size on Lobby_MapSelection_C_PreConstruct");
static_assert(offsetof(Lobby_MapSelection_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'Lobby_MapSelection_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function Lobby_MapSelection.Lobby_MapSelection_C.BndEvt__Lobby_MapSelection_Lobby_Level_Switcher_C_0_K2Node_ComponentBoundEvent_3_OnLevelSwitched__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct Lobby_MapSelection_C_BndEvt__Lobby_MapSelection_Lobby_Level_Switcher_C_0_K2Node_ComponentBoundEvent_3_OnLevelSwitched__DelegateSignature final
{
public:
	class FString                                 SelectedOption;                                    // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(Lobby_MapSelection_C_BndEvt__Lobby_MapSelection_Lobby_Level_Switcher_C_0_K2Node_ComponentBoundEvent_3_OnLevelSwitched__DelegateSignature) == 0x000008, "Wrong alignment on Lobby_MapSelection_C_BndEvt__Lobby_MapSelection_Lobby_Level_Switcher_C_0_K2Node_ComponentBoundEvent_3_OnLevelSwitched__DelegateSignature");
static_assert(sizeof(Lobby_MapSelection_C_BndEvt__Lobby_MapSelection_Lobby_Level_Switcher_C_0_K2Node_ComponentBoundEvent_3_OnLevelSwitched__DelegateSignature) == 0x000010, "Wrong size on Lobby_MapSelection_C_BndEvt__Lobby_MapSelection_Lobby_Level_Switcher_C_0_K2Node_ComponentBoundEvent_3_OnLevelSwitched__DelegateSignature");
static_assert(offsetof(Lobby_MapSelection_C_BndEvt__Lobby_MapSelection_Lobby_Level_Switcher_C_0_K2Node_ComponentBoundEvent_3_OnLevelSwitched__DelegateSignature, SelectedOption) == 0x000000, "Member 'Lobby_MapSelection_C_BndEvt__Lobby_MapSelection_Lobby_Level_Switcher_C_0_K2Node_ComponentBoundEvent_3_OnLevelSwitched__DelegateSignature::SelectedOption' has a wrong offset!");

// Function Lobby_MapSelection.Lobby_MapSelection_C.Set_Selected_Map
// 0x0090 (0x0090 - 0x0000)
struct Lobby_MapSelection_C_Set_Selected_Map final
{
public:
	class FString                                 MapName;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallDelegate_;                                     // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_Gamemode                            CallFunc_GetDataTableRowFromName_OutRow;           // 0x0020(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0078(0x0018)()
};
static_assert(alignof(Lobby_MapSelection_C_Set_Selected_Map) == 0x000008, "Wrong alignment on Lobby_MapSelection_C_Set_Selected_Map");
static_assert(sizeof(Lobby_MapSelection_C_Set_Selected_Map) == 0x000090, "Wrong size on Lobby_MapSelection_C_Set_Selected_Map");
static_assert(offsetof(Lobby_MapSelection_C_Set_Selected_Map, MapName) == 0x000000, "Member 'Lobby_MapSelection_C_Set_Selected_Map::MapName' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_Set_Selected_Map, CallDelegate_) == 0x000010, "Member 'Lobby_MapSelection_C_Set_Selected_Map::CallDelegate_' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_Set_Selected_Map, CallFunc_Conv_StringToName_ReturnValue) == 0x000014, "Member 'Lobby_MapSelection_C_Set_Selected_Map::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_Set_Selected_Map, CallFunc_GetDataTableRowFromName_OutRow) == 0x000020, "Member 'Lobby_MapSelection_C_Set_Selected_Map::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_Set_Selected_Map, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000060, "Member 'Lobby_MapSelection_C_Set_Selected_Map::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_Set_Selected_Map, CallFunc_Conv_TextToString_ReturnValue) == 0x000068, "Member 'Lobby_MapSelection_C_Set_Selected_Map::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_Set_Selected_Map, CallFunc_Conv_StringToText_ReturnValue) == 0x000078, "Member 'Lobby_MapSelection_C_Set_Selected_Map::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function Lobby_MapSelection.Lobby_MapSelection_C.Set_DifficultyButtons_Visibility
// 0x0001 (0x0001 - 0x0000)
struct Lobby_MapSelection_C_Set_DifficultyButtons_Visibility final
{
public:
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Lobby_MapSelection_C_Set_DifficultyButtons_Visibility) == 0x000001, "Wrong alignment on Lobby_MapSelection_C_Set_DifficultyButtons_Visibility");
static_assert(sizeof(Lobby_MapSelection_C_Set_DifficultyButtons_Visibility) == 0x000001, "Wrong size on Lobby_MapSelection_C_Set_DifficultyButtons_Visibility");
static_assert(offsetof(Lobby_MapSelection_C_Set_DifficultyButtons_Visibility, CallFunc_IsServer_ReturnValue) == 0x000000, "Member 'Lobby_MapSelection_C_Set_DifficultyButtons_Visibility::CallFunc_IsServer_ReturnValue' has a wrong offset!");

// Function Lobby_MapSelection.Lobby_MapSelection_C.Set_Selected_Difficulty
// 0x0060 (0x0060 - 0x0000)
struct Lobby_MapSelection_C_Set_Selected_Difficulty final
{
public:
	class FString                                 Difficulty;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallDelegate_;                                     // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_Difficulty                          CallFunc_GetDataTableRowFromName_OutRow;           // 0x0020(0x0038)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Lobby_MapSelection_C_Set_Selected_Difficulty) == 0x000008, "Wrong alignment on Lobby_MapSelection_C_Set_Selected_Difficulty");
static_assert(sizeof(Lobby_MapSelection_C_Set_Selected_Difficulty) == 0x000060, "Wrong size on Lobby_MapSelection_C_Set_Selected_Difficulty");
static_assert(offsetof(Lobby_MapSelection_C_Set_Selected_Difficulty, Difficulty) == 0x000000, "Member 'Lobby_MapSelection_C_Set_Selected_Difficulty::Difficulty' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_Set_Selected_Difficulty, CallDelegate_) == 0x000010, "Member 'Lobby_MapSelection_C_Set_Selected_Difficulty::CallDelegate_' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_Set_Selected_Difficulty, CallFunc_Conv_StringToName_ReturnValue) == 0x000014, "Member 'Lobby_MapSelection_C_Set_Selected_Difficulty::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_Set_Selected_Difficulty, CallFunc_GetDataTableRowFromName_OutRow) == 0x000020, "Member 'Lobby_MapSelection_C_Set_Selected_Difficulty::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_Set_Selected_Difficulty, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000058, "Member 'Lobby_MapSelection_C_Set_Selected_Difficulty::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function Lobby_MapSelection.Lobby_MapSelection_C.Set_Selected_Level
// 0x0360 (0x0360 - 0x0000)
struct Lobby_MapSelection_C_Set_Selected_Level final
{
public:
	class FString                                 Level;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallDelegate_;                                     // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               CallFunc_GetMapFromName_Image;                     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0020(0x0088)()
	class UTexture*                               CallFunc_GetMapFromName_Image_1;                   // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               CallFunc_GetMapFromName_Image_2;                   // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush_1;                    // 0x00B8(0x0088)()
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush_2;                    // 0x0140(0x0088)()
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_1;          // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_2;          // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E2[0x2];                                      // 0x01E2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_1;        // 0x01EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1ED[0x3];                                      // 0x01ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x01F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_2;        // 0x01F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x01F6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F7[0x1];                                      // 0x01F7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_204[0x4];                                      // 0x0204(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_MyGameInstance_C*                   K2Node_DynamicCast_AsBP_My_Game_Instance;          // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_219[0x7];                                      // 0x0219(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_LobbySaveGame_C*                    CallFunc_GetLobbySaveGame_SaveGame;                // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_229[0x7];                                      // 0x0229(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_LevelStats                          CallFunc_Array_Get_Item;                           // 0x0230(0x0038)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x026C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26D[0x3];                                      // 0x026D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_LevelStats                          CallFunc_Array_Get_Item_1;                         // 0x0270(0x0038)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x02AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x02AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x02AE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2AF[0x1];                                      // 0x02AF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetTime_ReturnValue;                      // 0x02B0(0x0018)()
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C9[0x7];                                      // 0x02C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetTime_ReturnValue_1;                    // 0x02D0(0x0018)()
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E9[0x7];                                      // 0x02E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_LevelStats                          CallFunc_Array_Get_Item_2;                         // 0x02F0(0x0038)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x032C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_2;         // 0x032D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x032E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32F[0x1];                                      // 0x032F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetTime_ReturnValue_2;                    // 0x0330(0x0018)()
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_2;        // 0x0348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_349[0x3];                                      // 0x0349(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x034C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_351[0x3];                                      // 0x0351(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0354(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0358(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Lobby_MapSelection_C_Set_Selected_Level) == 0x000008, "Wrong alignment on Lobby_MapSelection_C_Set_Selected_Level");
static_assert(sizeof(Lobby_MapSelection_C_Set_Selected_Level) == 0x000360, "Wrong size on Lobby_MapSelection_C_Set_Selected_Level");
static_assert(offsetof(Lobby_MapSelection_C_Set_Selected_Level, Level) == 0x000000, "Member 'Lobby_MapSelection_C_Set_Selected_Level::Level' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_Set_Selected_Level, CallDelegate_) == 0x000010, "Member 'Lobby_MapSelection_C_Set_Selected_Level::CallDelegate_' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_Set_Selected_Level, Temp_int_Array_Index_Variable) == 0x000014, "Member 'Lobby_MapSelection_C_Set_Selected_Level::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_Set_Selected_Level, CallFunc_GetMapFromName_Image) == 0x000018, "Member 'Lobby_MapSelection_C_Set_Selected_Level::CallFunc_GetMapFromName_Image' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_Set_Selected_Level, K2Node_MakeStruct_SlateBrush) == 0x000020, "Member 'Lobby_MapSelection_C_Set_Selected_Level::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_Set_Selected_Level, CallFunc_GetMapFromName_Image_1) == 0x0000A8, "Member 'Lobby_MapSelection_C_Set_Selected_Level::CallFunc_GetMapFromName_Image_1' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_Set_Selected_Level, CallFunc_GetMapFromName_Image_2) == 0x0000B0, "Member 'Lobby_MapSelection_C_Set_Selected_Level::CallFunc_GetMapFromName_Image_2' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_Set_Selected_Level, K2Node_MakeStruct_SlateBrush_1) == 0x0000B8, "Member 'Lobby_MapSelection_C_Set_Selected_Level::K2Node_MakeStruct_SlateBrush_1' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_Set_Selected_Level, K2Node_MakeStruct_SlateBrush_2) == 0x000140, "Member 'Lobby_MapSelection_C_Set_Selected_Level::K2Node_MakeStruct_SlateBrush_2' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_Set_Selected_Level, CallFunc_Conv_StringToName_ReturnValue) == 0x0001C8, "Member 'Lobby_MapSelection_C_Set_Selected_Level::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_Set_Selected_Level, CallFunc_Conv_StringToName_ReturnValue_1) == 0x0001D0, "Member 'Lobby_MapSelection_C_Set_Selected_Level::CallFunc_Conv_StringToName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_Set_Selected_Level, CallFunc_Conv_StringToName_ReturnValue_2) == 0x0001D8, "Member 'Lobby_MapSelection_C_Set_Selected_Level::CallFunc_Conv_StringToName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_Set_Selected_Level, Temp_bool_True_if_break_was_hit_Variable) == 0x0001E0, "Member 'Lobby_MapSelection_C_Set_Selected_Level::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_Set_Selected_Level, CallFunc_Not_PreBool_ReturnValue) == 0x0001E1, "Member 'Lobby_MapSelection_C_Set_Selected_Level::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_Set_Selected_Level, Temp_int_Loop_Counter_Variable) == 0x0001E4, "Member 'Lobby_MapSelection_C_Set_Selected_Level::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_Set_Selected_Level, CallFunc_Add_IntInt_ReturnValue) == 0x0001E8, "Member 'Lobby_MapSelection_C_Set_Selected_Level::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_Set_Selected_Level, Temp_bool_True_if_break_was_hit_Variable_1) == 0x0001EC, "Member 'Lobby_MapSelection_C_Set_Selected_Level::Temp_bool_True_if_break_was_hit_Variable_1' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_Set_Selected_Level, Temp_int_Array_Index_Variable_1) == 0x0001F0, "Member 'Lobby_MapSelection_C_Set_Selected_Level::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_Set_Selected_Level, CallFunc_Not_PreBool_ReturnValue_1) == 0x0001F4, "Member 'Lobby_MapSelection_C_Set_Selected_Level::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_Set_Selected_Level, Temp_bool_True_if_break_was_hit_Variable_2) == 0x0001F5, "Member 'Lobby_MapSelection_C_Set_Selected_Level::Temp_bool_True_if_break_was_hit_Variable_2' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_Set_Selected_Level, CallFunc_Not_PreBool_ReturnValue_2) == 0x0001F6, "Member 'Lobby_MapSelection_C_Set_Selected_Level::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_Set_Selected_Level, Temp_int_Loop_Counter_Variable_1) == 0x0001F8, "Member 'Lobby_MapSelection_C_Set_Selected_Level::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_Set_Selected_Level, CallFunc_Add_IntInt_ReturnValue_1) == 0x0001FC, "Member 'Lobby_MapSelection_C_Set_Selected_Level::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_Set_Selected_Level, Temp_int_Array_Index_Variable_2) == 0x000200, "Member 'Lobby_MapSelection_C_Set_Selected_Level::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_Set_Selected_Level, CallFunc_GetGameInstance_ReturnValue) == 0x000208, "Member 'Lobby_MapSelection_C_Set_Selected_Level::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_Set_Selected_Level, K2Node_DynamicCast_AsBP_My_Game_Instance) == 0x000210, "Member 'Lobby_MapSelection_C_Set_Selected_Level::K2Node_DynamicCast_AsBP_My_Game_Instance' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_Set_Selected_Level, K2Node_DynamicCast_bSuccess) == 0x000218, "Member 'Lobby_MapSelection_C_Set_Selected_Level::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_Set_Selected_Level, CallFunc_GetLobbySaveGame_SaveGame) == 0x000220, "Member 'Lobby_MapSelection_C_Set_Selected_Level::CallFunc_GetLobbySaveGame_SaveGame' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_Set_Selected_Level, K2Node_SwitchEnum_CmpSuccess) == 0x000228, "Member 'Lobby_MapSelection_C_Set_Selected_Level::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_Set_Selected_Level, CallFunc_Array_Get_Item) == 0x000230, "Member 'Lobby_MapSelection_C_Set_Selected_Level::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_Set_Selected_Level, CallFunc_Array_Length_ReturnValue) == 0x000268, "Member 'Lobby_MapSelection_C_Set_Selected_Level::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_Set_Selected_Level, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00026C, "Member 'Lobby_MapSelection_C_Set_Selected_Level::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_Set_Selected_Level, CallFunc_Array_Get_Item_1) == 0x000270, "Member 'Lobby_MapSelection_C_Set_Selected_Level::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_Set_Selected_Level, CallFunc_Array_Length_ReturnValue_1) == 0x0002A8, "Member 'Lobby_MapSelection_C_Set_Selected_Level::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_Set_Selected_Level, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x0002AC, "Member 'Lobby_MapSelection_C_Set_Selected_Level::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_Set_Selected_Level, CallFunc_Less_IntInt_ReturnValue) == 0x0002AD, "Member 'Lobby_MapSelection_C_Set_Selected_Level::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_Set_Selected_Level, CallFunc_BooleanAND_ReturnValue) == 0x0002AE, "Member 'Lobby_MapSelection_C_Set_Selected_Level::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_Set_Selected_Level, CallFunc_GetTime_ReturnValue) == 0x0002B0, "Member 'Lobby_MapSelection_C_Set_Selected_Level::CallFunc_GetTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_Set_Selected_Level, CallFunc_EqualEqual_NameName_ReturnValue) == 0x0002C8, "Member 'Lobby_MapSelection_C_Set_Selected_Level::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_Set_Selected_Level, CallFunc_GetTime_ReturnValue_1) == 0x0002D0, "Member 'Lobby_MapSelection_C_Set_Selected_Level::CallFunc_GetTime_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_Set_Selected_Level, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x0002E8, "Member 'Lobby_MapSelection_C_Set_Selected_Level::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_Set_Selected_Level, CallFunc_Array_Get_Item_2) == 0x0002F0, "Member 'Lobby_MapSelection_C_Set_Selected_Level::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_Set_Selected_Level, CallFunc_Array_Length_ReturnValue_2) == 0x000328, "Member 'Lobby_MapSelection_C_Set_Selected_Level::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_Set_Selected_Level, CallFunc_Less_IntInt_ReturnValue_1) == 0x00032C, "Member 'Lobby_MapSelection_C_Set_Selected_Level::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_Set_Selected_Level, CallFunc_Greater_FloatFloat_ReturnValue_2) == 0x00032D, "Member 'Lobby_MapSelection_C_Set_Selected_Level::CallFunc_Greater_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_Set_Selected_Level, CallFunc_BooleanAND_ReturnValue_1) == 0x00032E, "Member 'Lobby_MapSelection_C_Set_Selected_Level::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_Set_Selected_Level, CallFunc_GetTime_ReturnValue_2) == 0x000330, "Member 'Lobby_MapSelection_C_Set_Selected_Level::CallFunc_GetTime_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_Set_Selected_Level, CallFunc_EqualEqual_NameName_ReturnValue_2) == 0x000348, "Member 'Lobby_MapSelection_C_Set_Selected_Level::CallFunc_EqualEqual_NameName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_Set_Selected_Level, Temp_int_Loop_Counter_Variable_2) == 0x00034C, "Member 'Lobby_MapSelection_C_Set_Selected_Level::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_Set_Selected_Level, CallFunc_Less_IntInt_ReturnValue_2) == 0x000350, "Member 'Lobby_MapSelection_C_Set_Selected_Level::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_Set_Selected_Level, CallFunc_Add_IntInt_ReturnValue_2) == 0x000354, "Member 'Lobby_MapSelection_C_Set_Selected_Level::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_Set_Selected_Level, CallFunc_BooleanAND_ReturnValue_2) == 0x000358, "Member 'Lobby_MapSelection_C_Set_Selected_Level::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function Lobby_MapSelection.Lobby_MapSelection_C.Set_Selected_Save
// 0x00B8 (0x00B8 - 0x0000)
struct Lobby_MapSelection_C_Set_Selected_Save final
{
public:
	class FString                                 Slot_0;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallDelegate_;                                     // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Replace_ReturnValue;                      // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_LeftS;                              // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_RightS;                             // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Split_ReturnValue;                        // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_StrStr_ReturnValue;              // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Split_LeftS_1;                            // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_RightS_1;                           // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Split_ReturnValue_1;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(Lobby_MapSelection_C_Set_Selected_Save) == 0x000008, "Wrong alignment on Lobby_MapSelection_C_Set_Selected_Save");
static_assert(sizeof(Lobby_MapSelection_C_Set_Selected_Save) == 0x0000B8, "Wrong size on Lobby_MapSelection_C_Set_Selected_Save");
static_assert(offsetof(Lobby_MapSelection_C_Set_Selected_Save, Slot_0) == 0x000000, "Member 'Lobby_MapSelection_C_Set_Selected_Save::Slot_0' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_Set_Selected_Save, CallDelegate_) == 0x000010, "Member 'Lobby_MapSelection_C_Set_Selected_Save::CallDelegate_' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_Set_Selected_Save, CallFunc_Replace_ReturnValue) == 0x000018, "Member 'Lobby_MapSelection_C_Set_Selected_Save::CallFunc_Replace_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_Set_Selected_Save, CallFunc_Split_LeftS) == 0x000028, "Member 'Lobby_MapSelection_C_Set_Selected_Save::CallFunc_Split_LeftS' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_Set_Selected_Save, CallFunc_Split_RightS) == 0x000038, "Member 'Lobby_MapSelection_C_Set_Selected_Save::CallFunc_Split_RightS' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_Set_Selected_Save, CallFunc_Split_ReturnValue) == 0x000048, "Member 'Lobby_MapSelection_C_Set_Selected_Save::CallFunc_Split_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_Set_Selected_Save, CallFunc_NotEqual_StrStr_ReturnValue) == 0x000049, "Member 'Lobby_MapSelection_C_Set_Selected_Save::CallFunc_NotEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_Set_Selected_Save, CallFunc_Split_LeftS_1) == 0x000050, "Member 'Lobby_MapSelection_C_Set_Selected_Save::CallFunc_Split_LeftS_1' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_Set_Selected_Save, CallFunc_Split_RightS_1) == 0x000060, "Member 'Lobby_MapSelection_C_Set_Selected_Save::CallFunc_Split_RightS_1' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_Set_Selected_Save, CallFunc_Split_ReturnValue_1) == 0x000070, "Member 'Lobby_MapSelection_C_Set_Selected_Save::CallFunc_Split_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_Set_Selected_Save, CallFunc_Concat_StrStr_ReturnValue) == 0x000078, "Member 'Lobby_MapSelection_C_Set_Selected_Save::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_Set_Selected_Save, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000088, "Member 'Lobby_MapSelection_C_Set_Selected_Save::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_Set_Selected_Save, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000098, "Member 'Lobby_MapSelection_C_Set_Selected_Save::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_Set_Selected_Save, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0000A8, "Member 'Lobby_MapSelection_C_Set_Selected_Save::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");

// Function Lobby_MapSelection.Lobby_MapSelection_C.RoundedTime
// 0x0038 (0x0038 - 0x0000)
struct Lobby_MapSelection_C_RoundedTime final
{
public:
	float                                         Time_0;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 RoundedTime_0;                                     // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(Lobby_MapSelection_C_RoundedTime) == 0x000008, "Wrong alignment on Lobby_MapSelection_C_RoundedTime");
static_assert(sizeof(Lobby_MapSelection_C_RoundedTime) == 0x000038, "Wrong size on Lobby_MapSelection_C_RoundedTime");
static_assert(offsetof(Lobby_MapSelection_C_RoundedTime, Time_0) == 0x000000, "Member 'Lobby_MapSelection_C_RoundedTime::Time_0' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_RoundedTime, RoundedTime_0) == 0x000008, "Member 'Lobby_MapSelection_C_RoundedTime::RoundedTime_0' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_RoundedTime, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000018, "Member 'Lobby_MapSelection_C_RoundedTime::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_RoundedTime, CallFunc_Round_ReturnValue) == 0x00001C, "Member 'Lobby_MapSelection_C_RoundedTime::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_RoundedTime, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000020, "Member 'Lobby_MapSelection_C_RoundedTime::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_RoundedTime, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000024, "Member 'Lobby_MapSelection_C_RoundedTime::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_RoundedTime, CallFunc_Conv_FloatToString_ReturnValue) == 0x000028, "Member 'Lobby_MapSelection_C_RoundedTime::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");

// Function Lobby_MapSelection.Lobby_MapSelection_C.GetTime
// 0x00B0 (0x00B0 - 0x0000)
struct Lobby_MapSelection_C_GetTime final
{
public:
	float                                         Time_0;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm)
	class FString                                 CallFunc_RoundedTime_RoundedTime;                  // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_LeftS;                              // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_RightS;                             // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Split_ReturnValue;                        // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetSubstring_ReturnValue;                 // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0098(0x0018)()
};
static_assert(alignof(Lobby_MapSelection_C_GetTime) == 0x000008, "Wrong alignment on Lobby_MapSelection_C_GetTime");
static_assert(sizeof(Lobby_MapSelection_C_GetTime) == 0x0000B0, "Wrong size on Lobby_MapSelection_C_GetTime");
static_assert(offsetof(Lobby_MapSelection_C_GetTime, Time_0) == 0x000000, "Member 'Lobby_MapSelection_C_GetTime::Time_0' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_GetTime, ReturnValue) == 0x000008, "Member 'Lobby_MapSelection_C_GetTime::ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_GetTime, CallFunc_RoundedTime_RoundedTime) == 0x000020, "Member 'Lobby_MapSelection_C_GetTime::CallFunc_RoundedTime_RoundedTime' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_GetTime, CallFunc_Split_LeftS) == 0x000030, "Member 'Lobby_MapSelection_C_GetTime::CallFunc_Split_LeftS' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_GetTime, CallFunc_Split_RightS) == 0x000040, "Member 'Lobby_MapSelection_C_GetTime::CallFunc_Split_RightS' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_GetTime, CallFunc_Split_ReturnValue) == 0x000050, "Member 'Lobby_MapSelection_C_GetTime::CallFunc_Split_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_GetTime, CallFunc_Concat_StrStr_ReturnValue) == 0x000058, "Member 'Lobby_MapSelection_C_GetTime::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_GetTime, CallFunc_GetSubstring_ReturnValue) == 0x000068, "Member 'Lobby_MapSelection_C_GetTime::CallFunc_GetSubstring_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_GetTime, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000078, "Member 'Lobby_MapSelection_C_GetTime::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_GetTime, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000088, "Member 'Lobby_MapSelection_C_GetTime::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_GetTime, CallFunc_Conv_StringToText_ReturnValue) == 0x000098, "Member 'Lobby_MapSelection_C_GetTime::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function Lobby_MapSelection.Lobby_MapSelection_C.GetMapFromName
// 0x0020 (0x0020 - 0x0000)
struct Lobby_MapSelection_C_GetMapFromName final
{
public:
	class FString                                 Name_0;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UTexture*                               Image;                                             // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchString_CmpSuccess;                    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Lobby_MapSelection_C_GetMapFromName) == 0x000008, "Wrong alignment on Lobby_MapSelection_C_GetMapFromName");
static_assert(sizeof(Lobby_MapSelection_C_GetMapFromName) == 0x000020, "Wrong size on Lobby_MapSelection_C_GetMapFromName");
static_assert(offsetof(Lobby_MapSelection_C_GetMapFromName, Name_0) == 0x000000, "Member 'Lobby_MapSelection_C_GetMapFromName::Name_0' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_GetMapFromName, Image) == 0x000010, "Member 'Lobby_MapSelection_C_GetMapFromName::Image' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_GetMapFromName, K2Node_SwitchString_CmpSuccess) == 0x000018, "Member 'Lobby_MapSelection_C_GetMapFromName::K2Node_SwitchString_CmpSuccess' has a wrong offset!");

// Function Lobby_MapSelection.Lobby_MapSelection_C.GetLevelFromName
// 0x0020 (0x0020 - 0x0000)
struct Lobby_MapSelection_C_GetLevelFromName final
{
public:
	class FString                                 Name_0;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FName                                   LevelName;                                         // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchString_CmpSuccess;                    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Lobby_MapSelection_C_GetLevelFromName) == 0x000008, "Wrong alignment on Lobby_MapSelection_C_GetLevelFromName");
static_assert(sizeof(Lobby_MapSelection_C_GetLevelFromName) == 0x000020, "Wrong size on Lobby_MapSelection_C_GetLevelFromName");
static_assert(offsetof(Lobby_MapSelection_C_GetLevelFromName, Name_0) == 0x000000, "Member 'Lobby_MapSelection_C_GetLevelFromName::Name_0' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_GetLevelFromName, LevelName) == 0x000010, "Member 'Lobby_MapSelection_C_GetLevelFromName::LevelName' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_GetLevelFromName, K2Node_SwitchString_CmpSuccess) == 0x000018, "Member 'Lobby_MapSelection_C_GetLevelFromName::K2Node_SwitchString_CmpSuccess' has a wrong offset!");

// Function Lobby_MapSelection.Lobby_MapSelection_C.ResetLevelSelection
// 0x0001 (0x0001 - 0x0000)
struct Lobby_MapSelection_C_ResetLevelSelection final
{
public:
	E_Difficulty                                  Difficulty;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Lobby_MapSelection_C_ResetLevelSelection) == 0x000001, "Wrong alignment on Lobby_MapSelection_C_ResetLevelSelection");
static_assert(sizeof(Lobby_MapSelection_C_ResetLevelSelection) == 0x000001, "Wrong size on Lobby_MapSelection_C_ResetLevelSelection");
static_assert(offsetof(Lobby_MapSelection_C_ResetLevelSelection, Difficulty) == 0x000000, "Member 'Lobby_MapSelection_C_ResetLevelSelection::Difficulty' has a wrong offset!");

// Function Lobby_MapSelection.Lobby_MapSelection_C.Set_SaveButtons_Visibility
// 0x0001 (0x0001 - 0x0000)
struct Lobby_MapSelection_C_Set_SaveButtons_Visibility final
{
public:
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Lobby_MapSelection_C_Set_SaveButtons_Visibility) == 0x000001, "Wrong alignment on Lobby_MapSelection_C_Set_SaveButtons_Visibility");
static_assert(sizeof(Lobby_MapSelection_C_Set_SaveButtons_Visibility) == 0x000001, "Wrong size on Lobby_MapSelection_C_Set_SaveButtons_Visibility");
static_assert(offsetof(Lobby_MapSelection_C_Set_SaveButtons_Visibility, CallFunc_IsServer_ReturnValue) == 0x000000, "Member 'Lobby_MapSelection_C_Set_SaveButtons_Visibility::CallFunc_IsServer_ReturnValue' has a wrong offset!");

// Function Lobby_MapSelection.Lobby_MapSelection_C.Set_SaveName_Visibility
// 0x0001 (0x0001 - 0x0000)
struct Lobby_MapSelection_C_Set_SaveName_Visibility final
{
public:
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Lobby_MapSelection_C_Set_SaveName_Visibility) == 0x000001, "Wrong alignment on Lobby_MapSelection_C_Set_SaveName_Visibility");
static_assert(sizeof(Lobby_MapSelection_C_Set_SaveName_Visibility) == 0x000001, "Wrong size on Lobby_MapSelection_C_Set_SaveName_Visibility");
static_assert(offsetof(Lobby_MapSelection_C_Set_SaveName_Visibility, CallFunc_IsServer_ReturnValue) == 0x000000, "Member 'Lobby_MapSelection_C_Set_SaveName_Visibility::CallFunc_IsServer_ReturnValue' has a wrong offset!");

// Function Lobby_MapSelection.Lobby_MapSelection_C.CheckName
// 0x0100 (0x0100 - 0x0000)
struct Lobby_MapSelection_C_CheckName final
{
public:
	bool                                          IsValid;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetCurrentCulture_ReturnValue;            // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_StrStr_ReturnValue;              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ALobby_GS_C*                            K2Node_DynamicCast_AsLobby_GS;                     // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Replace_ReturnValue;                      // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0060(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         CallFunc_GetCharacterArrayFromString_ReturnValue;  // 0x0098(0x0010)(ReferenceParm)
	bool                                          CallFunc_DoesSaveGameExist_ReturnValue;            // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item;                           // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_ToLower_ReturnValue;                      // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DA[0x2];                                       // 0x00DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_2;          // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue;                          // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00FE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Lobby_MapSelection_C_CheckName) == 0x000008, "Wrong alignment on Lobby_MapSelection_C_CheckName");
static_assert(sizeof(Lobby_MapSelection_C_CheckName) == 0x000100, "Wrong size on Lobby_MapSelection_C_CheckName");
static_assert(offsetof(Lobby_MapSelection_C_CheckName, IsValid) == 0x000000, "Member 'Lobby_MapSelection_C_CheckName::IsValid' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_CheckName, Temp_int_Array_Index_Variable) == 0x000004, "Member 'Lobby_MapSelection_C_CheckName::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_CheckName, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'Lobby_MapSelection_C_CheckName::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_CheckName, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'Lobby_MapSelection_C_CheckName::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_CheckName, CallFunc_GetCurrentCulture_ReturnValue) == 0x000010, "Member 'Lobby_MapSelection_C_CheckName::CallFunc_GetCurrentCulture_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_CheckName, CallFunc_NotEqual_StrStr_ReturnValue) == 0x000020, "Member 'Lobby_MapSelection_C_CheckName::CallFunc_NotEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_CheckName, CallFunc_GetGameState_ReturnValue) == 0x000028, "Member 'Lobby_MapSelection_C_CheckName::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_CheckName, K2Node_DynamicCast_AsLobby_GS) == 0x000030, "Member 'Lobby_MapSelection_C_CheckName::K2Node_DynamicCast_AsLobby_GS' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_CheckName, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'Lobby_MapSelection_C_CheckName::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_CheckName, CallFunc_Conv_TextToString_ReturnValue) == 0x000040, "Member 'Lobby_MapSelection_C_CheckName::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_CheckName, CallFunc_Replace_ReturnValue) == 0x000050, "Member 'Lobby_MapSelection_C_CheckName::CallFunc_Replace_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_CheckName, CallFunc_Conv_StringToText_ReturnValue) == 0x000060, "Member 'Lobby_MapSelection_C_CheckName::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_CheckName, CallFunc_Conv_TextToString_ReturnValue_1) == 0x000078, "Member 'Lobby_MapSelection_C_CheckName::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_CheckName, CallFunc_Concat_StrStr_ReturnValue) == 0x000088, "Member 'Lobby_MapSelection_C_CheckName::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_CheckName, CallFunc_GetCharacterArrayFromString_ReturnValue) == 0x000098, "Member 'Lobby_MapSelection_C_CheckName::CallFunc_GetCharacterArrayFromString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_CheckName, CallFunc_DoesSaveGameExist_ReturnValue) == 0x0000A8, "Member 'Lobby_MapSelection_C_CheckName::CallFunc_DoesSaveGameExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_CheckName, CallFunc_Array_Get_Item) == 0x0000B0, "Member 'Lobby_MapSelection_C_CheckName::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_CheckName, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x0000C0, "Member 'Lobby_MapSelection_C_CheckName::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_CheckName, CallFunc_ToLower_ReturnValue) == 0x0000C8, "Member 'Lobby_MapSelection_C_CheckName::CallFunc_ToLower_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_CheckName, CallFunc_BooleanOR_ReturnValue) == 0x0000D8, "Member 'Lobby_MapSelection_C_CheckName::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_CheckName, CallFunc_Array_Contains_ReturnValue) == 0x0000D9, "Member 'Lobby_MapSelection_C_CheckName::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_CheckName, CallFunc_Array_Length_ReturnValue) == 0x0000DC, "Member 'Lobby_MapSelection_C_CheckName::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_CheckName, CallFunc_Less_IntInt_ReturnValue) == 0x0000E0, "Member 'Lobby_MapSelection_C_CheckName::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_CheckName, CallFunc_Conv_TextToString_ReturnValue_2) == 0x0000E8, "Member 'Lobby_MapSelection_C_CheckName::CallFunc_Conv_TextToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_CheckName, CallFunc_Len_ReturnValue) == 0x0000F8, "Member 'Lobby_MapSelection_C_CheckName::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_CheckName, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000FC, "Member 'Lobby_MapSelection_C_CheckName::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_CheckName, CallFunc_Greater_IntInt_ReturnValue) == 0x0000FD, "Member 'Lobby_MapSelection_C_CheckName::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_CheckName, CallFunc_BooleanAND_ReturnValue) == 0x0000FE, "Member 'Lobby_MapSelection_C_CheckName::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function Lobby_MapSelection.Lobby_MapSelection_C.CheckFont
// 0x00C8 (0x00C8 - 0x0000)
struct Lobby_MapSelection_C_CheckFont final
{
public:
	struct FSlateFontInfo                         K2Node_MakeStruct_SlateFontInfo;                   // 0x0000(0x0058)(HasGetValueTypeHash)
	struct FSlateFontInfo                         K2Node_MakeStruct_SlateFontInfo_1;                 // 0x0058(0x0058)(HasGetValueTypeHash)
	class FString                                 CallFunc_GetCurrentCulture_ReturnValue;            // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_StriStri_ReturnValue;            // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Lobby_MapSelection_C_CheckFont) == 0x000008, "Wrong alignment on Lobby_MapSelection_C_CheckFont");
static_assert(sizeof(Lobby_MapSelection_C_CheckFont) == 0x0000C8, "Wrong size on Lobby_MapSelection_C_CheckFont");
static_assert(offsetof(Lobby_MapSelection_C_CheckFont, K2Node_MakeStruct_SlateFontInfo) == 0x000000, "Member 'Lobby_MapSelection_C_CheckFont::K2Node_MakeStruct_SlateFontInfo' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_CheckFont, K2Node_MakeStruct_SlateFontInfo_1) == 0x000058, "Member 'Lobby_MapSelection_C_CheckFont::K2Node_MakeStruct_SlateFontInfo_1' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_CheckFont, CallFunc_GetCurrentCulture_ReturnValue) == 0x0000B0, "Member 'Lobby_MapSelection_C_CheckFont::CallFunc_GetCurrentCulture_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_MapSelection_C_CheckFont, CallFunc_NotEqual_StriStri_ReturnValue) == 0x0000C0, "Member 'Lobby_MapSelection_C_CheckFont::CallFunc_NotEqual_StriStri_ReturnValue' has a wrong offset!");

}

