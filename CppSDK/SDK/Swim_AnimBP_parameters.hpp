#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Swim_AnimBP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function Swim_AnimBP.Swim_AnimBP_C.ExecuteUbergraph_Swim_AnimBP
// 0x0038 (0x0038 - 0x0000)
struct Swim_AnimBP_C_ExecuteUbergraph_Swim_AnimBP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAC_Swimming_C*                         CallFunc_GetComponentByClass_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaTimeX;                           // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInstanceAssetPlayerTimeFromEndFraction_ReturnValue; // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             K2Node_DynamicCast_AsCharacter;                    // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Swim_AnimBP_C_ExecuteUbergraph_Swim_AnimBP) == 0x000008, "Wrong alignment on Swim_AnimBP_C_ExecuteUbergraph_Swim_AnimBP");
static_assert(sizeof(Swim_AnimBP_C_ExecuteUbergraph_Swim_AnimBP) == 0x000038, "Wrong size on Swim_AnimBP_C_ExecuteUbergraph_Swim_AnimBP");
static_assert(offsetof(Swim_AnimBP_C_ExecuteUbergraph_Swim_AnimBP, EntryPoint) == 0x000000, "Member 'Swim_AnimBP_C_ExecuteUbergraph_Swim_AnimBP::EntryPoint' has a wrong offset!");
static_assert(offsetof(Swim_AnimBP_C_ExecuteUbergraph_Swim_AnimBP, CallFunc_GetComponentByClass_ReturnValue) == 0x000008, "Member 'Swim_AnimBP_C_ExecuteUbergraph_Swim_AnimBP::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Swim_AnimBP_C_ExecuteUbergraph_Swim_AnimBP, K2Node_Event_DeltaTimeX) == 0x000010, "Member 'Swim_AnimBP_C_ExecuteUbergraph_Swim_AnimBP::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(Swim_AnimBP_C_ExecuteUbergraph_Swim_AnimBP, CallFunc_GetInstanceAssetPlayerTimeFromEndFraction_ReturnValue) == 0x000014, "Member 'Swim_AnimBP_C_ExecuteUbergraph_Swim_AnimBP::CallFunc_GetInstanceAssetPlayerTimeFromEndFraction_ReturnValue' has a wrong offset!");
static_assert(offsetof(Swim_AnimBP_C_ExecuteUbergraph_Swim_AnimBP, CallFunc_Less_FloatFloat_ReturnValue) == 0x000018, "Member 'Swim_AnimBP_C_ExecuteUbergraph_Swim_AnimBP::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Swim_AnimBP_C_ExecuteUbergraph_Swim_AnimBP, CallFunc_TryGetPawnOwner_ReturnValue) == 0x000020, "Member 'Swim_AnimBP_C_ExecuteUbergraph_Swim_AnimBP::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(Swim_AnimBP_C_ExecuteUbergraph_Swim_AnimBP, K2Node_DynamicCast_AsCharacter) == 0x000028, "Member 'Swim_AnimBP_C_ExecuteUbergraph_Swim_AnimBP::K2Node_DynamicCast_AsCharacter' has a wrong offset!");
static_assert(offsetof(Swim_AnimBP_C_ExecuteUbergraph_Swim_AnimBP, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'Swim_AnimBP_C_ExecuteUbergraph_Swim_AnimBP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Swim_AnimBP_C_ExecuteUbergraph_Swim_AnimBP, CallFunc_IsValid_ReturnValue) == 0x000031, "Member 'Swim_AnimBP_C_ExecuteUbergraph_Swim_AnimBP::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function Swim_AnimBP.Swim_AnimBP_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct Swim_AnimBP_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Swim_AnimBP_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on Swim_AnimBP_C_BlueprintUpdateAnimation");
static_assert(sizeof(Swim_AnimBP_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on Swim_AnimBP_C_BlueprintUpdateAnimation");
static_assert(offsetof(Swim_AnimBP_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'Swim_AnimBP_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function Swim_AnimBP.Swim_AnimBP_C.GetMovementDirection
// 0x003C (0x003C - 0x0000)
struct Swim_AnimBP_C_GetMovementDirection final
{
public:
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetBaseAimRotation_ReturnValue;           // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_NormalizedDeltaRotator_ReturnValue;       // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Swim_AnimBP_C_GetMovementDirection) == 0x000004, "Wrong alignment on Swim_AnimBP_C_GetMovementDirection");
static_assert(sizeof(Swim_AnimBP_C_GetMovementDirection) == 0x00003C, "Wrong size on Swim_AnimBP_C_GetMovementDirection");
static_assert(offsetof(Swim_AnimBP_C_GetMovementDirection, CallFunc_GetVelocity_ReturnValue) == 0x000000, "Member 'Swim_AnimBP_C_GetMovementDirection::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Swim_AnimBP_C_GetMovementDirection, CallFunc_GetBaseAimRotation_ReturnValue) == 0x00000C, "Member 'Swim_AnimBP_C_GetMovementDirection::CallFunc_GetBaseAimRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Swim_AnimBP_C_GetMovementDirection, CallFunc_MakeRotFromX_ReturnValue) == 0x000018, "Member 'Swim_AnimBP_C_GetMovementDirection::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");
static_assert(offsetof(Swim_AnimBP_C_GetMovementDirection, CallFunc_NormalizedDeltaRotator_ReturnValue) == 0x000024, "Member 'Swim_AnimBP_C_GetMovementDirection::CallFunc_NormalizedDeltaRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Swim_AnimBP_C_GetMovementDirection, CallFunc_BreakRotator_Roll) == 0x000030, "Member 'Swim_AnimBP_C_GetMovementDirection::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(Swim_AnimBP_C_GetMovementDirection, CallFunc_BreakRotator_Pitch) == 0x000034, "Member 'Swim_AnimBP_C_GetMovementDirection::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(Swim_AnimBP_C_GetMovementDirection, CallFunc_BreakRotator_Yaw) == 0x000038, "Member 'Swim_AnimBP_C_GetMovementDirection::CallFunc_BreakRotator_Yaw' has a wrong offset!");

// Function Swim_AnimBP.Swim_AnimBP_C.SetSwimmingAnimationDriverVariables
// 0x0070 (0x0070 - 0x0000)
struct Swim_AnimBP_C_SetSwimmingAnimationDriverVariables final
{
public:
	class UPawnMovementComponent*                 CallFunc_GetMovementComponent_ReturnValue;         // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSwimming_ReturnValue;                   // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UPawnMovementComponent*                 CallFunc_GetMovementComponent_ReturnValue_1;       // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFalling_ReturnValue;                    // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue_1;        // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue;                    // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Swim_AnimBP_C_SetSwimmingAnimationDriverVariables) == 0x000008, "Wrong alignment on Swim_AnimBP_C_SetSwimmingAnimationDriverVariables");
static_assert(sizeof(Swim_AnimBP_C_SetSwimmingAnimationDriverVariables) == 0x000070, "Wrong size on Swim_AnimBP_C_SetSwimmingAnimationDriverVariables");
static_assert(offsetof(Swim_AnimBP_C_SetSwimmingAnimationDriverVariables, CallFunc_GetMovementComponent_ReturnValue) == 0x000000, "Member 'Swim_AnimBP_C_SetSwimmingAnimationDriverVariables::CallFunc_GetMovementComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Swim_AnimBP_C_SetSwimmingAnimationDriverVariables, CallFunc_IsSwimming_ReturnValue) == 0x000008, "Member 'Swim_AnimBP_C_SetSwimmingAnimationDriverVariables::CallFunc_IsSwimming_ReturnValue' has a wrong offset!");
static_assert(offsetof(Swim_AnimBP_C_SetSwimmingAnimationDriverVariables, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000009, "Member 'Swim_AnimBP_C_SetSwimmingAnimationDriverVariables::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Swim_AnimBP_C_SetSwimmingAnimationDriverVariables, CallFunc_GetVelocity_ReturnValue) == 0x00000C, "Member 'Swim_AnimBP_C_SetSwimmingAnimationDriverVariables::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Swim_AnimBP_C_SetSwimmingAnimationDriverVariables, CallFunc_VSize_ReturnValue) == 0x000018, "Member 'Swim_AnimBP_C_SetSwimmingAnimationDriverVariables::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(Swim_AnimBP_C_SetSwimmingAnimationDriverVariables, CallFunc_BooleanAND_ReturnValue) == 0x00001C, "Member 'Swim_AnimBP_C_SetSwimmingAnimationDriverVariables::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Swim_AnimBP_C_SetSwimmingAnimationDriverVariables, CallFunc_GetMovementComponent_ReturnValue_1) == 0x000020, "Member 'Swim_AnimBP_C_SetSwimmingAnimationDriverVariables::CallFunc_GetMovementComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Swim_AnimBP_C_SetSwimmingAnimationDriverVariables, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000028, "Member 'Swim_AnimBP_C_SetSwimmingAnimationDriverVariables::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Swim_AnimBP_C_SetSwimmingAnimationDriverVariables, CallFunc_IsFalling_ReturnValue) == 0x000034, "Member 'Swim_AnimBP_C_SetSwimmingAnimationDriverVariables::CallFunc_IsFalling_ReturnValue' has a wrong offset!");
static_assert(offsetof(Swim_AnimBP_C_SetSwimmingAnimationDriverVariables, CallFunc_K2_GetActorRotation_ReturnValue_1) == 0x000038, "Member 'Swim_AnimBP_C_SetSwimmingAnimationDriverVariables::CallFunc_K2_GetActorRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Swim_AnimBP_C_SetSwimmingAnimationDriverVariables, CallFunc_BreakRotator_Roll) == 0x000044, "Member 'Swim_AnimBP_C_SetSwimmingAnimationDriverVariables::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(Swim_AnimBP_C_SetSwimmingAnimationDriverVariables, CallFunc_BreakRotator_Pitch) == 0x000048, "Member 'Swim_AnimBP_C_SetSwimmingAnimationDriverVariables::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(Swim_AnimBP_C_SetSwimmingAnimationDriverVariables, CallFunc_BreakRotator_Yaw) == 0x00004C, "Member 'Swim_AnimBP_C_SetSwimmingAnimationDriverVariables::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(Swim_AnimBP_C_SetSwimmingAnimationDriverVariables, CallFunc_MakeRotator_ReturnValue) == 0x000050, "Member 'Swim_AnimBP_C_SetSwimmingAnimationDriverVariables::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Swim_AnimBP_C_SetSwimmingAnimationDriverVariables, CallFunc_RInterpTo_ReturnValue) == 0x00005C, "Member 'Swim_AnimBP_C_SetSwimmingAnimationDriverVariables::CallFunc_RInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(Swim_AnimBP_C_SetSwimmingAnimationDriverVariables, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000068, "Member 'Swim_AnimBP_C_SetSwimmingAnimationDriverVariables::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");

// Function Swim_AnimBP.Swim_AnimBP_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct Swim_AnimBP_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(Swim_AnimBP_C_AnimGraph) == 0x000008, "Wrong alignment on Swim_AnimBP_C_AnimGraph");
static_assert(sizeof(Swim_AnimBP_C_AnimGraph) == 0x000010, "Wrong size on Swim_AnimBP_C_AnimGraph");
static_assert(offsetof(Swim_AnimBP_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'Swim_AnimBP_C_AnimGraph::AnimGraph_0' has a wrong offset!");

}

