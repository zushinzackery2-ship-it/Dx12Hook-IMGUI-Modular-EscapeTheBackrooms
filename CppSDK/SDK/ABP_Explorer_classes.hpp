#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_Explorer

#include "Basic.hpp"

#include "AnimGraphRuntime_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_Explorer.ABP_Explorer_C
// 0x0530 (0x07F0 - 0x02C0)
class UABP_Explorer_C final : public UAnimInstance
{
public:
	uint8                                         Pad_2B8[0x8];                                      // 0x02B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x02C8(0x0030)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x02F8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x0320(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0348(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0370(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x0398(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x0418(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0448(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x04C8(0x0030)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x04F8(0x00E8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x05E0(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x0610(0x00B0)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x06C0(0x00A0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0760(0x0080)()
	bool                                          IsPassedOut;                                       // 0x07E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E1[0x3];                                      // 0x07E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Speed;                                             // 0x07E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Direction;                                         // 0x07E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsBeingCarried;                                    // 0x07EC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_ABP_Explorer(int32 EntryPoint);
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Explorer_AnimGraphNode_TransitionResult_D2266D7440FC430C17077A85BF03489D();
	void AnimGraph(struct FPoseLink* AnimGraph_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_Explorer_C">();
	}
	static class UABP_Explorer_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_Explorer_C>();
	}
};
static_assert(alignof(UABP_Explorer_C) == 0x000010, "Wrong alignment on UABP_Explorer_C");
static_assert(sizeof(UABP_Explorer_C) == 0x0007F0, "Wrong size on UABP_Explorer_C");
static_assert(offsetof(UABP_Explorer_C, UberGraphFrame) == 0x0002C0, "Member 'UABP_Explorer_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_Explorer_C, AnimGraphNode_Root) == 0x0002C8, "Member 'UABP_Explorer_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_Explorer_C, AnimGraphNode_TransitionResult_3) == 0x0002F8, "Member 'UABP_Explorer_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UABP_Explorer_C, AnimGraphNode_TransitionResult_2) == 0x000320, "Member 'UABP_Explorer_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UABP_Explorer_C, AnimGraphNode_TransitionResult_1) == 0x000348, "Member 'UABP_Explorer_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_Explorer_C, AnimGraphNode_TransitionResult) == 0x000370, "Member 'UABP_Explorer_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_Explorer_C, AnimGraphNode_SequencePlayer_2) == 0x000398, "Member 'UABP_Explorer_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_Explorer_C, AnimGraphNode_StateResult_2) == 0x000418, "Member 'UABP_Explorer_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UABP_Explorer_C, AnimGraphNode_SequencePlayer_1) == 0x000448, "Member 'UABP_Explorer_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_Explorer_C, AnimGraphNode_StateResult_1) == 0x0004C8, "Member 'UABP_Explorer_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_Explorer_C, AnimGraphNode_BlendSpacePlayer) == 0x0004F8, "Member 'UABP_Explorer_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UABP_Explorer_C, AnimGraphNode_StateResult) == 0x0005E0, "Member 'UABP_Explorer_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_Explorer_C, AnimGraphNode_StateMachine) == 0x000610, "Member 'UABP_Explorer_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_Explorer_C, AnimGraphNode_BlendListByBool) == 0x0006C0, "Member 'UABP_Explorer_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UABP_Explorer_C, AnimGraphNode_SequencePlayer) == 0x000760, "Member 'UABP_Explorer_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_Explorer_C, IsPassedOut) == 0x0007E0, "Member 'UABP_Explorer_C::IsPassedOut' has a wrong offset!");
static_assert(offsetof(UABP_Explorer_C, Speed) == 0x0007E4, "Member 'UABP_Explorer_C::Speed' has a wrong offset!");
static_assert(offsetof(UABP_Explorer_C, Direction) == 0x0007E8, "Member 'UABP_Explorer_C::Direction' has a wrong offset!");
static_assert(offsetof(UABP_Explorer_C, IsBeingCarried) == 0x0007EC, "Member 'UABP_Explorer_C::IsBeingCarried' has a wrong offset!");

}

