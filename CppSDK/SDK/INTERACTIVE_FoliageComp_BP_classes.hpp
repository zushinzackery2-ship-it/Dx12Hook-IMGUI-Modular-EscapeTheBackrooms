#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: INTERACTIVE_FoliageComp_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "InstanceStatus_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "InstanceData_structs.hpp"
#include "Foliage_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass INTERACTIVE_FoliageComp_BP.INTERACTIVE_FoliageComp_BP_C
// 0x0150 (0x0800 - 0x06B0)
class UINTERACTIVE_FoliageComp_BP_C : public UFoliageInstancedStaticMeshComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x06B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	float                                         Trample_BendAngle_WEIGHT;                          // 0x06B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Trample_Z_Scale_WEIGHT;                            // 0x06BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Trample_BendDuration_MULTIPLIER;                   // 0x06C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BendAway_Angle_WEIGHT;                             // 0x06C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BendAway__Z_Scale_WEIGHT;                          // 0x06C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BendAway_Duration_MULTIPLIER;                      // 0x06CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AInteractiveGrassManager_BP_C*          Manager;                                           // 0x06D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	TArray<int32>                                 trampledInstances;                                 // 0x06D8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, AdvancedDisplay)
	float                                         UnDeformSpeed;                                     // 0x06E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         UnDeformSpeedWhenTrampled;                         // 0x06EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              UnloadedViaStreaming;                              // 0x06F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	float                                         chunkSize_;                                        // 0x0700(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          okToChunk;                                         // 0x0704(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_705[0x3];                                      // 0x0705(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                upperLeftBBoxCorner;                               // 0x0708(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         upperLeftCorner_X;                                 // 0x0714(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         upperLeftCorner_Y;                                 // 0x0718(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         upperLeftCorner_Z;                                 // 0x071C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         X;                                                 // 0x0720(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         chunkAmount_X;                                     // 0x0724(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         chunkAmount_Y;                                     // 0x0728(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         I;                                                 // 0x072C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         J;                                                 // 0x0730(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_734[0x4];                                      // 0x0734(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UINTERACTIVE_FoliageComp_BP_C*>  chunkedComponents;                                 // 0x0738(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	int32                                         quarterOfInstances;                                // 0x0748(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         chunkNrX;                                          // 0x074C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         chunkNrY;                                          // 0x0750(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_754[0xC];                                      // 0x0754(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Transform;                                         // 0x0760(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	TMap<int32, struct FInstanceData>             InstanceData;                                      // 0x0790(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         DeformingOptimization;                             // 0x07E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E4[0x4];                                      // 0x07E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FTransform>                     TEMP_InstancesToAdd;                               // 0x07E8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_INTERACTIVE_FoliageComp_BP(int32 EntryPoint);
	void DivideIntoChunks_InfLoopWorkaround(float chunkSize);
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void ReceiveBeginPlay();
	void AddInstanceStatus(int32 InstanceIndex, EInstanceStatus Status);
	void RemoveInstanceStatus(int32 InstanceIndex, EInstanceStatus Status);
	void IsTrampled_(int32 InstanceIndex, bool* _);
	void RemoveAnyActiveStatuses(int32 InstanceIndex);
	void Copy_SetFoliageParameters(class UINTERACTIVE_FoliageComp_BP_C* copyFrom);
	void Copy_SetFoliageParameters_FromClass(class UClass* copyFrom, class UStaticMesh* meshToSet);
	void GetCurrentInstanceDeformAlpha(int32 InstanceIndex, bool* hasInstanceData, float* CurrentAlpha);
	void GetCurrentInstanceGPU_Offset(int32 InstanceIndex, bool AtSpecifiedAlpha, float SpecifiedAlpha, struct FVector* CurrentOffset);
	void GetCurrentInstanceUN_DeformAlpha(int32 InstanceIndex, bool* hasInstanceData, float* CurrentAlpha);
	void ForceMarkDirty();
	void Start_New_Instance_Offset(int32 Instance, const struct FVector& NewOffset, float DeformDuration, float UnDeformSpeed_0, bool UpdateComponent, float IgnoreIfGrowing);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"INTERACTIVE_FoliageComp_BP_C">();
	}
	static class UINTERACTIVE_FoliageComp_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UINTERACTIVE_FoliageComp_BP_C>();
	}
};
static_assert(alignof(UINTERACTIVE_FoliageComp_BP_C) == 0x000010, "Wrong alignment on UINTERACTIVE_FoliageComp_BP_C");
static_assert(sizeof(UINTERACTIVE_FoliageComp_BP_C) == 0x000800, "Wrong size on UINTERACTIVE_FoliageComp_BP_C");
static_assert(offsetof(UINTERACTIVE_FoliageComp_BP_C, UberGraphFrame) == 0x0006B0, "Member 'UINTERACTIVE_FoliageComp_BP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UINTERACTIVE_FoliageComp_BP_C, Trample_BendAngle_WEIGHT) == 0x0006B8, "Member 'UINTERACTIVE_FoliageComp_BP_C::Trample_BendAngle_WEIGHT' has a wrong offset!");
static_assert(offsetof(UINTERACTIVE_FoliageComp_BP_C, Trample_Z_Scale_WEIGHT) == 0x0006BC, "Member 'UINTERACTIVE_FoliageComp_BP_C::Trample_Z_Scale_WEIGHT' has a wrong offset!");
static_assert(offsetof(UINTERACTIVE_FoliageComp_BP_C, Trample_BendDuration_MULTIPLIER) == 0x0006C0, "Member 'UINTERACTIVE_FoliageComp_BP_C::Trample_BendDuration_MULTIPLIER' has a wrong offset!");
static_assert(offsetof(UINTERACTIVE_FoliageComp_BP_C, BendAway_Angle_WEIGHT) == 0x0006C4, "Member 'UINTERACTIVE_FoliageComp_BP_C::BendAway_Angle_WEIGHT' has a wrong offset!");
static_assert(offsetof(UINTERACTIVE_FoliageComp_BP_C, BendAway__Z_Scale_WEIGHT) == 0x0006C8, "Member 'UINTERACTIVE_FoliageComp_BP_C::BendAway__Z_Scale_WEIGHT' has a wrong offset!");
static_assert(offsetof(UINTERACTIVE_FoliageComp_BP_C, BendAway_Duration_MULTIPLIER) == 0x0006CC, "Member 'UINTERACTIVE_FoliageComp_BP_C::BendAway_Duration_MULTIPLIER' has a wrong offset!");
static_assert(offsetof(UINTERACTIVE_FoliageComp_BP_C, Manager) == 0x0006D0, "Member 'UINTERACTIVE_FoliageComp_BP_C::Manager' has a wrong offset!");
static_assert(offsetof(UINTERACTIVE_FoliageComp_BP_C, trampledInstances) == 0x0006D8, "Member 'UINTERACTIVE_FoliageComp_BP_C::trampledInstances' has a wrong offset!");
static_assert(offsetof(UINTERACTIVE_FoliageComp_BP_C, UnDeformSpeed) == 0x0006E8, "Member 'UINTERACTIVE_FoliageComp_BP_C::UnDeformSpeed' has a wrong offset!");
static_assert(offsetof(UINTERACTIVE_FoliageComp_BP_C, UnDeformSpeedWhenTrampled) == 0x0006EC, "Member 'UINTERACTIVE_FoliageComp_BP_C::UnDeformSpeedWhenTrampled' has a wrong offset!");
static_assert(offsetof(UINTERACTIVE_FoliageComp_BP_C, UnloadedViaStreaming) == 0x0006F0, "Member 'UINTERACTIVE_FoliageComp_BP_C::UnloadedViaStreaming' has a wrong offset!");
static_assert(offsetof(UINTERACTIVE_FoliageComp_BP_C, chunkSize_) == 0x000700, "Member 'UINTERACTIVE_FoliageComp_BP_C::chunkSize_' has a wrong offset!");
static_assert(offsetof(UINTERACTIVE_FoliageComp_BP_C, okToChunk) == 0x000704, "Member 'UINTERACTIVE_FoliageComp_BP_C::okToChunk' has a wrong offset!");
static_assert(offsetof(UINTERACTIVE_FoliageComp_BP_C, upperLeftBBoxCorner) == 0x000708, "Member 'UINTERACTIVE_FoliageComp_BP_C::upperLeftBBoxCorner' has a wrong offset!");
static_assert(offsetof(UINTERACTIVE_FoliageComp_BP_C, upperLeftCorner_X) == 0x000714, "Member 'UINTERACTIVE_FoliageComp_BP_C::upperLeftCorner_X' has a wrong offset!");
static_assert(offsetof(UINTERACTIVE_FoliageComp_BP_C, upperLeftCorner_Y) == 0x000718, "Member 'UINTERACTIVE_FoliageComp_BP_C::upperLeftCorner_Y' has a wrong offset!");
static_assert(offsetof(UINTERACTIVE_FoliageComp_BP_C, upperLeftCorner_Z) == 0x00071C, "Member 'UINTERACTIVE_FoliageComp_BP_C::upperLeftCorner_Z' has a wrong offset!");
static_assert(offsetof(UINTERACTIVE_FoliageComp_BP_C, X) == 0x000720, "Member 'UINTERACTIVE_FoliageComp_BP_C::X' has a wrong offset!");
static_assert(offsetof(UINTERACTIVE_FoliageComp_BP_C, chunkAmount_X) == 0x000724, "Member 'UINTERACTIVE_FoliageComp_BP_C::chunkAmount_X' has a wrong offset!");
static_assert(offsetof(UINTERACTIVE_FoliageComp_BP_C, chunkAmount_Y) == 0x000728, "Member 'UINTERACTIVE_FoliageComp_BP_C::chunkAmount_Y' has a wrong offset!");
static_assert(offsetof(UINTERACTIVE_FoliageComp_BP_C, I) == 0x00072C, "Member 'UINTERACTIVE_FoliageComp_BP_C::I' has a wrong offset!");
static_assert(offsetof(UINTERACTIVE_FoliageComp_BP_C, J) == 0x000730, "Member 'UINTERACTIVE_FoliageComp_BP_C::J' has a wrong offset!");
static_assert(offsetof(UINTERACTIVE_FoliageComp_BP_C, chunkedComponents) == 0x000738, "Member 'UINTERACTIVE_FoliageComp_BP_C::chunkedComponents' has a wrong offset!");
static_assert(offsetof(UINTERACTIVE_FoliageComp_BP_C, quarterOfInstances) == 0x000748, "Member 'UINTERACTIVE_FoliageComp_BP_C::quarterOfInstances' has a wrong offset!");
static_assert(offsetof(UINTERACTIVE_FoliageComp_BP_C, chunkNrX) == 0x00074C, "Member 'UINTERACTIVE_FoliageComp_BP_C::chunkNrX' has a wrong offset!");
static_assert(offsetof(UINTERACTIVE_FoliageComp_BP_C, chunkNrY) == 0x000750, "Member 'UINTERACTIVE_FoliageComp_BP_C::chunkNrY' has a wrong offset!");
static_assert(offsetof(UINTERACTIVE_FoliageComp_BP_C, Transform) == 0x000760, "Member 'UINTERACTIVE_FoliageComp_BP_C::Transform' has a wrong offset!");
static_assert(offsetof(UINTERACTIVE_FoliageComp_BP_C, InstanceData) == 0x000790, "Member 'UINTERACTIVE_FoliageComp_BP_C::InstanceData' has a wrong offset!");
static_assert(offsetof(UINTERACTIVE_FoliageComp_BP_C, DeformingOptimization) == 0x0007E0, "Member 'UINTERACTIVE_FoliageComp_BP_C::DeformingOptimization' has a wrong offset!");
static_assert(offsetof(UINTERACTIVE_FoliageComp_BP_C, TEMP_InstancesToAdd) == 0x0007E8, "Member 'UINTERACTIVE_FoliageComp_BP_C::TEMP_InstancesToAdd' has a wrong offset!");

}

