#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Lighthouse

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_Lighthouse.BP_Lighthouse_C.ExecuteUbergraph_BP_Lighthouse
// 0x00E0 (0x00E0 - 0x0000)
struct BP_Lighthouse_C_ExecuteUbergraph_BP_Lighthouse final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_1;                       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Lerp_ReturnValue_2;                       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_3;                       // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_4;                       // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_5;                       // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsTimerActiveHandle_ReturnValue;       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_IsTimerActiveHandle_ReturnValue_1;     // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B[0x5];                                       // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue;           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0054(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_Lighthouse_C_ExecuteUbergraph_BP_Lighthouse) == 0x000008, "Wrong alignment on BP_Lighthouse_C_ExecuteUbergraph_BP_Lighthouse");
static_assert(sizeof(BP_Lighthouse_C_ExecuteUbergraph_BP_Lighthouse) == 0x0000E0, "Wrong size on BP_Lighthouse_C_ExecuteUbergraph_BP_Lighthouse");
static_assert(offsetof(BP_Lighthouse_C_ExecuteUbergraph_BP_Lighthouse, EntryPoint) == 0x000000, "Member 'BP_Lighthouse_C_ExecuteUbergraph_BP_Lighthouse::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Lighthouse_C_ExecuteUbergraph_BP_Lighthouse, CallFunc_Lerp_ReturnValue) == 0x000004, "Member 'BP_Lighthouse_C_ExecuteUbergraph_BP_Lighthouse::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lighthouse_C_ExecuteUbergraph_BP_Lighthouse, CallFunc_Lerp_ReturnValue_1) == 0x000008, "Member 'BP_Lighthouse_C_ExecuteUbergraph_BP_Lighthouse::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Lighthouse_C_ExecuteUbergraph_BP_Lighthouse, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00000C, "Member 'BP_Lighthouse_C_ExecuteUbergraph_BP_Lighthouse::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lighthouse_C_ExecuteUbergraph_BP_Lighthouse, CallFunc_Lerp_ReturnValue_2) == 0x000010, "Member 'BP_Lighthouse_C_ExecuteUbergraph_BP_Lighthouse::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Lighthouse_C_ExecuteUbergraph_BP_Lighthouse, CallFunc_Lerp_ReturnValue_3) == 0x000014, "Member 'BP_Lighthouse_C_ExecuteUbergraph_BP_Lighthouse::CallFunc_Lerp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Lighthouse_C_ExecuteUbergraph_BP_Lighthouse, CallFunc_Lerp_ReturnValue_4) == 0x000018, "Member 'BP_Lighthouse_C_ExecuteUbergraph_BP_Lighthouse::CallFunc_Lerp_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Lighthouse_C_ExecuteUbergraph_BP_Lighthouse, CallFunc_Lerp_ReturnValue_5) == 0x00001C, "Member 'BP_Lighthouse_C_ExecuteUbergraph_BP_Lighthouse::CallFunc_Lerp_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Lighthouse_C_ExecuteUbergraph_BP_Lighthouse, CallFunc_K2_SetTimer_ReturnValue) == 0x000020, "Member 'BP_Lighthouse_C_ExecuteUbergraph_BP_Lighthouse::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lighthouse_C_ExecuteUbergraph_BP_Lighthouse, CallFunc_K2_IsTimerActiveHandle_ReturnValue) == 0x000028, "Member 'BP_Lighthouse_C_ExecuteUbergraph_BP_Lighthouse::CallFunc_K2_IsTimerActiveHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lighthouse_C_ExecuteUbergraph_BP_Lighthouse, CallFunc_K2_IsTimerActiveHandle_ReturnValue_1) == 0x000029, "Member 'BP_Lighthouse_C_ExecuteUbergraph_BP_Lighthouse::CallFunc_K2_IsTimerActiveHandle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Lighthouse_C_ExecuteUbergraph_BP_Lighthouse, CallFunc_Not_PreBool_ReturnValue) == 0x00002A, "Member 'BP_Lighthouse_C_ExecuteUbergraph_BP_Lighthouse::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lighthouse_C_ExecuteUbergraph_BP_Lighthouse, CallFunc_SpawnSoundAttached_ReturnValue) == 0x000030, "Member 'BP_Lighthouse_C_ExecuteUbergraph_BP_Lighthouse::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lighthouse_C_ExecuteUbergraph_BP_Lighthouse, CallFunc_BreakRotator_Roll) == 0x000038, "Member 'BP_Lighthouse_C_ExecuteUbergraph_BP_Lighthouse::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_Lighthouse_C_ExecuteUbergraph_BP_Lighthouse, CallFunc_BreakRotator_Pitch) == 0x00003C, "Member 'BP_Lighthouse_C_ExecuteUbergraph_BP_Lighthouse::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_Lighthouse_C_ExecuteUbergraph_BP_Lighthouse, CallFunc_BreakRotator_Yaw) == 0x000040, "Member 'BP_Lighthouse_C_ExecuteUbergraph_BP_Lighthouse::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_Lighthouse_C_ExecuteUbergraph_BP_Lighthouse, CallFunc_Add_FloatFloat_ReturnValue) == 0x000044, "Member 'BP_Lighthouse_C_ExecuteUbergraph_BP_Lighthouse::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lighthouse_C_ExecuteUbergraph_BP_Lighthouse, CallFunc_MakeRotator_ReturnValue) == 0x000048, "Member 'BP_Lighthouse_C_ExecuteUbergraph_BP_Lighthouse::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lighthouse_C_ExecuteUbergraph_BP_Lighthouse, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000054, "Member 'BP_Lighthouse_C_ExecuteUbergraph_BP_Lighthouse::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");

// Function BP_Lighthouse.BP_Lighthouse_C.UserConstructionScript
// 0x0018 (0x0018 - 0x0000)
struct BP_Lighthouse_C_UserConstructionScript final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_1; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_2; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Lighthouse_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_Lighthouse_C_UserConstructionScript");
static_assert(sizeof(BP_Lighthouse_C_UserConstructionScript) == 0x000018, "Wrong size on BP_Lighthouse_C_UserConstructionScript");
static_assert(offsetof(BP_Lighthouse_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000000, "Member 'BP_Lighthouse_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lighthouse_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue_1) == 0x000008, "Member 'BP_Lighthouse_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Lighthouse_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue_2) == 0x000010, "Member 'BP_Lighthouse_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue_2' has a wrong offset!");

// Function BP_Lighthouse.BP_Lighthouse_C.OnRep_IsOn
// 0x00E0 (0x00E0 - 0x0000)
struct BP_Lighthouse_C_OnRep_IsOn final
{
public:
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue;           // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x0058(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_Lighthouse_C_OnRep_IsOn) == 0x000008, "Wrong alignment on BP_Lighthouse_C_OnRep_IsOn");
static_assert(sizeof(BP_Lighthouse_C_OnRep_IsOn) == 0x0000E0, "Wrong size on BP_Lighthouse_C_OnRep_IsOn");
static_assert(offsetof(BP_Lighthouse_C_OnRep_IsOn, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000000, "Member 'BP_Lighthouse_C_OnRep_IsOn::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lighthouse_C_OnRep_IsOn, CallFunc_GetPlayerPawn_ReturnValue) == 0x000010, "Member 'BP_Lighthouse_C_OnRep_IsOn::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lighthouse_C_OnRep_IsOn, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_Lighthouse_C_OnRep_IsOn::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lighthouse_C_OnRep_IsOn, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x00001C, "Member 'BP_Lighthouse_C_OnRep_IsOn::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Lighthouse_C_OnRep_IsOn, CallFunc_FindLookAtRotation_ReturnValue) == 0x000028, "Member 'BP_Lighthouse_C_OnRep_IsOn::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lighthouse_C_OnRep_IsOn, CallFunc_BreakRotator_Roll) == 0x000034, "Member 'BP_Lighthouse_C_OnRep_IsOn::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_Lighthouse_C_OnRep_IsOn, CallFunc_BreakRotator_Pitch) == 0x000038, "Member 'BP_Lighthouse_C_OnRep_IsOn::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_Lighthouse_C_OnRep_IsOn, CallFunc_BreakRotator_Yaw) == 0x00003C, "Member 'BP_Lighthouse_C_OnRep_IsOn::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_Lighthouse_C_OnRep_IsOn, CallFunc_Add_FloatFloat_ReturnValue) == 0x000040, "Member 'BP_Lighthouse_C_OnRep_IsOn::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lighthouse_C_OnRep_IsOn, CallFunc_MakeRotator_ReturnValue) == 0x000044, "Member 'BP_Lighthouse_C_OnRep_IsOn::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lighthouse_C_OnRep_IsOn, CallFunc_SpawnSoundAttached_ReturnValue) == 0x000050, "Member 'BP_Lighthouse_C_OnRep_IsOn::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lighthouse_C_OnRep_IsOn, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x000058, "Member 'BP_Lighthouse_C_OnRep_IsOn::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");

// Function BP_Lighthouse.BP_Lighthouse_C.Play Lighthouse
// 0x0001 (0x0001 - 0x0000)
struct BP_Lighthouse_C_Play_Lighthouse final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Lighthouse_C_Play_Lighthouse) == 0x000001, "Wrong alignment on BP_Lighthouse_C_Play_Lighthouse");
static_assert(sizeof(BP_Lighthouse_C_Play_Lighthouse) == 0x000001, "Wrong size on BP_Lighthouse_C_Play_Lighthouse");
static_assert(offsetof(BP_Lighthouse_C_Play_Lighthouse, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'BP_Lighthouse_C_Play_Lighthouse::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

}

