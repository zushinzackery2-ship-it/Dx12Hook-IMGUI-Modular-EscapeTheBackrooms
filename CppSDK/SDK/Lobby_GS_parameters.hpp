#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Lobby_GS

#include "Basic.hpp"

#include "S_Gamemode_structs.hpp"
#include "UMG_structs.hpp"
#include "S_PlayerConnectionInfo_structs.hpp"
#include "S_ConnectedPlayer_structs.hpp"
#include "AdvancedSessions_structs.hpp"


namespace SDK::Params
{

// Function Lobby_GS.Lobby_GS_C.ExecuteUbergraph_Lobby_GS
// 0x0130 (0x0130 - 0x0000)
struct Lobby_GS_C_ExecuteUbergraph_Lobby_GS final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0024(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_CustomEvent_CanJoin;                        // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSessionSettings_NumConnections;        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSessionSettings_NumPrivateConnections; // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSessionSettings_bIsLAN;                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetSessionSettings_bIsDedicated;          // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetSessionSettings_bAllowInvites;         // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetSessionSettings_bAllowJoinInProgress;  // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetSessionSettings_bIsAnticheatEnabled;   // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSessionSettings_BuildUniqueID;         // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSessionPropertyKeyPair>        CallFunc_GetSessionSettings_ExtraSettings;         // 0x0050(0x0010)(ReferenceParm)
	EBlueprintResultSwitch                        CallFunc_GetSessionSettings_Result;                // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSessionPropertyKeyPair                CallFunc_MakeLiteralSessionPropertyBool_ReturnValue; // 0x0068(0x0020)()
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSessionPropertyKeyPair>        K2Node_MakeArray_Array;                            // 0x0090(0x0010)(ReferenceParm)
	TArray<struct FSessionPropertyKeyPair>        CallFunc_AddOrModifyExtraSettings_ModifiedSettingsArray; // 0x00A0(0x0010)(ReferenceParm)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x00B0(0x0010)(ZeroConstructor, NoDestructor)
	class UUpdateSessionCallbackProxyAdvanced*    CallFunc_UpdateSession_ReturnValue;                // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUpdateSessionCallbackProxyAdvanced*    CallFunc_UpdateSession_ReturnValue_1;              // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D2[0x2];                                       // 0x00D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSessionSettings_NumConnections_1;      // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSessionSettings_NumPrivateConnections_1; // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSessionSettings_bIsLAN_1;              // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetSessionSettings_bIsDedicated_1;        // 0x00DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetSessionSettings_bAllowInvites_1;       // 0x00DE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetSessionSettings_bAllowJoinInProgress_1; // 0x00DF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetSessionSettings_bIsAnticheatEnabled_1; // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSessionSettings_BuildUniqueID_1;       // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FSessionPropertyKeyPair>        CallFunc_GetSessionSettings_ExtraSettings_1;       // 0x00E8(0x0010)(ReferenceParm)
	EBlueprintResultSwitch                        CallFunc_GetSessionSettings_Result_1;              // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESessionSettingSearchResult                   CallFunc_GetSessionPropertyBool_SearchResult;      // 0x00FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSessionPropertyBool_SettingValue;      // 0x00FB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue;            // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOnAnySonyPlatform_ReturnValue;          // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Lobby_GS_C_ExecuteUbergraph_Lobby_GS) == 0x000008, "Wrong alignment on Lobby_GS_C_ExecuteUbergraph_Lobby_GS");
static_assert(sizeof(Lobby_GS_C_ExecuteUbergraph_Lobby_GS) == 0x000130, "Wrong size on Lobby_GS_C_ExecuteUbergraph_Lobby_GS");
static_assert(offsetof(Lobby_GS_C_ExecuteUbergraph_Lobby_GS, EntryPoint) == 0x000000, "Member 'Lobby_GS_C_ExecuteUbergraph_Lobby_GS::EntryPoint' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_ExecuteUbergraph_Lobby_GS, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'Lobby_GS_C_ExecuteUbergraph_Lobby_GS::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_ExecuteUbergraph_Lobby_GS, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'Lobby_GS_C_ExecuteUbergraph_Lobby_GS::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_ExecuteUbergraph_Lobby_GS, K2Node_CreateDelegate_OutputDelegate_2) == 0x000024, "Member 'Lobby_GS_C_ExecuteUbergraph_Lobby_GS::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_ExecuteUbergraph_Lobby_GS, K2Node_CustomEvent_CanJoin) == 0x000034, "Member 'Lobby_GS_C_ExecuteUbergraph_Lobby_GS::K2Node_CustomEvent_CanJoin' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_ExecuteUbergraph_Lobby_GS, CallFunc_GetSessionSettings_NumConnections) == 0x000038, "Member 'Lobby_GS_C_ExecuteUbergraph_Lobby_GS::CallFunc_GetSessionSettings_NumConnections' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_ExecuteUbergraph_Lobby_GS, CallFunc_GetSessionSettings_NumPrivateConnections) == 0x00003C, "Member 'Lobby_GS_C_ExecuteUbergraph_Lobby_GS::CallFunc_GetSessionSettings_NumPrivateConnections' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_ExecuteUbergraph_Lobby_GS, CallFunc_GetSessionSettings_bIsLAN) == 0x000040, "Member 'Lobby_GS_C_ExecuteUbergraph_Lobby_GS::CallFunc_GetSessionSettings_bIsLAN' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_ExecuteUbergraph_Lobby_GS, CallFunc_GetSessionSettings_bIsDedicated) == 0x000041, "Member 'Lobby_GS_C_ExecuteUbergraph_Lobby_GS::CallFunc_GetSessionSettings_bIsDedicated' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_ExecuteUbergraph_Lobby_GS, CallFunc_GetSessionSettings_bAllowInvites) == 0x000042, "Member 'Lobby_GS_C_ExecuteUbergraph_Lobby_GS::CallFunc_GetSessionSettings_bAllowInvites' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_ExecuteUbergraph_Lobby_GS, CallFunc_GetSessionSettings_bAllowJoinInProgress) == 0x000043, "Member 'Lobby_GS_C_ExecuteUbergraph_Lobby_GS::CallFunc_GetSessionSettings_bAllowJoinInProgress' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_ExecuteUbergraph_Lobby_GS, CallFunc_GetSessionSettings_bIsAnticheatEnabled) == 0x000044, "Member 'Lobby_GS_C_ExecuteUbergraph_Lobby_GS::CallFunc_GetSessionSettings_bIsAnticheatEnabled' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_ExecuteUbergraph_Lobby_GS, CallFunc_GetSessionSettings_BuildUniqueID) == 0x000048, "Member 'Lobby_GS_C_ExecuteUbergraph_Lobby_GS::CallFunc_GetSessionSettings_BuildUniqueID' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_ExecuteUbergraph_Lobby_GS, CallFunc_GetSessionSettings_ExtraSettings) == 0x000050, "Member 'Lobby_GS_C_ExecuteUbergraph_Lobby_GS::CallFunc_GetSessionSettings_ExtraSettings' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_ExecuteUbergraph_Lobby_GS, CallFunc_GetSessionSettings_Result) == 0x000060, "Member 'Lobby_GS_C_ExecuteUbergraph_Lobby_GS::CallFunc_GetSessionSettings_Result' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_ExecuteUbergraph_Lobby_GS, CallFunc_MakeLiteralSessionPropertyBool_ReturnValue) == 0x000068, "Member 'Lobby_GS_C_ExecuteUbergraph_Lobby_GS::CallFunc_MakeLiteralSessionPropertyBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_ExecuteUbergraph_Lobby_GS, K2Node_SwitchEnum_CmpSuccess) == 0x000088, "Member 'Lobby_GS_C_ExecuteUbergraph_Lobby_GS::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_ExecuteUbergraph_Lobby_GS, K2Node_MakeArray_Array) == 0x000090, "Member 'Lobby_GS_C_ExecuteUbergraph_Lobby_GS::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_ExecuteUbergraph_Lobby_GS, CallFunc_AddOrModifyExtraSettings_ModifiedSettingsArray) == 0x0000A0, "Member 'Lobby_GS_C_ExecuteUbergraph_Lobby_GS::CallFunc_AddOrModifyExtraSettings_ModifiedSettingsArray' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_ExecuteUbergraph_Lobby_GS, K2Node_CreateDelegate_OutputDelegate_3) == 0x0000B0, "Member 'Lobby_GS_C_ExecuteUbergraph_Lobby_GS::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_ExecuteUbergraph_Lobby_GS, CallFunc_UpdateSession_ReturnValue) == 0x0000C0, "Member 'Lobby_GS_C_ExecuteUbergraph_Lobby_GS::CallFunc_UpdateSession_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_ExecuteUbergraph_Lobby_GS, CallFunc_UpdateSession_ReturnValue_1) == 0x0000C8, "Member 'Lobby_GS_C_ExecuteUbergraph_Lobby_GS::CallFunc_UpdateSession_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_ExecuteUbergraph_Lobby_GS, CallFunc_IsValid_ReturnValue) == 0x0000D0, "Member 'Lobby_GS_C_ExecuteUbergraph_Lobby_GS::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_ExecuteUbergraph_Lobby_GS, CallFunc_IsValid_ReturnValue_1) == 0x0000D1, "Member 'Lobby_GS_C_ExecuteUbergraph_Lobby_GS::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_ExecuteUbergraph_Lobby_GS, CallFunc_GetSessionSettings_NumConnections_1) == 0x0000D4, "Member 'Lobby_GS_C_ExecuteUbergraph_Lobby_GS::CallFunc_GetSessionSettings_NumConnections_1' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_ExecuteUbergraph_Lobby_GS, CallFunc_GetSessionSettings_NumPrivateConnections_1) == 0x0000D8, "Member 'Lobby_GS_C_ExecuteUbergraph_Lobby_GS::CallFunc_GetSessionSettings_NumPrivateConnections_1' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_ExecuteUbergraph_Lobby_GS, CallFunc_GetSessionSettings_bIsLAN_1) == 0x0000DC, "Member 'Lobby_GS_C_ExecuteUbergraph_Lobby_GS::CallFunc_GetSessionSettings_bIsLAN_1' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_ExecuteUbergraph_Lobby_GS, CallFunc_GetSessionSettings_bIsDedicated_1) == 0x0000DD, "Member 'Lobby_GS_C_ExecuteUbergraph_Lobby_GS::CallFunc_GetSessionSettings_bIsDedicated_1' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_ExecuteUbergraph_Lobby_GS, CallFunc_GetSessionSettings_bAllowInvites_1) == 0x0000DE, "Member 'Lobby_GS_C_ExecuteUbergraph_Lobby_GS::CallFunc_GetSessionSettings_bAllowInvites_1' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_ExecuteUbergraph_Lobby_GS, CallFunc_GetSessionSettings_bAllowJoinInProgress_1) == 0x0000DF, "Member 'Lobby_GS_C_ExecuteUbergraph_Lobby_GS::CallFunc_GetSessionSettings_bAllowJoinInProgress_1' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_ExecuteUbergraph_Lobby_GS, CallFunc_GetSessionSettings_bIsAnticheatEnabled_1) == 0x0000E0, "Member 'Lobby_GS_C_ExecuteUbergraph_Lobby_GS::CallFunc_GetSessionSettings_bIsAnticheatEnabled_1' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_ExecuteUbergraph_Lobby_GS, CallFunc_GetSessionSettings_BuildUniqueID_1) == 0x0000E4, "Member 'Lobby_GS_C_ExecuteUbergraph_Lobby_GS::CallFunc_GetSessionSettings_BuildUniqueID_1' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_ExecuteUbergraph_Lobby_GS, CallFunc_GetSessionSettings_ExtraSettings_1) == 0x0000E8, "Member 'Lobby_GS_C_ExecuteUbergraph_Lobby_GS::CallFunc_GetSessionSettings_ExtraSettings_1' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_ExecuteUbergraph_Lobby_GS, CallFunc_GetSessionSettings_Result_1) == 0x0000F8, "Member 'Lobby_GS_C_ExecuteUbergraph_Lobby_GS::CallFunc_GetSessionSettings_Result_1' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_ExecuteUbergraph_Lobby_GS, K2Node_SwitchEnum_CmpSuccess_1) == 0x0000F9, "Member 'Lobby_GS_C_ExecuteUbergraph_Lobby_GS::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_ExecuteUbergraph_Lobby_GS, CallFunc_GetSessionPropertyBool_SearchResult) == 0x0000FA, "Member 'Lobby_GS_C_ExecuteUbergraph_Lobby_GS::CallFunc_GetSessionPropertyBool_SearchResult' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_ExecuteUbergraph_Lobby_GS, CallFunc_GetSessionPropertyBool_SettingValue) == 0x0000FB, "Member 'Lobby_GS_C_ExecuteUbergraph_Lobby_GS::CallFunc_GetSessionPropertyBool_SettingValue' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_ExecuteUbergraph_Lobby_GS, CallFunc_Conv_BoolToString_ReturnValue) == 0x000100, "Member 'Lobby_GS_C_ExecuteUbergraph_Lobby_GS::CallFunc_Conv_BoolToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_ExecuteUbergraph_Lobby_GS, K2Node_SwitchEnum_CmpSuccess_2) == 0x000110, "Member 'Lobby_GS_C_ExecuteUbergraph_Lobby_GS::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_ExecuteUbergraph_Lobby_GS, CallFunc_Concat_StrStr_ReturnValue) == 0x000118, "Member 'Lobby_GS_C_ExecuteUbergraph_Lobby_GS::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_ExecuteUbergraph_Lobby_GS, CallFunc_IsOnAnySonyPlatform_ReturnValue) == 0x000128, "Member 'Lobby_GS_C_ExecuteUbergraph_Lobby_GS::CallFunc_IsOnAnySonyPlatform_ReturnValue' has a wrong offset!");

// Function Lobby_GS.Lobby_GS_C.UpdateCanJoin
// 0x0001 (0x0001 - 0x0000)
struct Lobby_GS_C_UpdateCanJoin final
{
public:
	bool                                          CanJoin;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Lobby_GS_C_UpdateCanJoin) == 0x000001, "Wrong alignment on Lobby_GS_C_UpdateCanJoin");
static_assert(sizeof(Lobby_GS_C_UpdateCanJoin) == 0x000001, "Wrong size on Lobby_GS_C_UpdateCanJoin");
static_assert(offsetof(Lobby_GS_C_UpdateCanJoin, CanJoin) == 0x000000, "Member 'Lobby_GS_C_UpdateCanJoin::CanJoin' has a wrong offset!");

// Function Lobby_GS.Lobby_GS_C.Update_ConnectedPlayers_Array
// 0x00D0 (0x00D0 - 0x0000)
struct Lobby_GS_C_Update_ConnectedPlayers_Array final
{
public:
	TArray<struct FS_ConnectedPlayer>             LocalPlayersConnected;                             // 0x0000(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerState*                           CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ALobbyPS_C*                             K2Node_DynamicCast_AsLobby_PS;                     // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBPUniqueNetId                         CallFunc_GetUniqueNetIDFromPlayerState_UniqueNetId; // 0x0040(0x0028)()
	struct FS_PlayerConnectionInfo                K2Node_MakeStruct_S_PlayerConnectionInfo;          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_ConnectedPlayer                     K2Node_MakeStruct_S_ConnectedPlayer;               // 0x0070(0x0058)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Lobby_GS_C_Update_ConnectedPlayers_Array) == 0x000008, "Wrong alignment on Lobby_GS_C_Update_ConnectedPlayers_Array");
static_assert(sizeof(Lobby_GS_C_Update_ConnectedPlayers_Array) == 0x0000D0, "Wrong size on Lobby_GS_C_Update_ConnectedPlayers_Array");
static_assert(offsetof(Lobby_GS_C_Update_ConnectedPlayers_Array, LocalPlayersConnected) == 0x000000, "Member 'Lobby_GS_C_Update_ConnectedPlayers_Array::LocalPlayersConnected' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_Update_ConnectedPlayers_Array, Temp_int_Array_Index_Variable) == 0x000010, "Member 'Lobby_GS_C_Update_ConnectedPlayers_Array::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_Update_ConnectedPlayers_Array, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'Lobby_GS_C_Update_ConnectedPlayers_Array::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_Update_ConnectedPlayers_Array, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'Lobby_GS_C_Update_ConnectedPlayers_Array::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_Update_ConnectedPlayers_Array, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'Lobby_GS_C_Update_ConnectedPlayers_Array::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_Update_ConnectedPlayers_Array, CallFunc_Array_Get_Item) == 0x000020, "Member 'Lobby_GS_C_Update_ConnectedPlayers_Array::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_Update_ConnectedPlayers_Array, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'Lobby_GS_C_Update_ConnectedPlayers_Array::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_Update_ConnectedPlayers_Array, K2Node_DynamicCast_AsLobby_PS) == 0x000030, "Member 'Lobby_GS_C_Update_ConnectedPlayers_Array::K2Node_DynamicCast_AsLobby_PS' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_Update_ConnectedPlayers_Array, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'Lobby_GS_C_Update_ConnectedPlayers_Array::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_Update_ConnectedPlayers_Array, CallFunc_GetUniqueNetIDFromPlayerState_UniqueNetId) == 0x000040, "Member 'Lobby_GS_C_Update_ConnectedPlayers_Array::CallFunc_GetUniqueNetIDFromPlayerState_UniqueNetId' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_Update_ConnectedPlayers_Array, K2Node_MakeStruct_S_PlayerConnectionInfo) == 0x000068, "Member 'Lobby_GS_C_Update_ConnectedPlayers_Array::K2Node_MakeStruct_S_PlayerConnectionInfo' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_Update_ConnectedPlayers_Array, K2Node_MakeStruct_S_ConnectedPlayer) == 0x000070, "Member 'Lobby_GS_C_Update_ConnectedPlayers_Array::K2Node_MakeStruct_S_ConnectedPlayer' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_Update_ConnectedPlayers_Array, CallFunc_Array_Add_ReturnValue) == 0x0000C8, "Member 'Lobby_GS_C_Update_ConnectedPlayers_Array::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function Lobby_GS.Lobby_GS_C.OnRep_PlayersConnected
// 0x0002 (0x0002 - 0x0000)
struct Lobby_GS_C_OnRep_PlayersConnected final
{
public:
	bool                                          CallFunc_Check_EveryoneReady__CanStart;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Lobby_GS_C_OnRep_PlayersConnected) == 0x000001, "Wrong alignment on Lobby_GS_C_OnRep_PlayersConnected");
static_assert(sizeof(Lobby_GS_C_OnRep_PlayersConnected) == 0x000002, "Wrong size on Lobby_GS_C_OnRep_PlayersConnected");
static_assert(offsetof(Lobby_GS_C_OnRep_PlayersConnected, CallFunc_Check_EveryoneReady__CanStart) == 0x000000, "Member 'Lobby_GS_C_OnRep_PlayersConnected::CallFunc_Check_EveryoneReady__CanStart' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_OnRep_PlayersConnected, CallFunc_HasAuthority_ReturnValue) == 0x000001, "Member 'Lobby_GS_C_OnRep_PlayersConnected::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");

// Function Lobby_GS.Lobby_GS_C.Update_ServerName
// 0x0068 (0x0068 - 0x0000)
struct Lobby_GS_C_Update_ServerName final
{
public:
	class FText                                   SessionName;                                       // 0x0000(0x0018)(Edit, BlueprintVisible)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerState*                           CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABasePS_C*                              K2Node_DynamicCast_AsBase_PS;                      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0050(0x0018)()
};
static_assert(alignof(Lobby_GS_C_Update_ServerName) == 0x000008, "Wrong alignment on Lobby_GS_C_Update_ServerName");
static_assert(sizeof(Lobby_GS_C_Update_ServerName) == 0x000068, "Wrong size on Lobby_GS_C_Update_ServerName");
static_assert(offsetof(Lobby_GS_C_Update_ServerName, SessionName) == 0x000000, "Member 'Lobby_GS_C_Update_ServerName::SessionName' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_Update_ServerName, Temp_bool_True_if_break_was_hit_Variable) == 0x000018, "Member 'Lobby_GS_C_Update_ServerName::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_Update_ServerName, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'Lobby_GS_C_Update_ServerName::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_Update_ServerName, CallFunc_Not_PreBool_ReturnValue) == 0x000020, "Member 'Lobby_GS_C_Update_ServerName::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_Update_ServerName, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'Lobby_GS_C_Update_ServerName::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_Update_ServerName, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'Lobby_GS_C_Update_ServerName::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_Update_ServerName, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'Lobby_GS_C_Update_ServerName::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_Update_ServerName, CallFunc_Array_Get_Item) == 0x000030, "Member 'Lobby_GS_C_Update_ServerName::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_Update_ServerName, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'Lobby_GS_C_Update_ServerName::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_Update_ServerName, K2Node_DynamicCast_AsBase_PS) == 0x000040, "Member 'Lobby_GS_C_Update_ServerName::K2Node_DynamicCast_AsBase_PS' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_Update_ServerName, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'Lobby_GS_C_Update_ServerName::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_Update_ServerName, CallFunc_BooleanAND_ReturnValue) == 0x000049, "Member 'Lobby_GS_C_Update_ServerName::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_Update_ServerName, CallFunc_Conv_StringToText_ReturnValue) == 0x000050, "Member 'Lobby_GS_C_Update_ServerName::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function Lobby_GS.Lobby_GS_C.OnRep_ServerName
// 0x0018 (0x0018 - 0x0000)
struct Lobby_GS_C_OnRep_ServerName final
{
public:
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ALobby_PlayerController_C*              K2Node_DynamicCast_AsLobby_Player_Controller;      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Lobby_GS_C_OnRep_ServerName) == 0x000008, "Wrong alignment on Lobby_GS_C_OnRep_ServerName");
static_assert(sizeof(Lobby_GS_C_OnRep_ServerName) == 0x000018, "Wrong size on Lobby_GS_C_OnRep_ServerName");
static_assert(offsetof(Lobby_GS_C_OnRep_ServerName, CallFunc_GetPlayerController_ReturnValue) == 0x000000, "Member 'Lobby_GS_C_OnRep_ServerName::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_OnRep_ServerName, K2Node_DynamicCast_AsLobby_Player_Controller) == 0x000008, "Member 'Lobby_GS_C_OnRep_ServerName::K2Node_DynamicCast_AsLobby_Player_Controller' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_OnRep_ServerName, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'Lobby_GS_C_OnRep_ServerName::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function Lobby_GS.Lobby_GS_C.Check_EveryoneReady?
// 0x0090 (0x0090 - 0x0000)
struct Lobby_GS_C_Check_EveryoneReady_ final
{
public:
	bool                                          CanStart;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NumReady;                                          // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F[0x1];                                       // 0x001F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_ConnectedPlayer                     CallFunc_Array_Get_Item;                           // 0x0028(0x0058)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Lobby_GS_C_Check_EveryoneReady_) == 0x000008, "Wrong alignment on Lobby_GS_C_Check_EveryoneReady_");
static_assert(sizeof(Lobby_GS_C_Check_EveryoneReady_) == 0x000090, "Wrong size on Lobby_GS_C_Check_EveryoneReady_");
static_assert(offsetof(Lobby_GS_C_Check_EveryoneReady_, CanStart) == 0x000000, "Member 'Lobby_GS_C_Check_EveryoneReady_::CanStart' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_Check_EveryoneReady_, NumReady) == 0x000004, "Member 'Lobby_GS_C_Check_EveryoneReady_::NumReady' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_Check_EveryoneReady_, Temp_int_Array_Index_Variable) == 0x000008, "Member 'Lobby_GS_C_Check_EveryoneReady_::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_Check_EveryoneReady_, Temp_int_Variable) == 0x00000C, "Member 'Lobby_GS_C_Check_EveryoneReady_::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_Check_EveryoneReady_, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000010, "Member 'Lobby_GS_C_Check_EveryoneReady_::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_Check_EveryoneReady_, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'Lobby_GS_C_Check_EveryoneReady_::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_Check_EveryoneReady_, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000018, "Member 'Lobby_GS_C_Check_EveryoneReady_::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_Check_EveryoneReady_, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00001C, "Member 'Lobby_GS_C_Check_EveryoneReady_::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_Check_EveryoneReady_, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x00001D, "Member 'Lobby_GS_C_Check_EveryoneReady_::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_Check_EveryoneReady_, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00001E, "Member 'Lobby_GS_C_Check_EveryoneReady_::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_Check_EveryoneReady_, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'Lobby_GS_C_Check_EveryoneReady_::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_Check_EveryoneReady_, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'Lobby_GS_C_Check_EveryoneReady_::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_Check_EveryoneReady_, CallFunc_Array_Get_Item) == 0x000028, "Member 'Lobby_GS_C_Check_EveryoneReady_::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_Check_EveryoneReady_, CallFunc_Add_IntInt_ReturnValue_1) == 0x000080, "Member 'Lobby_GS_C_Check_EveryoneReady_::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_Check_EveryoneReady_, CallFunc_Array_Length_ReturnValue_1) == 0x000084, "Member 'Lobby_GS_C_Check_EveryoneReady_::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_Check_EveryoneReady_, CallFunc_Less_IntInt_ReturnValue) == 0x000088, "Member 'Lobby_GS_C_Check_EveryoneReady_::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function Lobby_GS.Lobby_GS_C.OnRep_Launching?
// 0x0020 (0x0020 - 0x0000)
struct Lobby_GS_C_OnRep_Launching_ final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ALobbyPS_C*                             K2Node_DynamicCast_AsLobby_PS;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Lobby_GS_C_OnRep_Launching_) == 0x000008, "Wrong alignment on Lobby_GS_C_OnRep_Launching_");
static_assert(sizeof(Lobby_GS_C_OnRep_Launching_) == 0x000020, "Wrong size on Lobby_GS_C_OnRep_Launching_");
static_assert(offsetof(Lobby_GS_C_OnRep_Launching_, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'Lobby_GS_C_OnRep_Launching_::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_OnRep_Launching_, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'Lobby_GS_C_OnRep_Launching_::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_OnRep_Launching_, K2Node_DynamicCast_AsLobby_PS) == 0x000010, "Member 'Lobby_GS_C_OnRep_Launching_::K2Node_DynamicCast_AsLobby_PS' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_OnRep_Launching_, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'Lobby_GS_C_OnRep_Launching_::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function Lobby_GS.Lobby_GS_C.Update_Lobby_StatusIndicator
// 0x0038 (0x0038 - 0x0000)
struct Lobby_GS_C_Update_Lobby_StatusIndicator final
{
public:
	ESlateVisibility                              CircularThrobber_Visibility;                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   LobbyStatus_Text;                                  // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ALobby_PlayerController_Nebula_C*       K2Node_DynamicCast_AsLobby_Player_Controller_Nebula; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Lobby_GS_C_Update_Lobby_StatusIndicator) == 0x000008, "Wrong alignment on Lobby_GS_C_Update_Lobby_StatusIndicator");
static_assert(sizeof(Lobby_GS_C_Update_Lobby_StatusIndicator) == 0x000038, "Wrong size on Lobby_GS_C_Update_Lobby_StatusIndicator");
static_assert(offsetof(Lobby_GS_C_Update_Lobby_StatusIndicator, CircularThrobber_Visibility) == 0x000000, "Member 'Lobby_GS_C_Update_Lobby_StatusIndicator::CircularThrobber_Visibility' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_Update_Lobby_StatusIndicator, LobbyStatus_Text) == 0x000008, "Member 'Lobby_GS_C_Update_Lobby_StatusIndicator::LobbyStatus_Text' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_Update_Lobby_StatusIndicator, CallFunc_GetPlayerController_ReturnValue) == 0x000020, "Member 'Lobby_GS_C_Update_Lobby_StatusIndicator::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_Update_Lobby_StatusIndicator, K2Node_DynamicCast_AsLobby_Player_Controller_Nebula) == 0x000028, "Member 'Lobby_GS_C_Update_Lobby_StatusIndicator::K2Node_DynamicCast_AsLobby_Player_Controller_Nebula' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_Update_Lobby_StatusIndicator, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'Lobby_GS_C_Update_Lobby_StatusIndicator::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function Lobby_GS.Lobby_GS_C.Update_Host_ReadyUpButton
// 0x0038 (0x0038 - 0x0000)
struct Lobby_GS_C_Update_Host_ReadyUpButton final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          WarningState_;                                     // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ALobby_PlayerController_Nebula_C*       K2Node_DynamicCast_AsLobby_Player_Controller_Nebula; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Lobby_GS_C_Update_Host_ReadyUpButton) == 0x000008, "Wrong alignment on Lobby_GS_C_Update_Host_ReadyUpButton");
static_assert(sizeof(Lobby_GS_C_Update_Host_ReadyUpButton) == 0x000038, "Wrong size on Lobby_GS_C_Update_Host_ReadyUpButton");
static_assert(offsetof(Lobby_GS_C_Update_Host_ReadyUpButton, Text) == 0x000000, "Member 'Lobby_GS_C_Update_Host_ReadyUpButton::Text' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_Update_Host_ReadyUpButton, WarningState_) == 0x000018, "Member 'Lobby_GS_C_Update_Host_ReadyUpButton::WarningState_' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_Update_Host_ReadyUpButton, CallFunc_HasAuthority_ReturnValue) == 0x000019, "Member 'Lobby_GS_C_Update_Host_ReadyUpButton::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_Update_Host_ReadyUpButton, CallFunc_GetPlayerController_ReturnValue) == 0x000020, "Member 'Lobby_GS_C_Update_Host_ReadyUpButton::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_Update_Host_ReadyUpButton, K2Node_DynamicCast_AsLobby_Player_Controller_Nebula) == 0x000028, "Member 'Lobby_GS_C_Update_Host_ReadyUpButton::K2Node_DynamicCast_AsLobby_Player_Controller_Nebula' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_Update_Host_ReadyUpButton, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'Lobby_GS_C_Update_Host_ReadyUpButton::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function Lobby_GS.Lobby_GS_C.Update_Lobby_PlayerList
// 0x0018 (0x0018 - 0x0000)
struct Lobby_GS_C_Update_Lobby_PlayerList final
{
public:
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ALobby_PlayerController_Nebula_C*       K2Node_DynamicCast_AsLobby_Player_Controller_Nebula; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Lobby_GS_C_Update_Lobby_PlayerList) == 0x000008, "Wrong alignment on Lobby_GS_C_Update_Lobby_PlayerList");
static_assert(sizeof(Lobby_GS_C_Update_Lobby_PlayerList) == 0x000018, "Wrong size on Lobby_GS_C_Update_Lobby_PlayerList");
static_assert(offsetof(Lobby_GS_C_Update_Lobby_PlayerList, CallFunc_GetPlayerController_ReturnValue) == 0x000000, "Member 'Lobby_GS_C_Update_Lobby_PlayerList::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_Update_Lobby_PlayerList, K2Node_DynamicCast_AsLobby_Player_Controller_Nebula) == 0x000008, "Member 'Lobby_GS_C_Update_Lobby_PlayerList::K2Node_DynamicCast_AsLobby_Player_Controller_Nebula' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_Update_Lobby_PlayerList, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'Lobby_GS_C_Update_Lobby_PlayerList::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function Lobby_GS.Lobby_GS_C.Reset_Player_ReadyStatus
// 0x0020 (0x0020 - 0x0000)
struct Lobby_GS_C_Reset_Player_ReadyStatus final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ALobbyPS_C*                             K2Node_DynamicCast_AsLobby_PS;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Lobby_GS_C_Reset_Player_ReadyStatus) == 0x000008, "Wrong alignment on Lobby_GS_C_Reset_Player_ReadyStatus");
static_assert(sizeof(Lobby_GS_C_Reset_Player_ReadyStatus) == 0x000020, "Wrong size on Lobby_GS_C_Reset_Player_ReadyStatus");
static_assert(offsetof(Lobby_GS_C_Reset_Player_ReadyStatus, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'Lobby_GS_C_Reset_Player_ReadyStatus::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_Reset_Player_ReadyStatus, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'Lobby_GS_C_Reset_Player_ReadyStatus::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_Reset_Player_ReadyStatus, K2Node_DynamicCast_AsLobby_PS) == 0x000010, "Member 'Lobby_GS_C_Reset_Player_ReadyStatus::K2Node_DynamicCast_AsLobby_PS' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_Reset_Player_ReadyStatus, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'Lobby_GS_C_Reset_Player_ReadyStatus::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function Lobby_GS.Lobby_GS_C.OnRep_Current_GameMode
// 0x0020 (0x0020 - 0x0000)
struct Lobby_GS_C_OnRep_Current_GameMode final
{
public:
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ALobby_PlayerController_C*              K2Node_DynamicCast_AsLobby_Player_Controller;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Lobby_GS_C_OnRep_Current_GameMode) == 0x000008, "Wrong alignment on Lobby_GS_C_OnRep_Current_GameMode");
static_assert(sizeof(Lobby_GS_C_OnRep_Current_GameMode) == 0x000020, "Wrong size on Lobby_GS_C_OnRep_Current_GameMode");
static_assert(offsetof(Lobby_GS_C_OnRep_Current_GameMode, CallFunc_GetPlayerController_ReturnValue) == 0x000000, "Member 'Lobby_GS_C_OnRep_Current_GameMode::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_OnRep_Current_GameMode, CallFunc_HasAuthority_ReturnValue) == 0x000008, "Member 'Lobby_GS_C_OnRep_Current_GameMode::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_OnRep_Current_GameMode, K2Node_DynamicCast_AsLobby_Player_Controller) == 0x000010, "Member 'Lobby_GS_C_OnRep_Current_GameMode::K2Node_DynamicCast_AsLobby_Player_Controller' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_OnRep_Current_GameMode, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'Lobby_GS_C_OnRep_Current_GameMode::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function Lobby_GS.Lobby_GS_C.Set_CurrentMap
// 0x0078 (0x0078 - 0x0000)
struct Lobby_GS_C_Set_CurrentMap final
{
public:
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_Gamemode                            CallFunc_GetDataTableRowFromName_OutRow;           // 0x0018(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0060(0x0018)()
};
static_assert(alignof(Lobby_GS_C_Set_CurrentMap) == 0x000008, "Wrong alignment on Lobby_GS_C_Set_CurrentMap");
static_assert(sizeof(Lobby_GS_C_Set_CurrentMap) == 0x000078, "Wrong size on Lobby_GS_C_Set_CurrentMap");
static_assert(offsetof(Lobby_GS_C_Set_CurrentMap, CallFunc_Conv_TextToString_ReturnValue) == 0x000000, "Member 'Lobby_GS_C_Set_CurrentMap::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_Set_CurrentMap, CallFunc_Conv_StringToName_ReturnValue) == 0x000010, "Member 'Lobby_GS_C_Set_CurrentMap::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_Set_CurrentMap, CallFunc_GetDataTableRowFromName_OutRow) == 0x000018, "Member 'Lobby_GS_C_Set_CurrentMap::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_Set_CurrentMap, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000058, "Member 'Lobby_GS_C_Set_CurrentMap::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_Set_CurrentMap, CallFunc_Conv_NameToText_ReturnValue) == 0x000060, "Member 'Lobby_GS_C_Set_CurrentMap::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");

// Function Lobby_GS.Lobby_GS_C.Update_Lobby_Launchevent
// 0x0020 (0x0020 - 0x0000)
struct Lobby_GS_C_Update_Lobby_Launchevent final
{
public:
	bool                                          LaunchingGame_;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ALobby_PlayerController_Nebula_C*       K2Node_DynamicCast_AsLobby_Player_Controller_Nebula; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Lobby_GS_C_Update_Lobby_Launchevent) == 0x000008, "Wrong alignment on Lobby_GS_C_Update_Lobby_Launchevent");
static_assert(sizeof(Lobby_GS_C_Update_Lobby_Launchevent) == 0x000020, "Wrong size on Lobby_GS_C_Update_Lobby_Launchevent");
static_assert(offsetof(Lobby_GS_C_Update_Lobby_Launchevent, LaunchingGame_) == 0x000000, "Member 'Lobby_GS_C_Update_Lobby_Launchevent::LaunchingGame_' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_Update_Lobby_Launchevent, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'Lobby_GS_C_Update_Lobby_Launchevent::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_Update_Lobby_Launchevent, K2Node_DynamicCast_AsLobby_Player_Controller_Nebula) == 0x000010, "Member 'Lobby_GS_C_Update_Lobby_Launchevent::K2Node_DynamicCast_AsLobby_Player_Controller_Nebula' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_Update_Lobby_Launchevent, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'Lobby_GS_C_Update_Lobby_Launchevent::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function Lobby_GS.Lobby_GS_C.Update_Lobby_VoiceChat
// 0x0058 (0x0058 - 0x0000)
struct Lobby_GS_C_Update_Lobby_VoiceChat final
{
public:
	bool                                          CanTalk;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class APlayerState*>                   CallFunc_GetPlayerStateArray_ReturnValue;          // 0x0018(0x0010)(ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ALobby_PlayerController_Nebula_C*       K2Node_DynamicCast_AsLobby_Player_Controller_Nebula; // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Lobby_GS_C_Update_Lobby_VoiceChat) == 0x000008, "Wrong alignment on Lobby_GS_C_Update_Lobby_VoiceChat");
static_assert(sizeof(Lobby_GS_C_Update_Lobby_VoiceChat) == 0x000058, "Wrong size on Lobby_GS_C_Update_Lobby_VoiceChat");
static_assert(offsetof(Lobby_GS_C_Update_Lobby_VoiceChat, CanTalk) == 0x000000, "Member 'Lobby_GS_C_Update_Lobby_VoiceChat::CanTalk' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_Update_Lobby_VoiceChat, Temp_int_Array_Index_Variable) == 0x000004, "Member 'Lobby_GS_C_Update_Lobby_VoiceChat::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_Update_Lobby_VoiceChat, CallFunc_HasAuthority_ReturnValue) == 0x000008, "Member 'Lobby_GS_C_Update_Lobby_VoiceChat::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_Update_Lobby_VoiceChat, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'Lobby_GS_C_Update_Lobby_VoiceChat::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_Update_Lobby_VoiceChat, CallFunc_GetGameState_ReturnValue) == 0x000010, "Member 'Lobby_GS_C_Update_Lobby_VoiceChat::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_Update_Lobby_VoiceChat, CallFunc_GetPlayerStateArray_ReturnValue) == 0x000018, "Member 'Lobby_GS_C_Update_Lobby_VoiceChat::CallFunc_GetPlayerStateArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_Update_Lobby_VoiceChat, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'Lobby_GS_C_Update_Lobby_VoiceChat::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_Update_Lobby_VoiceChat, CallFunc_Array_Get_Item) == 0x000030, "Member 'Lobby_GS_C_Update_Lobby_VoiceChat::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_Update_Lobby_VoiceChat, CallFunc_GetOwner_ReturnValue) == 0x000038, "Member 'Lobby_GS_C_Update_Lobby_VoiceChat::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_Update_Lobby_VoiceChat, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'Lobby_GS_C_Update_Lobby_VoiceChat::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_Update_Lobby_VoiceChat, K2Node_DynamicCast_AsLobby_Player_Controller_Nebula) == 0x000048, "Member 'Lobby_GS_C_Update_Lobby_VoiceChat::K2Node_DynamicCast_AsLobby_Player_Controller_Nebula' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_Update_Lobby_VoiceChat, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'Lobby_GS_C_Update_Lobby_VoiceChat::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_Update_Lobby_VoiceChat, CallFunc_Less_IntInt_ReturnValue) == 0x000051, "Member 'Lobby_GS_C_Update_Lobby_VoiceChat::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function Lobby_GS.Lobby_GS_C.OnRep_CurrentMissionData
// 0x0038 (0x0038 - 0x0000)
struct Lobby_GS_C_OnRep_CurrentMissionData final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUI_Menu_Lobby_C*>               CallFunc_GetAllWidgetsOfClass_FoundWidgets;        // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UUI_Menu_Lobby_C*                       CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Lobby_GS_C_OnRep_CurrentMissionData) == 0x000008, "Wrong alignment on Lobby_GS_C_OnRep_CurrentMissionData");
static_assert(sizeof(Lobby_GS_C_OnRep_CurrentMissionData) == 0x000038, "Wrong size on Lobby_GS_C_OnRep_CurrentMissionData");
static_assert(offsetof(Lobby_GS_C_OnRep_CurrentMissionData, Temp_int_Array_Index_Variable) == 0x000000, "Member 'Lobby_GS_C_OnRep_CurrentMissionData::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_OnRep_CurrentMissionData, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'Lobby_GS_C_OnRep_CurrentMissionData::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_OnRep_CurrentMissionData, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'Lobby_GS_C_OnRep_CurrentMissionData::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_OnRep_CurrentMissionData, CallFunc_GetAllWidgetsOfClass_FoundWidgets) == 0x000010, "Member 'Lobby_GS_C_OnRep_CurrentMissionData::CallFunc_GetAllWidgetsOfClass_FoundWidgets' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_OnRep_CurrentMissionData, CallFunc_Array_Get_Item) == 0x000020, "Member 'Lobby_GS_C_OnRep_CurrentMissionData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_OnRep_CurrentMissionData, CallFunc_TextIsEmpty_ReturnValue) == 0x000028, "Member 'Lobby_GS_C_OnRep_CurrentMissionData::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_OnRep_CurrentMissionData, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'Lobby_GS_C_OnRep_CurrentMissionData::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_GS_C_OnRep_CurrentMissionData, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'Lobby_GS_C_OnRep_CurrentMissionData::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

}

