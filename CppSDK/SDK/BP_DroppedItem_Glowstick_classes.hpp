#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DroppedItem_Glowstick

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BP_DroppedItem_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_DroppedItem_Glowstick.BP_DroppedItem_Glowstick_C
// 0x0048 (0x02B8 - 0x0270)
class ABP_DroppedItem_Glowstick_C : public ABP_DroppedItem_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_DroppedItem_Glowstick_C;         // 0x0270(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USpotLightComponent*                    SpotLight;                                         // 0x0278(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight;                                        // 0x0280(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  GlowstickID;                                       // 0x0288(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          ShouldGlow;                                        // 0x0298(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_299[0x7];                                      // 0x0299(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_Glowstick_Component_C*              GlowstickComponent;                                // 0x02A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               SpotlightRotation;                                 // 0x02A8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	bool                                          IsSpawned;                                         // 0x02B4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)

public:
	void ExecuteUbergraph_BP_DroppedItem_Glowstick(int32 EntryPoint);
	void ReceiveBeginPlay();
	void ReceiveDestroyed();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_DroppedItem_Glowstick_C">();
	}
	static class ABP_DroppedItem_Glowstick_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_DroppedItem_Glowstick_C>();
	}
};
static_assert(alignof(ABP_DroppedItem_Glowstick_C) == 0x000008, "Wrong alignment on ABP_DroppedItem_Glowstick_C");
static_assert(sizeof(ABP_DroppedItem_Glowstick_C) == 0x0002B8, "Wrong size on ABP_DroppedItem_Glowstick_C");
static_assert(offsetof(ABP_DroppedItem_Glowstick_C, UberGraphFrame_BP_DroppedItem_Glowstick_C) == 0x000270, "Member 'ABP_DroppedItem_Glowstick_C::UberGraphFrame_BP_DroppedItem_Glowstick_C' has a wrong offset!");
static_assert(offsetof(ABP_DroppedItem_Glowstick_C, SpotLight) == 0x000278, "Member 'ABP_DroppedItem_Glowstick_C::SpotLight' has a wrong offset!");
static_assert(offsetof(ABP_DroppedItem_Glowstick_C, PointLight) == 0x000280, "Member 'ABP_DroppedItem_Glowstick_C::PointLight' has a wrong offset!");
static_assert(offsetof(ABP_DroppedItem_Glowstick_C, GlowstickID) == 0x000288, "Member 'ABP_DroppedItem_Glowstick_C::GlowstickID' has a wrong offset!");
static_assert(offsetof(ABP_DroppedItem_Glowstick_C, ShouldGlow) == 0x000298, "Member 'ABP_DroppedItem_Glowstick_C::ShouldGlow' has a wrong offset!");
static_assert(offsetof(ABP_DroppedItem_Glowstick_C, GlowstickComponent) == 0x0002A0, "Member 'ABP_DroppedItem_Glowstick_C::GlowstickComponent' has a wrong offset!");
static_assert(offsetof(ABP_DroppedItem_Glowstick_C, SpotlightRotation) == 0x0002A8, "Member 'ABP_DroppedItem_Glowstick_C::SpotlightRotation' has a wrong offset!");
static_assert(offsetof(ABP_DroppedItem_Glowstick_C, IsSpawned) == 0x0002B4, "Member 'ABP_DroppedItem_Glowstick_C::IsSpawned' has a wrong offset!");

}

