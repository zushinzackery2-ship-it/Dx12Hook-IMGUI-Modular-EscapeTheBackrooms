#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_Menu_Evaluation

#include "Basic.hpp"

#include "UI_Menu_Evaluation_classes.hpp"
#include "UI_Menu_Evaluation_parameters.hpp"


namespace SDK
{

// Function UI_Menu_Evaluation.UI_Menu_Evaluation_C.ExecuteUbergraph_UI_Menu_Evaluation
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_Menu_Evaluation_C::ExecuteUbergraph_UI_Menu_Evaluation(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Menu_Evaluation_C", "ExecuteUbergraph_UI_Menu_Evaluation");

	Params::UI_Menu_Evaluation_C_ExecuteUbergraph_UI_Menu_Evaluation Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Menu_Evaluation.UI_Menu_Evaluation_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UUI_Menu_Evaluation_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Menu_Evaluation_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Menu_Evaluation.UI_Menu_Evaluation_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_Menu_Evaluation_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Menu_Evaluation_C", "Tick");

	Params::UI_Menu_Evaluation_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Menu_Evaluation.UI_Menu_Evaluation_C.BndEvt__UI_Menu_Evaluation_UI_Menu_Evalution_XpBar_K2Node_ComponentBoundEvent_2_UpdateLevel__DelegateSignature
// (BlueprintEvent)
// Parameters:
// int32                                   Level                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_Menu_Evaluation_C::BndEvt__UI_Menu_Evaluation_UI_Menu_Evalution_XpBar_K2Node_ComponentBoundEvent_2_UpdateLevel__DelegateSignature(int32 Level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Menu_Evaluation_C", "BndEvt__UI_Menu_Evaluation_UI_Menu_Evalution_XpBar_K2Node_ComponentBoundEvent_2_UpdateLevel__DelegateSignature");

	Params::UI_Menu_Evaluation_C_BndEvt__UI_Menu_Evaluation_UI_Menu_Evalution_XpBar_K2Node_ComponentBoundEvent_2_UpdateLevel__DelegateSignature Parms{};

	Parms.Level = Level;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Menu_Evaluation.UI_Menu_Evaluation_C.ToggleFocus
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsFocused                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUI_Menu_Evaluation_C::ToggleFocus(bool IsFocused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Menu_Evaluation_C", "ToggleFocus");

	Params::UI_Menu_Evaluation_C_ToggleFocus Parms{};

	Parms.IsFocused = IsFocused;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Menu_Evaluation.UI_Menu_Evaluation_C.OnFadeOut
// (BlueprintCallable, BlueprintEvent)

void UUI_Menu_Evaluation_C::OnFadeOut()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Menu_Evaluation_C", "OnFadeOut");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Menu_Evaluation.UI_Menu_Evaluation_C.BndEvt__UI_Menu_Evaluation_UI_Menu_Button_K2Node_ComponentBoundEvent_1_OnClick__DelegateSignature
// (BlueprintEvent)

void UUI_Menu_Evaluation_C::BndEvt__UI_Menu_Evaluation_UI_Menu_Button_K2Node_ComponentBoundEvent_1_OnClick__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Menu_Evaluation_C", "BndEvt__UI_Menu_Evaluation_UI_Menu_Button_K2Node_ComponentBoundEvent_1_OnClick__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Menu_Evaluation.UI_Menu_Evaluation_C.BndEvt__UI_Menu_Evaluation_UI_Menu_Evalution_XpBar_K2Node_ComponentBoundEvent_0_FinishedBar__DelegateSignature
// (BlueprintEvent)

void UUI_Menu_Evaluation_C::BndEvt__UI_Menu_Evaluation_UI_Menu_Evalution_XpBar_K2Node_ComponentBoundEvent_0_FinishedBar__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Menu_Evaluation_C", "BndEvt__UI_Menu_Evaluation_UI_Menu_Evalution_XpBar_K2Node_ComponentBoundEvent_0_FinishedBar__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Menu_Evaluation.UI_Menu_Evaluation_C.Init
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FMissionStructure&         MissionData_0                                          (BlueprintVisible, BlueprintReadOnly, Parm)

void UUI_Menu_Evaluation_C::Init(const struct FMissionStructure& MissionData_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Menu_Evaluation_C", "Init");

	Params::UI_Menu_Evaluation_C_Init Parms{};

	Parms.MissionData_0 = std::move(MissionData_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Menu_Evaluation.UI_Menu_Evaluation_C.SetPayout
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   XP_Earned                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Penalties                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_Menu_Evaluation_C::SetPayout(int32 XP_Earned, int32 Penalties)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Menu_Evaluation_C", "SetPayout");

	Params::UI_Menu_Evaluation_C_SetPayout Parms{};

	Parms.XP_Earned = XP_Earned;
	Parms.Penalties = Penalties;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Menu_Evaluation.UI_Menu_Evaluation_C.UpdateStatList
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bPlayAnim                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUI_Menu_Evaluation_C::UpdateStatList(bool bPlayAnim)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Menu_Evaluation_C", "UpdateStatList");

	Params::UI_Menu_Evaluation_C_UpdateStatList Parms{};

	Parms.bPlayAnim = bPlayAnim;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Menu_Evaluation.UI_Menu_Evaluation_C.Select
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FText&                      Name_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm)
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_Menu_Evaluation_C::Select(const class FText& Name_0, int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Menu_Evaluation_C", "Select");

	Params::UI_Menu_Evaluation_C_Select Parms{};

	Parms.Name_0 = std::move(Name_0);
	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Menu_Evaluation.UI_Menu_Evaluation_C.ToggleEnabled
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsEnabled                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUI_Menu_Evaluation_C::ToggleEnabled(bool IsEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Menu_Evaluation_C", "ToggleEnabled");

	Params::UI_Menu_Evaluation_C_ToggleEnabled Parms{};

	Parms.IsEnabled = IsEnabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Menu_Evaluation.UI_Menu_Evaluation_C.ToggleHover
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsHovered_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUI_Menu_Evaluation_C::ToggleHover(bool IsHovered_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Menu_Evaluation_C", "ToggleHover");

	Params::UI_Menu_Evaluation_C_ToggleHover Parms{};

	Parms.IsHovered_0 = IsHovered_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Menu_Evaluation.UI_Menu_Evaluation_C.SetMissionData
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FMissionStructure&         MissionData_0                                          (BlueprintVisible, BlueprintReadOnly, Parm)

void UUI_Menu_Evaluation_C::SetMissionData(const struct FMissionStructure& MissionData_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Menu_Evaluation_C", "SetMissionData");

	Params::UI_Menu_Evaluation_C_SetMissionData Parms{};

	Parms.MissionData_0 = std::move(MissionData_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Menu_Evaluation.UI_Menu_Evaluation_C.Get Text Color
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FST_UI_Mission&            Mission                                                (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// struct FSlateColor*                     SlateColor                                             (Parm, OutParm)
// struct FLinearColor*                    SlateColor_SpecifiedColor                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ESlateColorStylingMode*                 SlateColor_ColorUseRule                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_Menu_Evaluation_C::Get_Text_Color(const struct FST_UI_Mission& Mission, struct FSlateColor* SlateColor, struct FLinearColor* SlateColor_SpecifiedColor, ESlateColorStylingMode* SlateColor_ColorUseRule)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Menu_Evaluation_C", "Get Text Color");

	Params::UI_Menu_Evaluation_C_Get_Text_Color Parms{};

	Parms.Mission = std::move(Mission);

	UObject::ProcessEvent(Func, &Parms);

	if (SlateColor != nullptr)
		*SlateColor = std::move(Parms.SlateColor);

	if (SlateColor_SpecifiedColor != nullptr)
		*SlateColor_SpecifiedColor = std::move(Parms.SlateColor_SpecifiedColor);

	if (SlateColor_ColorUseRule != nullptr)
		*SlateColor_ColorUseRule = Parms.SlateColor_ColorUseRule;
}


// Function UI_Menu_Evaluation.UI_Menu_Evaluation_C.AddStat
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FText&                      Name_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm)
// const class FText&                      Stat                                                   (BlueprintVisible, BlueprintReadOnly, Parm)
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UUI_Menu_Evaluation_Stat_C**      Widget                                                 (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_Menu_Evaluation_C::AddStat(const class FText& Name_0, const class FText& Stat, int32 Index_0, class UUI_Menu_Evaluation_Stat_C** Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Menu_Evaluation_C", "AddStat");

	Params::UI_Menu_Evaluation_C_AddStat Parms{};

	Parms.Name_0 = std::move(Name_0);
	Parms.Stat = std::move(Stat);
	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);

	if (Widget != nullptr)
		*Widget = Parms.Widget;
}


// Function UI_Menu_Evaluation.UI_Menu_Evaluation_C.GetTime
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)

class FString UUI_Menu_Evaluation_C::GetTime(float Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Menu_Evaluation_C", "GetTime");

	Params::UI_Menu_Evaluation_C_GetTime Parms{};

	Parms.Time = Time;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function UI_Menu_Evaluation.UI_Menu_Evaluation_C.GetRoundedTime
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString*                          RoundedTime                                            (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UUI_Menu_Evaluation_C::GetRoundedTime(float Time, class FString* RoundedTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Menu_Evaluation_C", "GetRoundedTime");

	Params::UI_Menu_Evaluation_C_GetRoundedTime Parms{};

	Parms.Time = Time;

	UObject::ProcessEvent(Func, &Parms);

	if (RoundedTime != nullptr)
		*RoundedTime = std::move(Parms.RoundedTime);
}


// Function UI_Menu_Evaluation.UI_Menu_Evaluation_C.SaveMissionXP
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   EarnedXP                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UBP_MySaveGame_C*                 SaveGameObject                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_Menu_Evaluation_C::SaveMissionXP(int32 EarnedXP, class UBP_MySaveGame_C* SaveGameObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Menu_Evaluation_C", "SaveMissionXP");

	Params::UI_Menu_Evaluation_C_SaveMissionXP Parms{};

	Parms.EarnedXP = EarnedXP;
	Parms.SaveGameObject = SaveGameObject;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Menu_Evaluation.UI_Menu_Evaluation_C.Is Settings Menu Open
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UUI_Menu_Evaluation_C::Is_Settings_Menu_Open()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Menu_Evaluation_C", "Is Settings Menu Open");

	Params::UI_Menu_Evaluation_C_Is_Settings_Menu_Open Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

