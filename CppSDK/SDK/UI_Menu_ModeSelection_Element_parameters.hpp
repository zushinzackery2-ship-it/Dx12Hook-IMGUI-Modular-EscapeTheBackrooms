#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_Menu_ModeSelection_Element

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "InputCore_structs.hpp"
#include "E_GameMode_structs.hpp"


namespace SDK::Params
{

// Function UI_Menu_ModeSelection_Element.UI_Menu_ModeSelection_Element_C.ExecuteUbergraph_UI_Menu_ModeSelection_Element
// 0x0228 (0x0228 - 0x0000)
struct UI_Menu_ModeSelection_Element_C_ExecuteUbergraph_UI_Menu_ModeSelection_Element final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_GameMode                                    Temp_byte_Variable_2;                              // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable_1;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_2;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsHovered;                            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_Select_Default;                             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsEnabled;                            // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_Select_Default_1;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bEnable;                        // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A[0x2];                                       // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x004C(0x0038)(IsPlainOldData, NoDestructor)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerEvent                          K2Node_Event_MouseEvent_1;                         // 0x0088(0x0070)(ConstParm)
	struct FPointerEvent                          K2Node_Event_MouseEvent;                           // 0x00F8(0x0070)(ConstParm)
	bool                                          K2Node_Event_IsFocused;                            // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateFontInfo                         CallFunc_Get_Font_Culture_Checked_OutFont;         // 0x0178(0x0058)(HasGetValueTypeHash)
	struct FSlateFontInfo                         CallFunc_Get_Font_Culture_Checked_OutFont_1;       // 0x01D0(0x0058)(HasGetValueTypeHash)
};
static_assert(alignof(UI_Menu_ModeSelection_Element_C_ExecuteUbergraph_UI_Menu_ModeSelection_Element) == 0x000008, "Wrong alignment on UI_Menu_ModeSelection_Element_C_ExecuteUbergraph_UI_Menu_ModeSelection_Element");
static_assert(sizeof(UI_Menu_ModeSelection_Element_C_ExecuteUbergraph_UI_Menu_ModeSelection_Element) == 0x000228, "Wrong size on UI_Menu_ModeSelection_Element_C_ExecuteUbergraph_UI_Menu_ModeSelection_Element");
static_assert(offsetof(UI_Menu_ModeSelection_Element_C_ExecuteUbergraph_UI_Menu_ModeSelection_Element, EntryPoint) == 0x000000, "Member 'UI_Menu_ModeSelection_Element_C_ExecuteUbergraph_UI_Menu_ModeSelection_Element::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_Menu_ModeSelection_Element_C_ExecuteUbergraph_UI_Menu_ModeSelection_Element, Temp_bool_Variable) == 0x000004, "Member 'UI_Menu_ModeSelection_Element_C_ExecuteUbergraph_UI_Menu_ModeSelection_Element::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_Menu_ModeSelection_Element_C_ExecuteUbergraph_UI_Menu_ModeSelection_Element, Temp_object_Variable) == 0x000008, "Member 'UI_Menu_ModeSelection_Element_C_ExecuteUbergraph_UI_Menu_ModeSelection_Element::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(UI_Menu_ModeSelection_Element_C_ExecuteUbergraph_UI_Menu_ModeSelection_Element, Temp_bool_Variable_1) == 0x000010, "Member 'UI_Menu_ModeSelection_Element_C_ExecuteUbergraph_UI_Menu_ModeSelection_Element::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Menu_ModeSelection_Element_C_ExecuteUbergraph_UI_Menu_ModeSelection_Element, Temp_byte_Variable) == 0x000011, "Member 'UI_Menu_ModeSelection_Element_C_ExecuteUbergraph_UI_Menu_ModeSelection_Element::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_Menu_ModeSelection_Element_C_ExecuteUbergraph_UI_Menu_ModeSelection_Element, Temp_byte_Variable_1) == 0x000012, "Member 'UI_Menu_ModeSelection_Element_C_ExecuteUbergraph_UI_Menu_ModeSelection_Element::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Menu_ModeSelection_Element_C_ExecuteUbergraph_UI_Menu_ModeSelection_Element, Temp_byte_Variable_2) == 0x000013, "Member 'UI_Menu_ModeSelection_Element_C_ExecuteUbergraph_UI_Menu_ModeSelection_Element::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_Menu_ModeSelection_Element_C_ExecuteUbergraph_UI_Menu_ModeSelection_Element, Temp_object_Variable_1) == 0x000018, "Member 'UI_Menu_ModeSelection_Element_C_ExecuteUbergraph_UI_Menu_ModeSelection_Element::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Menu_ModeSelection_Element_C_ExecuteUbergraph_UI_Menu_ModeSelection_Element, Temp_object_Variable_2) == 0x000020, "Member 'UI_Menu_ModeSelection_Element_C_ExecuteUbergraph_UI_Menu_ModeSelection_Element::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_Menu_ModeSelection_Element_C_ExecuteUbergraph_UI_Menu_ModeSelection_Element, K2Node_Event_IsHovered) == 0x000028, "Member 'UI_Menu_ModeSelection_Element_C_ExecuteUbergraph_UI_Menu_ModeSelection_Element::K2Node_Event_IsHovered' has a wrong offset!");
static_assert(offsetof(UI_Menu_ModeSelection_Element_C_ExecuteUbergraph_UI_Menu_ModeSelection_Element, K2Node_Select_Default) == 0x000030, "Member 'UI_Menu_ModeSelection_Element_C_ExecuteUbergraph_UI_Menu_ModeSelection_Element::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_Menu_ModeSelection_Element_C_ExecuteUbergraph_UI_Menu_ModeSelection_Element, K2Node_Event_IsEnabled) == 0x000038, "Member 'UI_Menu_ModeSelection_Element_C_ExecuteUbergraph_UI_Menu_ModeSelection_Element::K2Node_Event_IsEnabled' has a wrong offset!");
static_assert(offsetof(UI_Menu_ModeSelection_Element_C_ExecuteUbergraph_UI_Menu_ModeSelection_Element, K2Node_Event_IsDesignTime) == 0x000039, "Member 'UI_Menu_ModeSelection_Element_C_ExecuteUbergraph_UI_Menu_ModeSelection_Element::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(UI_Menu_ModeSelection_Element_C_ExecuteUbergraph_UI_Menu_ModeSelection_Element, K2Node_Select_Default_1) == 0x000040, "Member 'UI_Menu_ModeSelection_Element_C_ExecuteUbergraph_UI_Menu_ModeSelection_Element::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UI_Menu_ModeSelection_Element_C_ExecuteUbergraph_UI_Menu_ModeSelection_Element, K2Node_Select_Default_2) == 0x000048, "Member 'UI_Menu_ModeSelection_Element_C_ExecuteUbergraph_UI_Menu_ModeSelection_Element::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(UI_Menu_ModeSelection_Element_C_ExecuteUbergraph_UI_Menu_ModeSelection_Element, K2Node_CustomEvent_bEnable) == 0x000049, "Member 'UI_Menu_ModeSelection_Element_C_ExecuteUbergraph_UI_Menu_ModeSelection_Element::K2Node_CustomEvent_bEnable' has a wrong offset!");
static_assert(offsetof(UI_Menu_ModeSelection_Element_C_ExecuteUbergraph_UI_Menu_ModeSelection_Element, K2Node_Event_MyGeometry) == 0x00004C, "Member 'UI_Menu_ModeSelection_Element_C_ExecuteUbergraph_UI_Menu_ModeSelection_Element::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(UI_Menu_ModeSelection_Element_C_ExecuteUbergraph_UI_Menu_ModeSelection_Element, K2Node_Event_MouseEvent_1) == 0x000088, "Member 'UI_Menu_ModeSelection_Element_C_ExecuteUbergraph_UI_Menu_ModeSelection_Element::K2Node_Event_MouseEvent_1' has a wrong offset!");
static_assert(offsetof(UI_Menu_ModeSelection_Element_C_ExecuteUbergraph_UI_Menu_ModeSelection_Element, K2Node_Event_MouseEvent) == 0x0000F8, "Member 'UI_Menu_ModeSelection_Element_C_ExecuteUbergraph_UI_Menu_ModeSelection_Element::K2Node_Event_MouseEvent' has a wrong offset!");
static_assert(offsetof(UI_Menu_ModeSelection_Element_C_ExecuteUbergraph_UI_Menu_ModeSelection_Element, K2Node_Event_IsFocused) == 0x000168, "Member 'UI_Menu_ModeSelection_Element_C_ExecuteUbergraph_UI_Menu_ModeSelection_Element::K2Node_Event_IsFocused' has a wrong offset!");
static_assert(offsetof(UI_Menu_ModeSelection_Element_C_ExecuteUbergraph_UI_Menu_ModeSelection_Element, CallFunc_GetOwningPlayer_ReturnValue) == 0x000170, "Member 'UI_Menu_ModeSelection_Element_C_ExecuteUbergraph_UI_Menu_ModeSelection_Element::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Menu_ModeSelection_Element_C_ExecuteUbergraph_UI_Menu_ModeSelection_Element, CallFunc_Get_Font_Culture_Checked_OutFont) == 0x000178, "Member 'UI_Menu_ModeSelection_Element_C_ExecuteUbergraph_UI_Menu_ModeSelection_Element::CallFunc_Get_Font_Culture_Checked_OutFont' has a wrong offset!");
static_assert(offsetof(UI_Menu_ModeSelection_Element_C_ExecuteUbergraph_UI_Menu_ModeSelection_Element, CallFunc_Get_Font_Culture_Checked_OutFont_1) == 0x0001D0, "Member 'UI_Menu_ModeSelection_Element_C_ExecuteUbergraph_UI_Menu_ModeSelection_Element::CallFunc_Get_Font_Culture_Checked_OutFont_1' has a wrong offset!");

// Function UI_Menu_ModeSelection_Element.UI_Menu_ModeSelection_Element_C.ToggleFocus
// 0x0001 (0x0001 - 0x0000)
struct UI_Menu_ModeSelection_Element_C_ToggleFocus final
{
public:
	bool                                          IsFocused;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_Menu_ModeSelection_Element_C_ToggleFocus) == 0x000001, "Wrong alignment on UI_Menu_ModeSelection_Element_C_ToggleFocus");
static_assert(sizeof(UI_Menu_ModeSelection_Element_C_ToggleFocus) == 0x000001, "Wrong size on UI_Menu_ModeSelection_Element_C_ToggleFocus");
static_assert(offsetof(UI_Menu_ModeSelection_Element_C_ToggleFocus, IsFocused) == 0x000000, "Member 'UI_Menu_ModeSelection_Element_C_ToggleFocus::IsFocused' has a wrong offset!");

// Function UI_Menu_ModeSelection_Element.UI_Menu_ModeSelection_Element_C.OnMouseLeave
// 0x0070 (0x0070 - 0x0000)
struct UI_Menu_ModeSelection_Element_C_OnMouseLeave final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(UI_Menu_ModeSelection_Element_C_OnMouseLeave) == 0x000008, "Wrong alignment on UI_Menu_ModeSelection_Element_C_OnMouseLeave");
static_assert(sizeof(UI_Menu_ModeSelection_Element_C_OnMouseLeave) == 0x000070, "Wrong size on UI_Menu_ModeSelection_Element_C_OnMouseLeave");
static_assert(offsetof(UI_Menu_ModeSelection_Element_C_OnMouseLeave, MouseEvent) == 0x000000, "Member 'UI_Menu_ModeSelection_Element_C_OnMouseLeave::MouseEvent' has a wrong offset!");

// Function UI_Menu_ModeSelection_Element.UI_Menu_ModeSelection_Element_C.OnMouseEnter
// 0x00A8 (0x00A8 - 0x0000)
struct UI_Menu_ModeSelection_Element_C_OnMouseEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(UI_Menu_ModeSelection_Element_C_OnMouseEnter) == 0x000008, "Wrong alignment on UI_Menu_ModeSelection_Element_C_OnMouseEnter");
static_assert(sizeof(UI_Menu_ModeSelection_Element_C_OnMouseEnter) == 0x0000A8, "Wrong size on UI_Menu_ModeSelection_Element_C_OnMouseEnter");
static_assert(offsetof(UI_Menu_ModeSelection_Element_C_OnMouseEnter, MyGeometry) == 0x000000, "Member 'UI_Menu_ModeSelection_Element_C_OnMouseEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(UI_Menu_ModeSelection_Element_C_OnMouseEnter, MouseEvent) == 0x000038, "Member 'UI_Menu_ModeSelection_Element_C_OnMouseEnter::MouseEvent' has a wrong offset!");

// Function UI_Menu_ModeSelection_Element.UI_Menu_ModeSelection_Element_C.SetButtonEnable
// 0x0001 (0x0001 - 0x0000)
struct UI_Menu_ModeSelection_Element_C_SetButtonEnable final
{
public:
	bool                                          bEnable_0;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_Menu_ModeSelection_Element_C_SetButtonEnable) == 0x000001, "Wrong alignment on UI_Menu_ModeSelection_Element_C_SetButtonEnable");
static_assert(sizeof(UI_Menu_ModeSelection_Element_C_SetButtonEnable) == 0x000001, "Wrong size on UI_Menu_ModeSelection_Element_C_SetButtonEnable");
static_assert(offsetof(UI_Menu_ModeSelection_Element_C_SetButtonEnable, bEnable_0) == 0x000000, "Member 'UI_Menu_ModeSelection_Element_C_SetButtonEnable::bEnable_0' has a wrong offset!");

// Function UI_Menu_ModeSelection_Element.UI_Menu_ModeSelection_Element_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UI_Menu_ModeSelection_Element_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_Menu_ModeSelection_Element_C_PreConstruct) == 0x000001, "Wrong alignment on UI_Menu_ModeSelection_Element_C_PreConstruct");
static_assert(sizeof(UI_Menu_ModeSelection_Element_C_PreConstruct) == 0x000001, "Wrong size on UI_Menu_ModeSelection_Element_C_PreConstruct");
static_assert(offsetof(UI_Menu_ModeSelection_Element_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UI_Menu_ModeSelection_Element_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function UI_Menu_ModeSelection_Element.UI_Menu_ModeSelection_Element_C.ToggleEnabled
// 0x0001 (0x0001 - 0x0000)
struct UI_Menu_ModeSelection_Element_C_ToggleEnabled final
{
public:
	bool                                          IsEnabled;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_Menu_ModeSelection_Element_C_ToggleEnabled) == 0x000001, "Wrong alignment on UI_Menu_ModeSelection_Element_C_ToggleEnabled");
static_assert(sizeof(UI_Menu_ModeSelection_Element_C_ToggleEnabled) == 0x000001, "Wrong size on UI_Menu_ModeSelection_Element_C_ToggleEnabled");
static_assert(offsetof(UI_Menu_ModeSelection_Element_C_ToggleEnabled, IsEnabled) == 0x000000, "Member 'UI_Menu_ModeSelection_Element_C_ToggleEnabled::IsEnabled' has a wrong offset!");

// Function UI_Menu_ModeSelection_Element.UI_Menu_ModeSelection_Element_C.ToggleHover
// 0x0001 (0x0001 - 0x0000)
struct UI_Menu_ModeSelection_Element_C_ToggleHover final
{
public:
	bool                                          IsHovered_0;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_Menu_ModeSelection_Element_C_ToggleHover) == 0x000001, "Wrong alignment on UI_Menu_ModeSelection_Element_C_ToggleHover");
static_assert(sizeof(UI_Menu_ModeSelection_Element_C_ToggleHover) == 0x000001, "Wrong size on UI_Menu_ModeSelection_Element_C_ToggleHover");
static_assert(offsetof(UI_Menu_ModeSelection_Element_C_ToggleHover, IsHovered_0) == 0x000000, "Member 'UI_Menu_ModeSelection_Element_C_ToggleHover::IsHovered_0' has a wrong offset!");

// Function UI_Menu_ModeSelection_Element.UI_Menu_ModeSelection_Element_C.OnMouseButtonDown
// 0x0218 (0x0218 - 0x0000)
struct UI_Menu_ModeSelection_Element_C_OnMouseButtonDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00A8(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0160(0x00B8)()
};
static_assert(alignof(UI_Menu_ModeSelection_Element_C_OnMouseButtonDown) == 0x000008, "Wrong alignment on UI_Menu_ModeSelection_Element_C_OnMouseButtonDown");
static_assert(sizeof(UI_Menu_ModeSelection_Element_C_OnMouseButtonDown) == 0x000218, "Wrong size on UI_Menu_ModeSelection_Element_C_OnMouseButtonDown");
static_assert(offsetof(UI_Menu_ModeSelection_Element_C_OnMouseButtonDown, MyGeometry) == 0x000000, "Member 'UI_Menu_ModeSelection_Element_C_OnMouseButtonDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(UI_Menu_ModeSelection_Element_C_OnMouseButtonDown, MouseEvent) == 0x000038, "Member 'UI_Menu_ModeSelection_Element_C_OnMouseButtonDown::MouseEvent' has a wrong offset!");
static_assert(offsetof(UI_Menu_ModeSelection_Element_C_OnMouseButtonDown, ReturnValue) == 0x0000A8, "Member 'UI_Menu_ModeSelection_Element_C_OnMouseButtonDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Menu_ModeSelection_Element_C_OnMouseButtonDown, CallFunc_Handled_ReturnValue) == 0x000160, "Member 'UI_Menu_ModeSelection_Element_C_OnMouseButtonDown::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function UI_Menu_ModeSelection_Element.UI_Menu_ModeSelection_Element_C.OnKeyDown
// 0x02B8 (0x02B8 - 0x0000)
struct UI_Menu_ModeSelection_Element_C_OnKeyDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FKeyEvent                              InKeyEvent;                                        // 0x0038(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FEventReply                            ReturnValue;                                       // 0x0070(0x00B8)(Parm, OutParm, ReturnParm)
	struct FKey                                   CallFunc_GetKey_ReturnValue;                       // 0x0128(0x0018)(HasGetValueTypeHash)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0140(0x00B8)()
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F9[0x7];                                      // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x0200(0x00B8)()
};
static_assert(alignof(UI_Menu_ModeSelection_Element_C_OnKeyDown) == 0x000008, "Wrong alignment on UI_Menu_ModeSelection_Element_C_OnKeyDown");
static_assert(sizeof(UI_Menu_ModeSelection_Element_C_OnKeyDown) == 0x0002B8, "Wrong size on UI_Menu_ModeSelection_Element_C_OnKeyDown");
static_assert(offsetof(UI_Menu_ModeSelection_Element_C_OnKeyDown, MyGeometry) == 0x000000, "Member 'UI_Menu_ModeSelection_Element_C_OnKeyDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(UI_Menu_ModeSelection_Element_C_OnKeyDown, InKeyEvent) == 0x000038, "Member 'UI_Menu_ModeSelection_Element_C_OnKeyDown::InKeyEvent' has a wrong offset!");
static_assert(offsetof(UI_Menu_ModeSelection_Element_C_OnKeyDown, ReturnValue) == 0x000070, "Member 'UI_Menu_ModeSelection_Element_C_OnKeyDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Menu_ModeSelection_Element_C_OnKeyDown, CallFunc_GetKey_ReturnValue) == 0x000128, "Member 'UI_Menu_ModeSelection_Element_C_OnKeyDown::CallFunc_GetKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Menu_ModeSelection_Element_C_OnKeyDown, CallFunc_Handled_ReturnValue) == 0x000140, "Member 'UI_Menu_ModeSelection_Element_C_OnKeyDown::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Menu_ModeSelection_Element_C_OnKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x0001F8, "Member 'UI_Menu_ModeSelection_Element_C_OnKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Menu_ModeSelection_Element_C_OnKeyDown, CallFunc_Unhandled_ReturnValue) == 0x000200, "Member 'UI_Menu_ModeSelection_Element_C_OnKeyDown::CallFunc_Unhandled_ReturnValue' has a wrong offset!");

}

