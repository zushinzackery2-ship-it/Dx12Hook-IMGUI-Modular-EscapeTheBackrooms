#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Item_AlmondWater

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_Item_classes.hpp"
#include "Backrooms_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Item_AlmondWater.BP_Item_AlmondWater_C
// 0x0038 (0x0290 - 0x0258)
class ABP_Item_AlmondWater_C final : public ABP_Item_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_Item_AlmondWater_C;              // 0x0258(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   Cylinder;                                          // 0x0260(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   AWC_Locker;                                        // 0x0268(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   AWC_Gate;                                          // 0x0270(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         OpenCan_Alpha_15A195AB4DCA7E5C5215DEB67191AA92;    // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            OpenCan__Direction_15A195AB4DCA7E5C5215DEB67191AA92; // 0x027C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_27D[0x3];                                      // 0x027D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     OpenCan;                                           // 0x0280(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HalloweenMat;                                      // 0x0288(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          EnabledFOV;                                        // 0x0289(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_Item_AlmondWater(int32 EntryPoint);
	void Damage_SERVER(class UObject* Target, class AFancyCharacter* Character);
	void PlayAnimation();
	void OnCompleted_3881A8424F905F4C29433AB5756CB3DA(class FName NotifyName);
	void OnBlendOut_3881A8424F905F4C29433AB5756CB3DA(class FName NotifyName);
	void OnInterrupted_3881A8424F905F4C29433AB5756CB3DA(class FName NotifyName);
	void OnNotifyBegin_3881A8424F905F4C29433AB5756CB3DA(class FName NotifyName);
	void OnNotifyEnd_3881A8424F905F4C29433AB5756CB3DA(class FName NotifyName);
	void OpenCan__UpdateFunc();
	void OpenCan__FinishedFunc();
	void OnEventLoaded(EEventType EventType);
	void ToggleEvent(bool Enable);
	void UseItem();
	void SetMaterial(bool EnabledFOV_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Item_AlmondWater_C">();
	}
	static class ABP_Item_AlmondWater_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Item_AlmondWater_C>();
	}
};
static_assert(alignof(ABP_Item_AlmondWater_C) == 0x000008, "Wrong alignment on ABP_Item_AlmondWater_C");
static_assert(sizeof(ABP_Item_AlmondWater_C) == 0x000290, "Wrong size on ABP_Item_AlmondWater_C");
static_assert(offsetof(ABP_Item_AlmondWater_C, UberGraphFrame_BP_Item_AlmondWater_C) == 0x000258, "Member 'ABP_Item_AlmondWater_C::UberGraphFrame_BP_Item_AlmondWater_C' has a wrong offset!");
static_assert(offsetof(ABP_Item_AlmondWater_C, Cylinder) == 0x000260, "Member 'ABP_Item_AlmondWater_C::Cylinder' has a wrong offset!");
static_assert(offsetof(ABP_Item_AlmondWater_C, AWC_Locker) == 0x000268, "Member 'ABP_Item_AlmondWater_C::AWC_Locker' has a wrong offset!");
static_assert(offsetof(ABP_Item_AlmondWater_C, AWC_Gate) == 0x000270, "Member 'ABP_Item_AlmondWater_C::AWC_Gate' has a wrong offset!");
static_assert(offsetof(ABP_Item_AlmondWater_C, OpenCan_Alpha_15A195AB4DCA7E5C5215DEB67191AA92) == 0x000278, "Member 'ABP_Item_AlmondWater_C::OpenCan_Alpha_15A195AB4DCA7E5C5215DEB67191AA92' has a wrong offset!");
static_assert(offsetof(ABP_Item_AlmondWater_C, OpenCan__Direction_15A195AB4DCA7E5C5215DEB67191AA92) == 0x00027C, "Member 'ABP_Item_AlmondWater_C::OpenCan__Direction_15A195AB4DCA7E5C5215DEB67191AA92' has a wrong offset!");
static_assert(offsetof(ABP_Item_AlmondWater_C, OpenCan) == 0x000280, "Member 'ABP_Item_AlmondWater_C::OpenCan' has a wrong offset!");
static_assert(offsetof(ABP_Item_AlmondWater_C, HalloweenMat) == 0x000288, "Member 'ABP_Item_AlmondWater_C::HalloweenMat' has a wrong offset!");
static_assert(offsetof(ABP_Item_AlmondWater_C, EnabledFOV) == 0x000289, "Member 'ABP_Item_AlmondWater_C::EnabledFOV' has a wrong offset!");

}

