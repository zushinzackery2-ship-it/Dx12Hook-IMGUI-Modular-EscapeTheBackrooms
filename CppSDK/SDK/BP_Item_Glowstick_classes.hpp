#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Item_Glowstick

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "E_GlowstickColor_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BP_Item_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Item_Glowstick.BP_Item_Glowstick_C
// 0x0040 (0x0298 - 0x0258)
class ABP_Item_Glowstick_C : public ABP_Item_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_Item_Glowstick_C;                // 0x0258(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USpotLightComponent*                    SpotLight;                                         // 0x0260(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_Glowstick_Component_C*              BP_Glowstick_Component;                            // 0x0268(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight;                                        // 0x0270(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               DropRotation;                                      // 0x0278(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_284[0x4];                                      // 0x0284(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 DropClass;                                         // 0x0288(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_GlowstickColor                              GlowstickColor;                                    // 0x0290(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Item_Glowstick(int32 EntryPoint);
	void ReceiveDestroyed();
	void ReceiveTick(float DeltaSeconds);
	void PlaySubtitle();
	void MC_Fire();
	void OnCompleted_AE195271461F08CE34117A8A70C47D64(class FName NotifyName);
	void OnBlendOut_AE195271461F08CE34117A8A70C47D64(class FName NotifyName);
	void OnInterrupted_AE195271461F08CE34117A8A70C47D64(class FName NotifyName);
	void OnNotifyBegin_AE195271461F08CE34117A8A70C47D64(class FName NotifyName);
	void OnNotifyEnd_AE195271461F08CE34117A8A70C47D64(class FName NotifyName);
	void GetAdjustedIntensity(float Intensity, float* Adjusted);
	void GetAdjustedRadius(float Radius, float* Adjusted);
	void ReceiveBeginPlay();
	void UseItem();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Item_Glowstick_C">();
	}
	static class ABP_Item_Glowstick_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Item_Glowstick_C>();
	}
};
static_assert(alignof(ABP_Item_Glowstick_C) == 0x000008, "Wrong alignment on ABP_Item_Glowstick_C");
static_assert(sizeof(ABP_Item_Glowstick_C) == 0x000298, "Wrong size on ABP_Item_Glowstick_C");
static_assert(offsetof(ABP_Item_Glowstick_C, UberGraphFrame_BP_Item_Glowstick_C) == 0x000258, "Member 'ABP_Item_Glowstick_C::UberGraphFrame_BP_Item_Glowstick_C' has a wrong offset!");
static_assert(offsetof(ABP_Item_Glowstick_C, SpotLight) == 0x000260, "Member 'ABP_Item_Glowstick_C::SpotLight' has a wrong offset!");
static_assert(offsetof(ABP_Item_Glowstick_C, BP_Glowstick_Component) == 0x000268, "Member 'ABP_Item_Glowstick_C::BP_Glowstick_Component' has a wrong offset!");
static_assert(offsetof(ABP_Item_Glowstick_C, PointLight) == 0x000270, "Member 'ABP_Item_Glowstick_C::PointLight' has a wrong offset!");
static_assert(offsetof(ABP_Item_Glowstick_C, DropRotation) == 0x000278, "Member 'ABP_Item_Glowstick_C::DropRotation' has a wrong offset!");
static_assert(offsetof(ABP_Item_Glowstick_C, DropClass) == 0x000288, "Member 'ABP_Item_Glowstick_C::DropClass' has a wrong offset!");
static_assert(offsetof(ABP_Item_Glowstick_C, GlowstickColor) == 0x000290, "Member 'ABP_Item_Glowstick_C::GlowstickColor' has a wrong offset!");

}

