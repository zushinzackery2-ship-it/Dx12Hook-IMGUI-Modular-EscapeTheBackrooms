#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_NewGame

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "InputCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function W_NewGame.W_NewGame_C.ExecuteUbergraph_W_NewGame
// 0x0170 (0x0170 - 0x0000)
struct W_NewGame_C_ExecuteUbergraph_W_NewGame final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable_2;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable_3;               // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x000C(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue_1;            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasUserFocus_ReturnValue;                 // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasUserFocus_ReturnValue_1;               // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue_2;            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue_3;            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_MyGameInstance_C*                   K2Node_DynamicCast_AsBP_My_Game_Instance;          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Create_New_Slot_Success;                  // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82[0x6];                                       // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue_4;            // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_2;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable_3;                     // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable_4;               // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable_4;                     // 0x0093(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckName_IsValid;                        // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_ComponentBoundEvent_Text;                   // 0x0098(0x0018)(ConstParm)
	struct FDateTime                              CallFunc_Now_ReturnValue;                          // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSystemTimeSeconds_ReturnValue;         // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHeadMountedDisplayEnabled_ReturnValue;  // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Replace_ReturnValue;                      // 0x0120(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Hidden;                         // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHeadMountedDisplayEnabled_ReturnValue_1; // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MenuActor_C*                        K2Node_DynamicCast_AsBP_Menu_Actor;                // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_152[0x6];                                      // 0x0152(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_MyGameInstance_C*                   K2Node_DynamicCast_AsBP_My_Game_Instance_1;        // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_NewGame_C_ExecuteUbergraph_W_NewGame) == 0x000008, "Wrong alignment on W_NewGame_C_ExecuteUbergraph_W_NewGame");
static_assert(sizeof(W_NewGame_C_ExecuteUbergraph_W_NewGame) == 0x000170, "Wrong size on W_NewGame_C_ExecuteUbergraph_W_NewGame");
static_assert(offsetof(W_NewGame_C_ExecuteUbergraph_W_NewGame, EntryPoint) == 0x000000, "Member 'W_NewGame_C_ExecuteUbergraph_W_NewGame::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_NewGame_C_ExecuteUbergraph_W_NewGame, Temp_bool_IsClosed_Variable) == 0x000004, "Member 'W_NewGame_C_ExecuteUbergraph_W_NewGame::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(W_NewGame_C_ExecuteUbergraph_W_NewGame, Temp_bool_Has_Been_Initd_Variable) == 0x000005, "Member 'W_NewGame_C_ExecuteUbergraph_W_NewGame::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(W_NewGame_C_ExecuteUbergraph_W_NewGame, Temp_bool_IsClosed_Variable_1) == 0x000006, "Member 'W_NewGame_C_ExecuteUbergraph_W_NewGame::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(W_NewGame_C_ExecuteUbergraph_W_NewGame, Temp_bool_Has_Been_Initd_Variable_1) == 0x000007, "Member 'W_NewGame_C_ExecuteUbergraph_W_NewGame::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(W_NewGame_C_ExecuteUbergraph_W_NewGame, Temp_bool_Has_Been_Initd_Variable_2) == 0x000008, "Member 'W_NewGame_C_ExecuteUbergraph_W_NewGame::Temp_bool_Has_Been_Initd_Variable_2' has a wrong offset!");
static_assert(offsetof(W_NewGame_C_ExecuteUbergraph_W_NewGame, Temp_bool_Has_Been_Initd_Variable_3) == 0x000009, "Member 'W_NewGame_C_ExecuteUbergraph_W_NewGame::Temp_bool_Has_Been_Initd_Variable_3' has a wrong offset!");
static_assert(offsetof(W_NewGame_C_ExecuteUbergraph_W_NewGame, K2Node_Event_MyGeometry) == 0x00000C, "Member 'W_NewGame_C_ExecuteUbergraph_W_NewGame::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(W_NewGame_C_ExecuteUbergraph_W_NewGame, K2Node_Event_InDeltaTime) == 0x000044, "Member 'W_NewGame_C_ExecuteUbergraph_W_NewGame::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(W_NewGame_C_ExecuteUbergraph_W_NewGame, CallFunc_GetOwningPlayer_ReturnValue) == 0x000048, "Member 'W_NewGame_C_ExecuteUbergraph_W_NewGame::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_NewGame_C_ExecuteUbergraph_W_NewGame, CallFunc_GetOwningPlayer_ReturnValue_1) == 0x000050, "Member 'W_NewGame_C_ExecuteUbergraph_W_NewGame::CallFunc_GetOwningPlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_NewGame_C_ExecuteUbergraph_W_NewGame, CallFunc_HasUserFocus_ReturnValue) == 0x000058, "Member 'W_NewGame_C_ExecuteUbergraph_W_NewGame::CallFunc_HasUserFocus_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_NewGame_C_ExecuteUbergraph_W_NewGame, CallFunc_HasUserFocus_ReturnValue_1) == 0x000059, "Member 'W_NewGame_C_ExecuteUbergraph_W_NewGame::CallFunc_HasUserFocus_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_NewGame_C_ExecuteUbergraph_W_NewGame, CallFunc_GetOwningPlayer_ReturnValue_2) == 0x000060, "Member 'W_NewGame_C_ExecuteUbergraph_W_NewGame::CallFunc_GetOwningPlayer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_NewGame_C_ExecuteUbergraph_W_NewGame, CallFunc_GetOwningPlayer_ReturnValue_3) == 0x000068, "Member 'W_NewGame_C_ExecuteUbergraph_W_NewGame::CallFunc_GetOwningPlayer_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_NewGame_C_ExecuteUbergraph_W_NewGame, CallFunc_GetGameInstance_ReturnValue) == 0x000070, "Member 'W_NewGame_C_ExecuteUbergraph_W_NewGame::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_NewGame_C_ExecuteUbergraph_W_NewGame, K2Node_DynamicCast_AsBP_My_Game_Instance) == 0x000078, "Member 'W_NewGame_C_ExecuteUbergraph_W_NewGame::K2Node_DynamicCast_AsBP_My_Game_Instance' has a wrong offset!");
static_assert(offsetof(W_NewGame_C_ExecuteUbergraph_W_NewGame, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'W_NewGame_C_ExecuteUbergraph_W_NewGame::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_NewGame_C_ExecuteUbergraph_W_NewGame, CallFunc_Create_New_Slot_Success) == 0x000081, "Member 'W_NewGame_C_ExecuteUbergraph_W_NewGame::CallFunc_Create_New_Slot_Success' has a wrong offset!");
static_assert(offsetof(W_NewGame_C_ExecuteUbergraph_W_NewGame, CallFunc_GetOwningPlayer_ReturnValue_4) == 0x000088, "Member 'W_NewGame_C_ExecuteUbergraph_W_NewGame::CallFunc_GetOwningPlayer_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_NewGame_C_ExecuteUbergraph_W_NewGame, Temp_bool_IsClosed_Variable_2) == 0x000090, "Member 'W_NewGame_C_ExecuteUbergraph_W_NewGame::Temp_bool_IsClosed_Variable_2' has a wrong offset!");
static_assert(offsetof(W_NewGame_C_ExecuteUbergraph_W_NewGame, Temp_bool_IsClosed_Variable_3) == 0x000091, "Member 'W_NewGame_C_ExecuteUbergraph_W_NewGame::Temp_bool_IsClosed_Variable_3' has a wrong offset!");
static_assert(offsetof(W_NewGame_C_ExecuteUbergraph_W_NewGame, Temp_bool_Has_Been_Initd_Variable_4) == 0x000092, "Member 'W_NewGame_C_ExecuteUbergraph_W_NewGame::Temp_bool_Has_Been_Initd_Variable_4' has a wrong offset!");
static_assert(offsetof(W_NewGame_C_ExecuteUbergraph_W_NewGame, Temp_bool_IsClosed_Variable_4) == 0x000093, "Member 'W_NewGame_C_ExecuteUbergraph_W_NewGame::Temp_bool_IsClosed_Variable_4' has a wrong offset!");
static_assert(offsetof(W_NewGame_C_ExecuteUbergraph_W_NewGame, CallFunc_CheckName_IsValid) == 0x000094, "Member 'W_NewGame_C_ExecuteUbergraph_W_NewGame::CallFunc_CheckName_IsValid' has a wrong offset!");
static_assert(offsetof(W_NewGame_C_ExecuteUbergraph_W_NewGame, K2Node_ComponentBoundEvent_Text) == 0x000098, "Member 'W_NewGame_C_ExecuteUbergraph_W_NewGame::K2Node_ComponentBoundEvent_Text' has a wrong offset!");
static_assert(offsetof(W_NewGame_C_ExecuteUbergraph_W_NewGame, CallFunc_Now_ReturnValue) == 0x0000B0, "Member 'W_NewGame_C_ExecuteUbergraph_W_NewGame::CallFunc_Now_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_NewGame_C_ExecuteUbergraph_W_NewGame, CallFunc_Conv_TextToString_ReturnValue) == 0x0000B8, "Member 'W_NewGame_C_ExecuteUbergraph_W_NewGame::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_NewGame_C_ExecuteUbergraph_W_NewGame, CallFunc_GetSystemTimeSeconds_ReturnValue) == 0x0000C8, "Member 'W_NewGame_C_ExecuteUbergraph_W_NewGame::CallFunc_GetSystemTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_NewGame_C_ExecuteUbergraph_W_NewGame, CallFunc_Concat_StrStr_ReturnValue) == 0x0000D0, "Member 'W_NewGame_C_ExecuteUbergraph_W_NewGame::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_NewGame_C_ExecuteUbergraph_W_NewGame, CallFunc_Conv_IntToString_ReturnValue) == 0x0000E0, "Member 'W_NewGame_C_ExecuteUbergraph_W_NewGame::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_NewGame_C_ExecuteUbergraph_W_NewGame, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000F0, "Member 'W_NewGame_C_ExecuteUbergraph_W_NewGame::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_NewGame_C_ExecuteUbergraph_W_NewGame, CallFunc_IsHeadMountedDisplayEnabled_ReturnValue) == 0x000100, "Member 'W_NewGame_C_ExecuteUbergraph_W_NewGame::CallFunc_IsHeadMountedDisplayEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_NewGame_C_ExecuteUbergraph_W_NewGame, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000108, "Member 'W_NewGame_C_ExecuteUbergraph_W_NewGame::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_NewGame_C_ExecuteUbergraph_W_NewGame, CallFunc_Not_PreBool_ReturnValue) == 0x000118, "Member 'W_NewGame_C_ExecuteUbergraph_W_NewGame::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_NewGame_C_ExecuteUbergraph_W_NewGame, CallFunc_Replace_ReturnValue) == 0x000120, "Member 'W_NewGame_C_ExecuteUbergraph_W_NewGame::CallFunc_Replace_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_NewGame_C_ExecuteUbergraph_W_NewGame, K2Node_CustomEvent_Hidden) == 0x000130, "Member 'W_NewGame_C_ExecuteUbergraph_W_NewGame::K2Node_CustomEvent_Hidden' has a wrong offset!");
static_assert(offsetof(W_NewGame_C_ExecuteUbergraph_W_NewGame, CallFunc_GetPlayerPawn_ReturnValue) == 0x000138, "Member 'W_NewGame_C_ExecuteUbergraph_W_NewGame::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_NewGame_C_ExecuteUbergraph_W_NewGame, CallFunc_IsHeadMountedDisplayEnabled_ReturnValue_1) == 0x000140, "Member 'W_NewGame_C_ExecuteUbergraph_W_NewGame::CallFunc_IsHeadMountedDisplayEnabled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_NewGame_C_ExecuteUbergraph_W_NewGame, K2Node_DynamicCast_AsBP_Menu_Actor) == 0x000148, "Member 'W_NewGame_C_ExecuteUbergraph_W_NewGame::K2Node_DynamicCast_AsBP_Menu_Actor' has a wrong offset!");
static_assert(offsetof(W_NewGame_C_ExecuteUbergraph_W_NewGame, K2Node_DynamicCast_bSuccess_1) == 0x000150, "Member 'W_NewGame_C_ExecuteUbergraph_W_NewGame::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(W_NewGame_C_ExecuteUbergraph_W_NewGame, CallFunc_Not_PreBool_ReturnValue_1) == 0x000151, "Member 'W_NewGame_C_ExecuteUbergraph_W_NewGame::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_NewGame_C_ExecuteUbergraph_W_NewGame, CallFunc_GetGameInstance_ReturnValue_1) == 0x000158, "Member 'W_NewGame_C_ExecuteUbergraph_W_NewGame::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_NewGame_C_ExecuteUbergraph_W_NewGame, K2Node_DynamicCast_AsBP_My_Game_Instance_1) == 0x000160, "Member 'W_NewGame_C_ExecuteUbergraph_W_NewGame::K2Node_DynamicCast_AsBP_My_Game_Instance_1' has a wrong offset!");
static_assert(offsetof(W_NewGame_C_ExecuteUbergraph_W_NewGame, K2Node_DynamicCast_bSuccess_2) == 0x000168, "Member 'W_NewGame_C_ExecuteUbergraph_W_NewGame::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function W_NewGame.W_NewGame_C.ToggleVR
// 0x0001 (0x0001 - 0x0000)
struct W_NewGame_C_ToggleVR final
{
public:
	bool                                          Hidden;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_NewGame_C_ToggleVR) == 0x000001, "Wrong alignment on W_NewGame_C_ToggleVR");
static_assert(sizeof(W_NewGame_C_ToggleVR) == 0x000001, "Wrong size on W_NewGame_C_ToggleVR");
static_assert(offsetof(W_NewGame_C_ToggleVR, Hidden) == 0x000000, "Member 'W_NewGame_C_ToggleVR::Hidden' has a wrong offset!");

// Function W_NewGame.W_NewGame_C.BndEvt__W_NewGame_EditableTextBox_Name_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct W_NewGame_C_BndEvt__W_NewGame_EditableTextBox_Name_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(W_NewGame_C_BndEvt__W_NewGame_EditableTextBox_Name_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature) == 0x000008, "Wrong alignment on W_NewGame_C_BndEvt__W_NewGame_EditableTextBox_Name_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature");
static_assert(sizeof(W_NewGame_C_BndEvt__W_NewGame_EditableTextBox_Name_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature) == 0x000018, "Wrong size on W_NewGame_C_BndEvt__W_NewGame_EditableTextBox_Name_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature");
static_assert(offsetof(W_NewGame_C_BndEvt__W_NewGame_EditableTextBox_Name_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature, Text) == 0x000000, "Member 'W_NewGame_C_BndEvt__W_NewGame_EditableTextBox_Name_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature::Text' has a wrong offset!");

// Function W_NewGame.W_NewGame_C.Tick
// 0x003C (0x003C - 0x0000)
struct W_NewGame_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_NewGame_C_Tick) == 0x000004, "Wrong alignment on W_NewGame_C_Tick");
static_assert(sizeof(W_NewGame_C_Tick) == 0x00003C, "Wrong size on W_NewGame_C_Tick");
static_assert(offsetof(W_NewGame_C_Tick, MyGeometry) == 0x000000, "Member 'W_NewGame_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_NewGame_C_Tick, InDeltaTime) == 0x000038, "Member 'W_NewGame_C_Tick::InDeltaTime' has a wrong offset!");

// Function W_NewGame.W_NewGame_C.CustomNavigation_Left
// 0x0028 (0x0028 - 0x0000)
struct W_NewGame_C_CustomNavigation_Left final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasUserFocus_ReturnValue;                 // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue_1;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_NewGame_C_CustomNavigation_Left) == 0x000008, "Wrong alignment on W_NewGame_C_CustomNavigation_Left");
static_assert(sizeof(W_NewGame_C_CustomNavigation_Left) == 0x000028, "Wrong size on W_NewGame_C_CustomNavigation_Left");
static_assert(offsetof(W_NewGame_C_CustomNavigation_Left, Navigation_0) == 0x000000, "Member 'W_NewGame_C_CustomNavigation_Left::Navigation_0' has a wrong offset!");
static_assert(offsetof(W_NewGame_C_CustomNavigation_Left, ReturnValue) == 0x000008, "Member 'W_NewGame_C_CustomNavigation_Left::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_NewGame_C_CustomNavigation_Left, CallFunc_GetOwningPlayer_ReturnValue) == 0x000010, "Member 'W_NewGame_C_CustomNavigation_Left::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_NewGame_C_CustomNavigation_Left, CallFunc_HasUserFocus_ReturnValue) == 0x000018, "Member 'W_NewGame_C_CustomNavigation_Left::CallFunc_HasUserFocus_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_NewGame_C_CustomNavigation_Left, CallFunc_GetOwningPlayer_ReturnValue_1) == 0x000020, "Member 'W_NewGame_C_CustomNavigation_Left::CallFunc_GetOwningPlayer_ReturnValue_1' has a wrong offset!");

// Function W_NewGame.W_NewGame_C.CustomNavigation_Right
// 0x0028 (0x0028 - 0x0000)
struct W_NewGame_C_CustomNavigation_Right final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasUserFocus_ReturnValue;                 // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue_1;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_NewGame_C_CustomNavigation_Right) == 0x000008, "Wrong alignment on W_NewGame_C_CustomNavigation_Right");
static_assert(sizeof(W_NewGame_C_CustomNavigation_Right) == 0x000028, "Wrong size on W_NewGame_C_CustomNavigation_Right");
static_assert(offsetof(W_NewGame_C_CustomNavigation_Right, Navigation_0) == 0x000000, "Member 'W_NewGame_C_CustomNavigation_Right::Navigation_0' has a wrong offset!");
static_assert(offsetof(W_NewGame_C_CustomNavigation_Right, ReturnValue) == 0x000008, "Member 'W_NewGame_C_CustomNavigation_Right::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_NewGame_C_CustomNavigation_Right, CallFunc_GetOwningPlayer_ReturnValue) == 0x000010, "Member 'W_NewGame_C_CustomNavigation_Right::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_NewGame_C_CustomNavigation_Right, CallFunc_HasUserFocus_ReturnValue) == 0x000018, "Member 'W_NewGame_C_CustomNavigation_Right::CallFunc_HasUserFocus_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_NewGame_C_CustomNavigation_Right, CallFunc_GetOwningPlayer_ReturnValue_1) == 0x000020, "Member 'W_NewGame_C_CustomNavigation_Right::CallFunc_GetOwningPlayer_ReturnValue_1' has a wrong offset!");

// Function W_NewGame.W_NewGame_C.OnMouseButtonUp
// 0x0218 (0x0218 - 0x0000)
struct W_NewGame_C_OnMouseButtonUp final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00A8(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0160(0x00B8)()
};
static_assert(alignof(W_NewGame_C_OnMouseButtonUp) == 0x000008, "Wrong alignment on W_NewGame_C_OnMouseButtonUp");
static_assert(sizeof(W_NewGame_C_OnMouseButtonUp) == 0x000218, "Wrong size on W_NewGame_C_OnMouseButtonUp");
static_assert(offsetof(W_NewGame_C_OnMouseButtonUp, MyGeometry) == 0x000000, "Member 'W_NewGame_C_OnMouseButtonUp::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_NewGame_C_OnMouseButtonUp, MouseEvent) == 0x000038, "Member 'W_NewGame_C_OnMouseButtonUp::MouseEvent' has a wrong offset!");
static_assert(offsetof(W_NewGame_C_OnMouseButtonUp, ReturnValue) == 0x0000A8, "Member 'W_NewGame_C_OnMouseButtonUp::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_NewGame_C_OnMouseButtonUp, CallFunc_Handled_ReturnValue) == 0x000160, "Member 'W_NewGame_C_OnMouseButtonUp::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function W_NewGame.W_NewGame_C.CustomNavigation_Up
// 0x0018 (0x0018 - 0x0000)
struct W_NewGame_C_CustomNavigation_Up final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_NewGame_C_CustomNavigation_Up) == 0x000008, "Wrong alignment on W_NewGame_C_CustomNavigation_Up");
static_assert(sizeof(W_NewGame_C_CustomNavigation_Up) == 0x000018, "Wrong size on W_NewGame_C_CustomNavigation_Up");
static_assert(offsetof(W_NewGame_C_CustomNavigation_Up, Navigation_0) == 0x000000, "Member 'W_NewGame_C_CustomNavigation_Up::Navigation_0' has a wrong offset!");
static_assert(offsetof(W_NewGame_C_CustomNavigation_Up, ReturnValue) == 0x000008, "Member 'W_NewGame_C_CustomNavigation_Up::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_NewGame_C_CustomNavigation_Up, CallFunc_GetOwningPlayer_ReturnValue) == 0x000010, "Member 'W_NewGame_C_CustomNavigation_Up::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");

// Function W_NewGame.W_NewGame_C.CustomNavigation_Down
// 0x0018 (0x0018 - 0x0000)
struct W_NewGame_C_CustomNavigation_Down final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_NewGame_C_CustomNavigation_Down) == 0x000008, "Wrong alignment on W_NewGame_C_CustomNavigation_Down");
static_assert(sizeof(W_NewGame_C_CustomNavigation_Down) == 0x000018, "Wrong size on W_NewGame_C_CustomNavigation_Down");
static_assert(offsetof(W_NewGame_C_CustomNavigation_Down, Navigation_0) == 0x000000, "Member 'W_NewGame_C_CustomNavigation_Down::Navigation_0' has a wrong offset!");
static_assert(offsetof(W_NewGame_C_CustomNavigation_Down, ReturnValue) == 0x000008, "Member 'W_NewGame_C_CustomNavigation_Down::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_NewGame_C_CustomNavigation_Down, CallFunc_GetOwningPlayer_ReturnValue) == 0x000010, "Member 'W_NewGame_C_CustomNavigation_Down::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");

// Function W_NewGame.W_NewGame_C.CheckName
// 0x00E8 (0x00E8 - 0x0000)
struct W_NewGame_C_CheckName final
{
public:
	bool                                          IsValid;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetCurrentCulture_ReturnValue;            // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_StrStr_ReturnValue;              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Replace_ReturnValue;                      // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0048(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         CallFunc_GetCharacterArrayFromString_ReturnValue;  // 0x0080(0x0010)(ReferenceParm)
	bool                                          CallFunc_DoesSaveGameExist_ReturnValue;            // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_ToLower_ReturnValue;                      // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C2[0x2];                                       // 0x00C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_2;          // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue;                          // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_NewGame_C_CheckName) == 0x000008, "Wrong alignment on W_NewGame_C_CheckName");
static_assert(sizeof(W_NewGame_C_CheckName) == 0x0000E8, "Wrong size on W_NewGame_C_CheckName");
static_assert(offsetof(W_NewGame_C_CheckName, IsValid) == 0x000000, "Member 'W_NewGame_C_CheckName::IsValid' has a wrong offset!");
static_assert(offsetof(W_NewGame_C_CheckName, Temp_int_Array_Index_Variable) == 0x000004, "Member 'W_NewGame_C_CheckName::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_NewGame_C_CheckName, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'W_NewGame_C_CheckName::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_NewGame_C_CheckName, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'W_NewGame_C_CheckName::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_NewGame_C_CheckName, CallFunc_GetCurrentCulture_ReturnValue) == 0x000010, "Member 'W_NewGame_C_CheckName::CallFunc_GetCurrentCulture_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_NewGame_C_CheckName, CallFunc_NotEqual_StrStr_ReturnValue) == 0x000020, "Member 'W_NewGame_C_CheckName::CallFunc_NotEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_NewGame_C_CheckName, CallFunc_Conv_TextToString_ReturnValue) == 0x000028, "Member 'W_NewGame_C_CheckName::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_NewGame_C_CheckName, CallFunc_Replace_ReturnValue) == 0x000038, "Member 'W_NewGame_C_CheckName::CallFunc_Replace_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_NewGame_C_CheckName, CallFunc_Conv_StringToText_ReturnValue) == 0x000048, "Member 'W_NewGame_C_CheckName::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_NewGame_C_CheckName, CallFunc_Conv_TextToString_ReturnValue_1) == 0x000060, "Member 'W_NewGame_C_CheckName::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_NewGame_C_CheckName, CallFunc_Concat_StrStr_ReturnValue) == 0x000070, "Member 'W_NewGame_C_CheckName::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_NewGame_C_CheckName, CallFunc_GetCharacterArrayFromString_ReturnValue) == 0x000080, "Member 'W_NewGame_C_CheckName::CallFunc_GetCharacterArrayFromString_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_NewGame_C_CheckName, CallFunc_DoesSaveGameExist_ReturnValue) == 0x000090, "Member 'W_NewGame_C_CheckName::CallFunc_DoesSaveGameExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_NewGame_C_CheckName, CallFunc_Array_Get_Item) == 0x000098, "Member 'W_NewGame_C_CheckName::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_NewGame_C_CheckName, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x0000A8, "Member 'W_NewGame_C_CheckName::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_NewGame_C_CheckName, CallFunc_ToLower_ReturnValue) == 0x0000B0, "Member 'W_NewGame_C_CheckName::CallFunc_ToLower_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_NewGame_C_CheckName, CallFunc_BooleanOR_ReturnValue) == 0x0000C0, "Member 'W_NewGame_C_CheckName::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_NewGame_C_CheckName, CallFunc_Array_Contains_ReturnValue) == 0x0000C1, "Member 'W_NewGame_C_CheckName::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_NewGame_C_CheckName, CallFunc_Array_Length_ReturnValue) == 0x0000C4, "Member 'W_NewGame_C_CheckName::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_NewGame_C_CheckName, CallFunc_Less_IntInt_ReturnValue) == 0x0000C8, "Member 'W_NewGame_C_CheckName::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_NewGame_C_CheckName, CallFunc_Conv_TextToString_ReturnValue_2) == 0x0000D0, "Member 'W_NewGame_C_CheckName::CallFunc_Conv_TextToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_NewGame_C_CheckName, CallFunc_Len_ReturnValue) == 0x0000E0, "Member 'W_NewGame_C_CheckName::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_NewGame_C_CheckName, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000E4, "Member 'W_NewGame_C_CheckName::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_NewGame_C_CheckName, CallFunc_Greater_IntInt_ReturnValue) == 0x0000E5, "Member 'W_NewGame_C_CheckName::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_NewGame_C_CheckName, CallFunc_BooleanAND_ReturnValue) == 0x0000E6, "Member 'W_NewGame_C_CheckName::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function W_NewGame.W_NewGame_C.OnKeyDown
// 0x0200 (0x0200 - 0x0000)
struct W_NewGame_C_OnKeyDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FKeyEvent                              InKeyEvent;                                        // 0x0038(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FEventReply                            ReturnValue;                                       // 0x0070(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0128(0x00B8)()
	struct FKey                                   CallFunc_GetKey_ReturnValue;                       // 0x01E0(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_1;          // 0x01F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x01FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_NewGame_C_OnKeyDown) == 0x000008, "Wrong alignment on W_NewGame_C_OnKeyDown");
static_assert(sizeof(W_NewGame_C_OnKeyDown) == 0x000200, "Wrong size on W_NewGame_C_OnKeyDown");
static_assert(offsetof(W_NewGame_C_OnKeyDown, MyGeometry) == 0x000000, "Member 'W_NewGame_C_OnKeyDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_NewGame_C_OnKeyDown, InKeyEvent) == 0x000038, "Member 'W_NewGame_C_OnKeyDown::InKeyEvent' has a wrong offset!");
static_assert(offsetof(W_NewGame_C_OnKeyDown, ReturnValue) == 0x000070, "Member 'W_NewGame_C_OnKeyDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_NewGame_C_OnKeyDown, CallFunc_Handled_ReturnValue) == 0x000128, "Member 'W_NewGame_C_OnKeyDown::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_NewGame_C_OnKeyDown, CallFunc_GetKey_ReturnValue) == 0x0001E0, "Member 'W_NewGame_C_OnKeyDown::CallFunc_GetKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_NewGame_C_OnKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x0001F8, "Member 'W_NewGame_C_OnKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_NewGame_C_OnKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue_1) == 0x0001F9, "Member 'W_NewGame_C_OnKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_NewGame_C_OnKeyDown, CallFunc_BooleanOR_ReturnValue) == 0x0001FA, "Member 'W_NewGame_C_OnKeyDown::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

}

