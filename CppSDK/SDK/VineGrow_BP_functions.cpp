#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VineGrow_BP

#include "Basic.hpp"

#include "VineGrow_BP_classes.hpp"
#include "VineGrow_BP_parameters.hpp"


namespace SDK
{

// Function VineGrow_BP.VineGrow_BP_C.ExecuteUbergraph_VineGrow_BP
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AVineGrow_BP_C::ExecuteUbergraph_VineGrow_BP(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VineGrow_BP_C", "ExecuteUbergraph_VineGrow_BP");

	Params::VineGrow_BP_C_ExecuteUbergraph_VineGrow_BP Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function VineGrow_BP.VineGrow_BP_C.UpdateSplineVisibility
// (BlueprintCallable, BlueprintEvent)

void AVineGrow_BP_C::UpdateSplineVisibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VineGrow_BP_C", "UpdateSplineVisibility");

	UObject::ProcessEvent(Func, nullptr);
}


// Function VineGrow_BP.VineGrow_BP_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AVineGrow_BP_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VineGrow_BP_C", "ReceiveTick");

	Params::VineGrow_BP_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function VineGrow_BP.VineGrow_BP_C.UpdateCurrentSegment
// (BlueprintCallable, BlueprintEvent)

void AVineGrow_BP_C::UpdateCurrentSegment()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VineGrow_BP_C", "UpdateCurrentSegment");

	UObject::ProcessEvent(Func, nullptr);
}


// Function VineGrow_BP.VineGrow_BP_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AVineGrow_BP_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VineGrow_BP_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function VineGrow_BP.VineGrow_BP_C.GrowVines
// (BlueprintCallable, BlueprintEvent)

void AVineGrow_BP_C::GrowVines()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VineGrow_BP_C", "GrowVines");

	UObject::ProcessEvent(Func, nullptr);
}


// Function VineGrow_BP.VineGrow_BP_C.ResetVines
// (BlueprintCallable, BlueprintEvent)

void AVineGrow_BP_C::ResetVines()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VineGrow_BP_C", "ResetVines");

	UObject::ProcessEvent(Func, nullptr);
}


// Function VineGrow_BP.VineGrow_BP_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AVineGrow_BP_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VineGrow_BP_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function VineGrow_BP.VineGrow_BP_C.Get Max Number Of Segments
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32*                                  Segments                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AVineGrow_BP_C::Get_Max_Number_Of_Segments(int32* Segments)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VineGrow_BP_C", "Get Max Number Of Segments");

	Params::VineGrow_BP_C_Get_Max_Number_Of_Segments Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Segments != nullptr)
		*Segments = Parms.Segments;
}

}

