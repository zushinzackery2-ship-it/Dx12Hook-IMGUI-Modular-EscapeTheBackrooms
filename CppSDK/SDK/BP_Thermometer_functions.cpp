#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Thermometer

#include "Basic.hpp"

#include "BP_Thermometer_classes.hpp"
#include "BP_Thermometer_parameters.hpp"


namespace SDK
{

// Function BP_Thermometer.BP_Thermometer_C.ExecuteUbergraph_BP_Thermometer
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Thermometer_C::ExecuteUbergraph_BP_Thermometer(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Thermometer_C", "ExecuteUbergraph_BP_Thermometer");

	Params::BP_Thermometer_C_ExecuteUbergraph_BP_Thermometer Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Thermometer.BP_Thermometer_C.ReceiveDestroyed
// (Event, Public, BlueprintEvent)

void ABP_Thermometer_C::ReceiveDestroyed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Thermometer_C", "ReceiveDestroyed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Thermometer.BP_Thermometer_C.OnRep_Temperature
// (BlueprintCallable, BlueprintEvent)

void ABP_Thermometer_C::OnRep_Temperature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Thermometer_C", "OnRep_Temperature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Thermometer.BP_Thermometer_C.Has Spawned Display
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   HasSpawned                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Thermometer_C::Has_Spawned_Display(bool* HasSpawned)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Thermometer_C", "Has Spawned Display");

	Params::BP_Thermometer_C_Has_Spawned_Display Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (HasSpawned != nullptr)
		*HasSpawned = Parms.HasSpawned;
}


// Function BP_Thermometer.BP_Thermometer_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_Thermometer_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Thermometer_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Thermometer.BP_Thermometer_C.SetMaterial
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    EnabledFOV                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Thermometer_C::SetMaterial(bool EnabledFOV)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Thermometer_C", "SetMaterial");

	Params::BP_Thermometer_C_SetMaterial Parms{};

	Parms.EnabledFOV = EnabledFOV;

	UObject::ProcessEvent(Func, &Parms);
}

}

