#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Glowstick_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "E_GlowstickColor_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Glowstick_BP.Glowstick_BP_C
// 0x0020 (0x0240 - 0x0220)
class AGlowstick_BP_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   GlowStick;                                         // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	E_GlowstickColor                              GlowstickColor;                                    // 0x0238(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Glowstick_BP(int32 EntryPoint);
	void ReceiveBeginPlay();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Glowstick_BP_C">();
	}
	static class AGlowstick_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGlowstick_BP_C>();
	}
};
static_assert(alignof(AGlowstick_BP_C) == 0x000008, "Wrong alignment on AGlowstick_BP_C");
static_assert(sizeof(AGlowstick_BP_C) == 0x000240, "Wrong size on AGlowstick_BP_C");
static_assert(offsetof(AGlowstick_BP_C, UberGraphFrame) == 0x000220, "Member 'AGlowstick_BP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AGlowstick_BP_C, GlowStick) == 0x000228, "Member 'AGlowstick_BP_C::GlowStick' has a wrong offset!");
static_assert(offsetof(AGlowstick_BP_C, DefaultSceneRoot) == 0x000230, "Member 'AGlowstick_BP_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AGlowstick_BP_C, GlowstickColor) == 0x000238, "Member 'AGlowstick_BP_C::GlowstickColor' has a wrong offset!");

}

