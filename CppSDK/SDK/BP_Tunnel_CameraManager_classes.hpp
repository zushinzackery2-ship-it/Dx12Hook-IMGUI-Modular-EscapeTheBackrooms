#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Tunnel_CameraManager

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "S_CameraTarget_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Tunnel_CameraManager.BP_Tunnel_CameraManager_C
// 0x0058 (0x0278 - 0x0220)
class ABP_Tunnel_CameraManager_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_Camera_Screen_C*>            Cameras;                                           // 0x0230(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	float                                         MaxPictureDistance;                                // 0x0240(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentIndex;                                      // 0x0244(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_CameraTarget>                CameraTargets;                                     // 0x0248(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class ABP_Ceiling_Gate_C*                     ExitGate;                                          // 0x0258(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Elevator_C*                         Elevator;                                          // 0x0260(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumPlayers;                                        // 0x0268(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26C[0x4];                                      // 0x026C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Photo_Image_C*                      FirstImage;                                        // 0x0270(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Tunnel_CameraManager(int32 EntryPoint);
	void UpdatePlayers();
	void SetComplete();
	void ReceiveBeginPlay();
	void CheckPhotograph(class AFancyCharacter* Player);
	void Set_Prop(class UClass* Actor, int32 ObjectsNeeded);
	void OnRep_CurrentIndex();
	void CheckPlayers();
	void CheckTargets(TArray<class AActor*>& Targets, class AFancyCharacter* Player, bool* Completed);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Tunnel_CameraManager_C">();
	}
	static class ABP_Tunnel_CameraManager_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Tunnel_CameraManager_C>();
	}
};
static_assert(alignof(ABP_Tunnel_CameraManager_C) == 0x000008, "Wrong alignment on ABP_Tunnel_CameraManager_C");
static_assert(sizeof(ABP_Tunnel_CameraManager_C) == 0x000278, "Wrong size on ABP_Tunnel_CameraManager_C");
static_assert(offsetof(ABP_Tunnel_CameraManager_C, UberGraphFrame) == 0x000220, "Member 'ABP_Tunnel_CameraManager_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Tunnel_CameraManager_C, DefaultSceneRoot) == 0x000228, "Member 'ABP_Tunnel_CameraManager_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_Tunnel_CameraManager_C, Cameras) == 0x000230, "Member 'ABP_Tunnel_CameraManager_C::Cameras' has a wrong offset!");
static_assert(offsetof(ABP_Tunnel_CameraManager_C, MaxPictureDistance) == 0x000240, "Member 'ABP_Tunnel_CameraManager_C::MaxPictureDistance' has a wrong offset!");
static_assert(offsetof(ABP_Tunnel_CameraManager_C, CurrentIndex) == 0x000244, "Member 'ABP_Tunnel_CameraManager_C::CurrentIndex' has a wrong offset!");
static_assert(offsetof(ABP_Tunnel_CameraManager_C, CameraTargets) == 0x000248, "Member 'ABP_Tunnel_CameraManager_C::CameraTargets' has a wrong offset!");
static_assert(offsetof(ABP_Tunnel_CameraManager_C, ExitGate) == 0x000258, "Member 'ABP_Tunnel_CameraManager_C::ExitGate' has a wrong offset!");
static_assert(offsetof(ABP_Tunnel_CameraManager_C, Elevator) == 0x000260, "Member 'ABP_Tunnel_CameraManager_C::Elevator' has a wrong offset!");
static_assert(offsetof(ABP_Tunnel_CameraManager_C, NumPlayers) == 0x000268, "Member 'ABP_Tunnel_CameraManager_C::NumPlayers' has a wrong offset!");
static_assert(offsetof(ABP_Tunnel_CameraManager_C, FirstImage) == 0x000270, "Member 'ABP_Tunnel_CameraManager_C::FirstImage' has a wrong offset!");

}

