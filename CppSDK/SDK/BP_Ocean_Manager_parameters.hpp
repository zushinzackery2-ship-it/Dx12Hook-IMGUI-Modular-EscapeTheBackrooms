#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Ocean_Manager

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_Ocean_Manager.BP_Ocean_Manager_C.ExecuteUbergraph_BP_Ocean_Manager
// 0x0130 (0x0130 - 0x0000)
struct BP_Ocean_Manager_C_ExecuteUbergraph_BP_Ocean_Manager final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameUserSettings*                      CallFunc_GetGameUserSettings_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_1;                       // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetVisualEffectQuality_ReturnValue;       // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AEight_FFT_H_Ocean_Sim_C*               CallFunc_GetActorOfClass_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AEight_FFT_H_Ocean_Sim_C*               CallFunc_GetActorOfClass_ReturnValue_1;            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable_2;                     // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable_2;               // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_TimerExistsHandle_ReturnValue;         // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPCharacter_Demo_C*                    CallFunc_Find_Target_Player_TargetPlayer;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48[0x8];                                       // 0x0048(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0050(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0xC];                                       // 0x00C4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00D0(0x0030)(IsPlainOldData, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0100(0x0010)(ZeroConstructor, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0118(0x0008)(NoDestructor, HasGetValueTypeHash)
	class ABP_Fish_Scare_C*                       CallFunc_FinishSpawningActor_ReturnValue;          // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Ocean_Manager_C_ExecuteUbergraph_BP_Ocean_Manager) == 0x000010, "Wrong alignment on BP_Ocean_Manager_C_ExecuteUbergraph_BP_Ocean_Manager");
static_assert(sizeof(BP_Ocean_Manager_C_ExecuteUbergraph_BP_Ocean_Manager) == 0x000130, "Wrong size on BP_Ocean_Manager_C_ExecuteUbergraph_BP_Ocean_Manager");
static_assert(offsetof(BP_Ocean_Manager_C_ExecuteUbergraph_BP_Ocean_Manager, EntryPoint) == 0x000000, "Member 'BP_Ocean_Manager_C_ExecuteUbergraph_BP_Ocean_Manager::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Manager_C_ExecuteUbergraph_BP_Ocean_Manager, CallFunc_Lerp_ReturnValue) == 0x000004, "Member 'BP_Ocean_Manager_C_ExecuteUbergraph_BP_Ocean_Manager::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Manager_C_ExecuteUbergraph_BP_Ocean_Manager, Temp_bool_IsClosed_Variable) == 0x000008, "Member 'BP_Ocean_Manager_C_ExecuteUbergraph_BP_Ocean_Manager::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Manager_C_ExecuteUbergraph_BP_Ocean_Manager, Temp_bool_Has_Been_Initd_Variable) == 0x000009, "Member 'BP_Ocean_Manager_C_ExecuteUbergraph_BP_Ocean_Manager::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Manager_C_ExecuteUbergraph_BP_Ocean_Manager, Temp_bool_IsClosed_Variable_1) == 0x00000A, "Member 'BP_Ocean_Manager_C_ExecuteUbergraph_BP_Ocean_Manager::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Manager_C_ExecuteUbergraph_BP_Ocean_Manager, Temp_bool_Has_Been_Initd_Variable_1) == 0x00000B, "Member 'BP_Ocean_Manager_C_ExecuteUbergraph_BP_Ocean_Manager::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Manager_C_ExecuteUbergraph_BP_Ocean_Manager, CallFunc_GetGameUserSettings_ReturnValue) == 0x000010, "Member 'BP_Ocean_Manager_C_ExecuteUbergraph_BP_Ocean_Manager::CallFunc_GetGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Manager_C_ExecuteUbergraph_BP_Ocean_Manager, CallFunc_Lerp_ReturnValue_1) == 0x000018, "Member 'BP_Ocean_Manager_C_ExecuteUbergraph_BP_Ocean_Manager::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Manager_C_ExecuteUbergraph_BP_Ocean_Manager, CallFunc_GetVisualEffectQuality_ReturnValue) == 0x00001C, "Member 'BP_Ocean_Manager_C_ExecuteUbergraph_BP_Ocean_Manager::CallFunc_GetVisualEffectQuality_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Manager_C_ExecuteUbergraph_BP_Ocean_Manager, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000020, "Member 'BP_Ocean_Manager_C_ExecuteUbergraph_BP_Ocean_Manager::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Manager_C_ExecuteUbergraph_BP_Ocean_Manager, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000021, "Member 'BP_Ocean_Manager_C_ExecuteUbergraph_BP_Ocean_Manager::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Manager_C_ExecuteUbergraph_BP_Ocean_Manager, CallFunc_GetActorOfClass_ReturnValue) == 0x000028, "Member 'BP_Ocean_Manager_C_ExecuteUbergraph_BP_Ocean_Manager::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Manager_C_ExecuteUbergraph_BP_Ocean_Manager, CallFunc_GetActorOfClass_ReturnValue_1) == 0x000030, "Member 'BP_Ocean_Manager_C_ExecuteUbergraph_BP_Ocean_Manager::CallFunc_GetActorOfClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Manager_C_ExecuteUbergraph_BP_Ocean_Manager, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'BP_Ocean_Manager_C_ExecuteUbergraph_BP_Ocean_Manager::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Manager_C_ExecuteUbergraph_BP_Ocean_Manager, CallFunc_IsValid_ReturnValue_1) == 0x000039, "Member 'BP_Ocean_Manager_C_ExecuteUbergraph_BP_Ocean_Manager::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Manager_C_ExecuteUbergraph_BP_Ocean_Manager, Temp_bool_IsClosed_Variable_2) == 0x00003A, "Member 'BP_Ocean_Manager_C_ExecuteUbergraph_BP_Ocean_Manager::Temp_bool_IsClosed_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Manager_C_ExecuteUbergraph_BP_Ocean_Manager, Temp_bool_Has_Been_Initd_Variable_2) == 0x00003B, "Member 'BP_Ocean_Manager_C_ExecuteUbergraph_BP_Ocean_Manager::Temp_bool_Has_Been_Initd_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Manager_C_ExecuteUbergraph_BP_Ocean_Manager, CallFunc_K2_TimerExistsHandle_ReturnValue) == 0x00003C, "Member 'BP_Ocean_Manager_C_ExecuteUbergraph_BP_Ocean_Manager::CallFunc_K2_TimerExistsHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Manager_C_ExecuteUbergraph_BP_Ocean_Manager, CallFunc_Find_Target_Player_TargetPlayer) == 0x000040, "Member 'BP_Ocean_Manager_C_ExecuteUbergraph_BP_Ocean_Manager::CallFunc_Find_Target_Player_TargetPlayer' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Manager_C_ExecuteUbergraph_BP_Ocean_Manager, CallFunc_GetTransform_ReturnValue) == 0x000050, "Member 'BP_Ocean_Manager_C_ExecuteUbergraph_BP_Ocean_Manager::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Manager_C_ExecuteUbergraph_BP_Ocean_Manager, CallFunc_BreakTransform_Location) == 0x000080, "Member 'BP_Ocean_Manager_C_ExecuteUbergraph_BP_Ocean_Manager::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Manager_C_ExecuteUbergraph_BP_Ocean_Manager, CallFunc_BreakTransform_Rotation) == 0x00008C, "Member 'BP_Ocean_Manager_C_ExecuteUbergraph_BP_Ocean_Manager::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Manager_C_ExecuteUbergraph_BP_Ocean_Manager, CallFunc_BreakTransform_Scale) == 0x000098, "Member 'BP_Ocean_Manager_C_ExecuteUbergraph_BP_Ocean_Manager::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Manager_C_ExecuteUbergraph_BP_Ocean_Manager, CallFunc_IsValid_ReturnValue_2) == 0x0000A4, "Member 'BP_Ocean_Manager_C_ExecuteUbergraph_BP_Ocean_Manager::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Manager_C_ExecuteUbergraph_BP_Ocean_Manager, CallFunc_BreakVector_X) == 0x0000A8, "Member 'BP_Ocean_Manager_C_ExecuteUbergraph_BP_Ocean_Manager::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Manager_C_ExecuteUbergraph_BP_Ocean_Manager, CallFunc_BreakVector_Y) == 0x0000AC, "Member 'BP_Ocean_Manager_C_ExecuteUbergraph_BP_Ocean_Manager::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Manager_C_ExecuteUbergraph_BP_Ocean_Manager, CallFunc_BreakVector_Z) == 0x0000B0, "Member 'BP_Ocean_Manager_C_ExecuteUbergraph_BP_Ocean_Manager::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Manager_C_ExecuteUbergraph_BP_Ocean_Manager, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0000B4, "Member 'BP_Ocean_Manager_C_ExecuteUbergraph_BP_Ocean_Manager::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Manager_C_ExecuteUbergraph_BP_Ocean_Manager, CallFunc_MakeVector_ReturnValue) == 0x0000B8, "Member 'BP_Ocean_Manager_C_ExecuteUbergraph_BP_Ocean_Manager::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Manager_C_ExecuteUbergraph_BP_Ocean_Manager, CallFunc_MakeTransform_ReturnValue) == 0x0000D0, "Member 'BP_Ocean_Manager_C_ExecuteUbergraph_BP_Ocean_Manager::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Manager_C_ExecuteUbergraph_BP_Ocean_Manager, K2Node_CreateDelegate_OutputDelegate) == 0x000100, "Member 'BP_Ocean_Manager_C_ExecuteUbergraph_BP_Ocean_Manager::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Manager_C_ExecuteUbergraph_BP_Ocean_Manager, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000110, "Member 'BP_Ocean_Manager_C_ExecuteUbergraph_BP_Ocean_Manager::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Manager_C_ExecuteUbergraph_BP_Ocean_Manager, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000118, "Member 'BP_Ocean_Manager_C_ExecuteUbergraph_BP_Ocean_Manager::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Manager_C_ExecuteUbergraph_BP_Ocean_Manager, CallFunc_FinishSpawningActor_ReturnValue) == 0x000120, "Member 'BP_Ocean_Manager_C_ExecuteUbergraph_BP_Ocean_Manager::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function BP_Ocean_Manager.BP_Ocean_Manager_C.UpdateBuoyancy
// 0x0020 (0x0020 - 0x0000)
struct BP_Ocean_Manager_C_UpdateBuoyancy final
{
public:
	bool                                          Rising;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_RowBoat_C*                          CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Ocean_Manager_C_UpdateBuoyancy) == 0x000008, "Wrong alignment on BP_Ocean_Manager_C_UpdateBuoyancy");
static_assert(sizeof(BP_Ocean_Manager_C_UpdateBuoyancy) == 0x000020, "Wrong size on BP_Ocean_Manager_C_UpdateBuoyancy");
static_assert(offsetof(BP_Ocean_Manager_C_UpdateBuoyancy, Rising) == 0x000000, "Member 'BP_Ocean_Manager_C_UpdateBuoyancy::Rising' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Manager_C_UpdateBuoyancy, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_Ocean_Manager_C_UpdateBuoyancy::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Manager_C_UpdateBuoyancy, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_Ocean_Manager_C_UpdateBuoyancy::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Manager_C_UpdateBuoyancy, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_Ocean_Manager_C_UpdateBuoyancy::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Manager_C_UpdateBuoyancy, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_Ocean_Manager_C_UpdateBuoyancy::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Manager_C_UpdateBuoyancy, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_Ocean_Manager_C_UpdateBuoyancy::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Manager_C_UpdateBuoyancy, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'BP_Ocean_Manager_C_UpdateBuoyancy::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_Ocean_Manager.BP_Ocean_Manager_C.UpdateDrowning
// 0x0040 (0x0040 - 0x0000)
struct BP_Ocean_Manager_C_UpdateDrowning final
{
public:
	bool                                          Rising;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMP_GameState_C*                        K2Node_DynamicCast_AsMP_Game_State;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABPCharacter_Demo_C*                    CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAC_Swimming_C*                         CallFunc_GetComponentByClass_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Ocean_Manager_C_UpdateDrowning) == 0x000008, "Wrong alignment on BP_Ocean_Manager_C_UpdateDrowning");
static_assert(sizeof(BP_Ocean_Manager_C_UpdateDrowning) == 0x000040, "Wrong size on BP_Ocean_Manager_C_UpdateDrowning");
static_assert(offsetof(BP_Ocean_Manager_C_UpdateDrowning, Rising) == 0x000000, "Member 'BP_Ocean_Manager_C_UpdateDrowning::Rising' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Manager_C_UpdateDrowning, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_Ocean_Manager_C_UpdateDrowning::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Manager_C_UpdateDrowning, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_Ocean_Manager_C_UpdateDrowning::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Manager_C_UpdateDrowning, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_Ocean_Manager_C_UpdateDrowning::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Manager_C_UpdateDrowning, CallFunc_GetGameState_ReturnValue) == 0x000010, "Member 'BP_Ocean_Manager_C_UpdateDrowning::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Manager_C_UpdateDrowning, K2Node_DynamicCast_AsMP_Game_State) == 0x000018, "Member 'BP_Ocean_Manager_C_UpdateDrowning::K2Node_DynamicCast_AsMP_Game_State' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Manager_C_UpdateDrowning, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_Ocean_Manager_C_UpdateDrowning::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Manager_C_UpdateDrowning, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'BP_Ocean_Manager_C_UpdateDrowning::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Manager_C_UpdateDrowning, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_Ocean_Manager_C_UpdateDrowning::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Manager_C_UpdateDrowning, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_Ocean_Manager_C_UpdateDrowning::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Manager_C_UpdateDrowning, CallFunc_GetComponentByClass_ReturnValue) == 0x000038, "Member 'BP_Ocean_Manager_C_UpdateDrowning::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");

// Function BP_Ocean_Manager.BP_Ocean_Manager_C.Find Target Player
// 0x0180 (0x0180 - 0x0000)
struct BP_Ocean_Manager_C_Find_Target_Player final
{
public:
	class ABPCharacter_Demo_C*                    TargetPlayer;                                      // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ConstParm, ReferenceParm)
	TArray<class AActor*>                         K2Node_MakeArray_Array_1;                          // 0x0020(0x0010)(ConstParm, ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMP_GameState_C*                        K2Node_DynamicCast_AsMP_Game_State;                // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABPCharacter_Demo_C*                    CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_BoxTraceSingleForObjects_OutHit;          // 0x0070(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BoxTraceSingleForObjects_ReturnValue;     // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00FB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0104(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0110(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x011C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0128(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0148(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0164(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0170(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x017C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSwimming_ReturnValue;                   // 0x017D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOverlappingActor_ReturnValue;           // 0x017E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Ocean_Manager_C_Find_Target_Player) == 0x000008, "Wrong alignment on BP_Ocean_Manager_C_Find_Target_Player");
static_assert(sizeof(BP_Ocean_Manager_C_Find_Target_Player) == 0x000180, "Wrong size on BP_Ocean_Manager_C_Find_Target_Player");
static_assert(offsetof(BP_Ocean_Manager_C_Find_Target_Player, TargetPlayer) == 0x000000, "Member 'BP_Ocean_Manager_C_Find_Target_Player::TargetPlayer' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Manager_C_Find_Target_Player, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_Ocean_Manager_C_Find_Target_Player::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Manager_C_Find_Target_Player, K2Node_MakeArray_Array) == 0x000010, "Member 'BP_Ocean_Manager_C_Find_Target_Player::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Manager_C_Find_Target_Player, K2Node_MakeArray_Array_1) == 0x000020, "Member 'BP_Ocean_Manager_C_Find_Target_Player::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Manager_C_Find_Target_Player, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'BP_Ocean_Manager_C_Find_Target_Player::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Manager_C_Find_Target_Player, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'BP_Ocean_Manager_C_Find_Target_Player::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Manager_C_Find_Target_Player, CallFunc_GetGameState_ReturnValue) == 0x000038, "Member 'BP_Ocean_Manager_C_Find_Target_Player::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Manager_C_Find_Target_Player, K2Node_DynamicCast_AsMP_Game_State) == 0x000040, "Member 'BP_Ocean_Manager_C_Find_Target_Player::K2Node_DynamicCast_AsMP_Game_State' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Manager_C_Find_Target_Player, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_Ocean_Manager_C_Find_Target_Player::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Manager_C_Find_Target_Player, CallFunc_Array_Length_ReturnValue) == 0x00004C, "Member 'BP_Ocean_Manager_C_Find_Target_Player::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Manager_C_Find_Target_Player, CallFunc_Array_Get_Item) == 0x000050, "Member 'BP_Ocean_Manager_C_Find_Target_Player::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Manager_C_Find_Target_Player, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'BP_Ocean_Manager_C_Find_Target_Player::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Manager_C_Find_Target_Player, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00005C, "Member 'BP_Ocean_Manager_C_Find_Target_Player::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Manager_C_Find_Target_Player, CallFunc_GetController_ReturnValue) == 0x000068, "Member 'BP_Ocean_Manager_C_Find_Target_Player::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Manager_C_Find_Target_Player, CallFunc_BoxTraceSingleForObjects_OutHit) == 0x000070, "Member 'BP_Ocean_Manager_C_Find_Target_Player::CallFunc_BoxTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Manager_C_Find_Target_Player, CallFunc_BoxTraceSingleForObjects_ReturnValue) == 0x0000F8, "Member 'BP_Ocean_Manager_C_Find_Target_Player::CallFunc_BoxTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Manager_C_Find_Target_Player, CallFunc_IsValid_ReturnValue) == 0x0000F9, "Member 'BP_Ocean_Manager_C_Find_Target_Player::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Manager_C_Find_Target_Player, CallFunc_BreakHitResult_bBlockingHit) == 0x0000FA, "Member 'BP_Ocean_Manager_C_Find_Target_Player::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Manager_C_Find_Target_Player, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000FB, "Member 'BP_Ocean_Manager_C_Find_Target_Player::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Manager_C_Find_Target_Player, CallFunc_BreakHitResult_Time) == 0x0000FC, "Member 'BP_Ocean_Manager_C_Find_Target_Player::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Manager_C_Find_Target_Player, CallFunc_BreakHitResult_Distance) == 0x000100, "Member 'BP_Ocean_Manager_C_Find_Target_Player::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Manager_C_Find_Target_Player, CallFunc_BreakHitResult_Location) == 0x000104, "Member 'BP_Ocean_Manager_C_Find_Target_Player::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Manager_C_Find_Target_Player, CallFunc_BreakHitResult_ImpactPoint) == 0x000110, "Member 'BP_Ocean_Manager_C_Find_Target_Player::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Manager_C_Find_Target_Player, CallFunc_BreakHitResult_Normal) == 0x00011C, "Member 'BP_Ocean_Manager_C_Find_Target_Player::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Manager_C_Find_Target_Player, CallFunc_BreakHitResult_ImpactNormal) == 0x000128, "Member 'BP_Ocean_Manager_C_Find_Target_Player::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Manager_C_Find_Target_Player, CallFunc_BreakHitResult_PhysMat) == 0x000138, "Member 'BP_Ocean_Manager_C_Find_Target_Player::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Manager_C_Find_Target_Player, CallFunc_BreakHitResult_HitActor) == 0x000140, "Member 'BP_Ocean_Manager_C_Find_Target_Player::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Manager_C_Find_Target_Player, CallFunc_BreakHitResult_HitComponent) == 0x000148, "Member 'BP_Ocean_Manager_C_Find_Target_Player::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Manager_C_Find_Target_Player, CallFunc_BreakHitResult_HitBoneName) == 0x000150, "Member 'BP_Ocean_Manager_C_Find_Target_Player::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Manager_C_Find_Target_Player, CallFunc_BreakHitResult_HitItem) == 0x000158, "Member 'BP_Ocean_Manager_C_Find_Target_Player::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Manager_C_Find_Target_Player, CallFunc_BreakHitResult_ElementIndex) == 0x00015C, "Member 'BP_Ocean_Manager_C_Find_Target_Player::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Manager_C_Find_Target_Player, CallFunc_BreakHitResult_FaceIndex) == 0x000160, "Member 'BP_Ocean_Manager_C_Find_Target_Player::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Manager_C_Find_Target_Player, CallFunc_BreakHitResult_TraceStart) == 0x000164, "Member 'BP_Ocean_Manager_C_Find_Target_Player::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Manager_C_Find_Target_Player, CallFunc_BreakHitResult_TraceEnd) == 0x000170, "Member 'BP_Ocean_Manager_C_Find_Target_Player::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Manager_C_Find_Target_Player, CallFunc_Not_PreBool_ReturnValue) == 0x00017C, "Member 'BP_Ocean_Manager_C_Find_Target_Player::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Manager_C_Find_Target_Player, CallFunc_IsSwimming_ReturnValue) == 0x00017D, "Member 'BP_Ocean_Manager_C_Find_Target_Player::CallFunc_IsSwimming_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Manager_C_Find_Target_Player, CallFunc_IsOverlappingActor_ReturnValue) == 0x00017E, "Member 'BP_Ocean_Manager_C_Find_Target_Player::CallFunc_IsOverlappingActor_ReturnValue' has a wrong offset!");

}

