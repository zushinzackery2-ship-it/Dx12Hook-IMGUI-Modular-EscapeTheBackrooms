#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: InGame_UI

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Backrooms_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass InGame_UI.InGame_UI_C
// 0x0070 (0x02D0 - 0x0260)
class UInGame_UI_C final : public UCrosshairWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Blur;                                              // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UBackgroundBlur*                        BackgroundBlur_103;                                // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 BlueprintImage;                                    // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 CrosshairImage;                                    // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 CrosshairImage_1;                                  // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             InteractText;                                      // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 NoteImage;                                         // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 SanityIcon;                                        // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 SanityProgress;                                    // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	float                                         LastSanity;                                        // 0x02B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B4[0x4];                                      // 0x02B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveLinearColor*                      ColorCurve;                                        // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              LastNoteLocation;                                  // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              LastNoteSize;                                      // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_InGame_UI(int32 EntryPoint);
	void Construct();
	void ScaleNote(bool Reverse);
	void PopInNote(class UTexture* Texture, class UStaticMeshComponent* Mesh);
	void OnUpdateSanity(float Sanity);
	void OnInteract();
	void NoteListener();
	void ScaleMap(bool Reverse);
	void PopInMap(class UTexture* Texture, class UStaticMeshComponent* Mesh);
	void CanClose();
	void ShowNote(class UTexture* NoteTexture);
	void HideNote();
	void ShowMap(class UTexture* NoteTexture);
	void HideMap();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"InGame_UI_C">();
	}
	static class UInGame_UI_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UInGame_UI_C>();
	}
};
static_assert(alignof(UInGame_UI_C) == 0x000008, "Wrong alignment on UInGame_UI_C");
static_assert(sizeof(UInGame_UI_C) == 0x0002D0, "Wrong size on UInGame_UI_C");
static_assert(offsetof(UInGame_UI_C, UberGraphFrame) == 0x000260, "Member 'UInGame_UI_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UInGame_UI_C, Blur) == 0x000268, "Member 'UInGame_UI_C::Blur' has a wrong offset!");
static_assert(offsetof(UInGame_UI_C, BackgroundBlur_103) == 0x000270, "Member 'UInGame_UI_C::BackgroundBlur_103' has a wrong offset!");
static_assert(offsetof(UInGame_UI_C, BlueprintImage) == 0x000278, "Member 'UInGame_UI_C::BlueprintImage' has a wrong offset!");
static_assert(offsetof(UInGame_UI_C, CrosshairImage) == 0x000280, "Member 'UInGame_UI_C::CrosshairImage' has a wrong offset!");
static_assert(offsetof(UInGame_UI_C, CrosshairImage_1) == 0x000288, "Member 'UInGame_UI_C::CrosshairImage_1' has a wrong offset!");
static_assert(offsetof(UInGame_UI_C, InteractText) == 0x000290, "Member 'UInGame_UI_C::InteractText' has a wrong offset!");
static_assert(offsetof(UInGame_UI_C, NoteImage) == 0x000298, "Member 'UInGame_UI_C::NoteImage' has a wrong offset!");
static_assert(offsetof(UInGame_UI_C, SanityIcon) == 0x0002A0, "Member 'UInGame_UI_C::SanityIcon' has a wrong offset!");
static_assert(offsetof(UInGame_UI_C, SanityProgress) == 0x0002A8, "Member 'UInGame_UI_C::SanityProgress' has a wrong offset!");
static_assert(offsetof(UInGame_UI_C, LastSanity) == 0x0002B0, "Member 'UInGame_UI_C::LastSanity' has a wrong offset!");
static_assert(offsetof(UInGame_UI_C, ColorCurve) == 0x0002B8, "Member 'UInGame_UI_C::ColorCurve' has a wrong offset!");
static_assert(offsetof(UInGame_UI_C, LastNoteLocation) == 0x0002C0, "Member 'UInGame_UI_C::LastNoteLocation' has a wrong offset!");
static_assert(offsetof(UInGame_UI_C, LastNoteSize) == 0x0002C8, "Member 'UInGame_UI_C::LastNoteSize' has a wrong offset!");

}

