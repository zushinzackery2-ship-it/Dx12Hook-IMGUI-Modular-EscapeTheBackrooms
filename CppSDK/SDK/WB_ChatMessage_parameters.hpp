#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_ChatMessage

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WB_ChatMessage.WB_ChatMessage_C.ExecuteUbergraph_WB_ChatMessage
// 0x0004 (0x0004 - 0x0000)
struct WB_ChatMessage_C_ExecuteUbergraph_WB_ChatMessage final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ChatMessage_C_ExecuteUbergraph_WB_ChatMessage) == 0x000004, "Wrong alignment on WB_ChatMessage_C_ExecuteUbergraph_WB_ChatMessage");
static_assert(sizeof(WB_ChatMessage_C_ExecuteUbergraph_WB_ChatMessage) == 0x000004, "Wrong size on WB_ChatMessage_C_ExecuteUbergraph_WB_ChatMessage");
static_assert(offsetof(WB_ChatMessage_C_ExecuteUbergraph_WB_ChatMessage, EntryPoint) == 0x000000, "Member 'WB_ChatMessage_C_ExecuteUbergraph_WB_ChatMessage::EntryPoint' has a wrong offset!");

// Function WB_ChatMessage.WB_ChatMessage_C.Set_ChatMessage
// 0x0050 (0x0050 - 0x0000)
struct WB_ChatMessage_C_Set_ChatMessage final
{
public:
	bool                                          CallFunc_IsFiltering_IsFiltering;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_FilterText_FilteredText;                  // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_FilterText_ReturnValue;                   // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0020(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0038(0x0018)()
};
static_assert(alignof(WB_ChatMessage_C_Set_ChatMessage) == 0x000008, "Wrong alignment on WB_ChatMessage_C_Set_ChatMessage");
static_assert(sizeof(WB_ChatMessage_C_Set_ChatMessage) == 0x000050, "Wrong size on WB_ChatMessage_C_Set_ChatMessage");
static_assert(offsetof(WB_ChatMessage_C_Set_ChatMessage, CallFunc_IsFiltering_IsFiltering) == 0x000000, "Member 'WB_ChatMessage_C_Set_ChatMessage::CallFunc_IsFiltering_IsFiltering' has a wrong offset!");
static_assert(offsetof(WB_ChatMessage_C_Set_ChatMessage, CallFunc_FilterText_FilteredText) == 0x000008, "Member 'WB_ChatMessage_C_Set_ChatMessage::CallFunc_FilterText_FilteredText' has a wrong offset!");
static_assert(offsetof(WB_ChatMessage_C_Set_ChatMessage, CallFunc_FilterText_ReturnValue) == 0x000018, "Member 'WB_ChatMessage_C_Set_ChatMessage::CallFunc_FilterText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ChatMessage_C_Set_ChatMessage, CallFunc_Conv_StringToText_ReturnValue) == 0x000020, "Member 'WB_ChatMessage_C_Set_ChatMessage::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ChatMessage_C_Set_ChatMessage, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000038, "Member 'WB_ChatMessage_C_Set_ChatMessage::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");

// Function WB_ChatMessage.WB_ChatMessage_C.Set_ChatMessage_Color
// 0x0038 (0x0038 - 0x0000)
struct WB_ChatMessage_C_Set_ChatMessage_Color final
{
public:
	struct FLinearColor                           Specified_Color;                                   // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0010(0x0028)()
};
static_assert(alignof(WB_ChatMessage_C_Set_ChatMessage_Color) == 0x000008, "Wrong alignment on WB_ChatMessage_C_Set_ChatMessage_Color");
static_assert(sizeof(WB_ChatMessage_C_Set_ChatMessage_Color) == 0x000038, "Wrong size on WB_ChatMessage_C_Set_ChatMessage_Color");
static_assert(offsetof(WB_ChatMessage_C_Set_ChatMessage_Color, Specified_Color) == 0x000000, "Member 'WB_ChatMessage_C_Set_ChatMessage_Color::Specified_Color' has a wrong offset!");
static_assert(offsetof(WB_ChatMessage_C_Set_ChatMessage_Color, K2Node_MakeStruct_SlateColor) == 0x000010, "Member 'WB_ChatMessage_C_Set_ChatMessage_Color::K2Node_MakeStruct_SlateColor' has a wrong offset!");

// Function WB_ChatMessage.WB_ChatMessage_C.Set_Username_Global
// 0x0040 (0x0040 - 0x0000)
struct WB_ChatMessage_C_Set_Username_Global final
{
public:
	class FString                                 Chat_sender;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0028(0x0018)()
};
static_assert(alignof(WB_ChatMessage_C_Set_Username_Global) == 0x000008, "Wrong alignment on WB_ChatMessage_C_Set_Username_Global");
static_assert(sizeof(WB_ChatMessage_C_Set_Username_Global) == 0x000040, "Wrong size on WB_ChatMessage_C_Set_Username_Global");
static_assert(offsetof(WB_ChatMessage_C_Set_Username_Global, Chat_sender) == 0x000000, "Member 'WB_ChatMessage_C_Set_Username_Global::Chat_sender' has a wrong offset!");
static_assert(offsetof(WB_ChatMessage_C_Set_Username_Global, CallFunc_Concat_StrStr_ReturnValue) == 0x000010, "Member 'WB_ChatMessage_C_Set_Username_Global::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ChatMessage_C_Set_Username_Global, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000020, "Member 'WB_ChatMessage_C_Set_Username_Global::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ChatMessage_C_Set_Username_Global, CallFunc_Conv_StringToText_ReturnValue) == 0x000028, "Member 'WB_ChatMessage_C_Set_Username_Global::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function WB_ChatMessage.WB_ChatMessage_C.Set_Username_Color
// 0x0038 (0x0038 - 0x0000)
struct WB_ChatMessage_C_Set_Username_Color final
{
public:
	struct FLinearColor                           SpecifiedColor;                                    // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0010(0x0028)()
};
static_assert(alignof(WB_ChatMessage_C_Set_Username_Color) == 0x000008, "Wrong alignment on WB_ChatMessage_C_Set_Username_Color");
static_assert(sizeof(WB_ChatMessage_C_Set_Username_Color) == 0x000038, "Wrong size on WB_ChatMessage_C_Set_Username_Color");
static_assert(offsetof(WB_ChatMessage_C_Set_Username_Color, SpecifiedColor) == 0x000000, "Member 'WB_ChatMessage_C_Set_Username_Color::SpecifiedColor' has a wrong offset!");
static_assert(offsetof(WB_ChatMessage_C_Set_Username_Color, K2Node_MakeStruct_SlateColor) == 0x000010, "Member 'WB_ChatMessage_C_Set_Username_Color::K2Node_MakeStruct_SlateColor' has a wrong offset!");

// Function WB_ChatMessage.WB_ChatMessage_C.IsFiltering
// 0x0018 (0x0018 - 0x0000)
struct WB_ChatMessage_C_IsFiltering final
{
public:
	bool                                          IsFiltering_0;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UChatComponent_C*                       CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ChatMessage_C_IsFiltering) == 0x000008, "Wrong alignment on WB_ChatMessage_C_IsFiltering");
static_assert(sizeof(WB_ChatMessage_C_IsFiltering) == 0x000018, "Wrong size on WB_ChatMessage_C_IsFiltering");
static_assert(offsetof(WB_ChatMessage_C_IsFiltering, IsFiltering_0) == 0x000000, "Member 'WB_ChatMessage_C_IsFiltering::IsFiltering_0' has a wrong offset!");
static_assert(offsetof(WB_ChatMessage_C_IsFiltering, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'WB_ChatMessage_C_IsFiltering::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ChatMessage_C_IsFiltering, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'WB_ChatMessage_C_IsFiltering::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");

// Function WB_ChatMessage.WB_ChatMessage_C.CheckFont
// 0x0070 (0x0070 - 0x0000)
struct WB_ChatMessage_C_CheckFont final
{
public:
	struct FSlateFontInfo                         K2Node_MakeStruct_SlateFontInfo;                   // 0x0000(0x0058)(HasGetValueTypeHash)
	class FString                                 CallFunc_GetCurrentCulture_ReturnValue;            // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_StriStri_ReturnValue;            // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ChatMessage_C_CheckFont) == 0x000008, "Wrong alignment on WB_ChatMessage_C_CheckFont");
static_assert(sizeof(WB_ChatMessage_C_CheckFont) == 0x000070, "Wrong size on WB_ChatMessage_C_CheckFont");
static_assert(offsetof(WB_ChatMessage_C_CheckFont, K2Node_MakeStruct_SlateFontInfo) == 0x000000, "Member 'WB_ChatMessage_C_CheckFont::K2Node_MakeStruct_SlateFontInfo' has a wrong offset!");
static_assert(offsetof(WB_ChatMessage_C_CheckFont, CallFunc_GetCurrentCulture_ReturnValue) == 0x000058, "Member 'WB_ChatMessage_C_CheckFont::CallFunc_GetCurrentCulture_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ChatMessage_C_CheckFont, CallFunc_NotEqual_StriStri_ReturnValue) == 0x000068, "Member 'WB_ChatMessage_C_CheckFont::CallFunc_NotEqual_StriStri_ReturnValue' has a wrong offset!");

}

