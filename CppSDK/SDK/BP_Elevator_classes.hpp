#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Elevator

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Elevator.BP_Elevator_C
// 0x0058 (0x0278 - 0x0220)
class ABP_Elevator_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAudioComponent*                        Audio;                                             // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Base1;                                             // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Base;                                              // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Elevator_Alpha_920449764532D6CC95C07E8186EC2016;   // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Elevator__Direction_920449764532D6CC95C07E8186EC2016; // 0x024C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24D[0x3];                                      // 0x024D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Elevator;                                          // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Moving_;                                        // 0x0258(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	bool                                          IsMovingDown;                                      // 0x0259(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25A[0x6];                                      // 0x025A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Lever_C*                            Lever;                                             // 0x0260(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CeilingLevel;                                      // 0x0268(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FloorLevel;                                        // 0x026C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MovementSpeed;                                     // 0x0270(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Elevator(int32 EntryPoint);
	void MoveElevator(bool Down);
	void ReceiveTick(float DeltaSeconds);
	void SetComplete();
	void ReceiveBeginPlay();
	void StopElevator();
	void Elevator__UpdateFunc();
	void Elevator__FinishedFunc();
	void OnRep_Is_Moving_();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Elevator_C">();
	}
	static class ABP_Elevator_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Elevator_C>();
	}
};
static_assert(alignof(ABP_Elevator_C) == 0x000008, "Wrong alignment on ABP_Elevator_C");
static_assert(sizeof(ABP_Elevator_C) == 0x000278, "Wrong size on ABP_Elevator_C");
static_assert(offsetof(ABP_Elevator_C, UberGraphFrame) == 0x000220, "Member 'ABP_Elevator_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Elevator_C, Audio) == 0x000228, "Member 'ABP_Elevator_C::Audio' has a wrong offset!");
static_assert(offsetof(ABP_Elevator_C, Base1) == 0x000230, "Member 'ABP_Elevator_C::Base1' has a wrong offset!");
static_assert(offsetof(ABP_Elevator_C, Base) == 0x000238, "Member 'ABP_Elevator_C::Base' has a wrong offset!");
static_assert(offsetof(ABP_Elevator_C, DefaultSceneRoot) == 0x000240, "Member 'ABP_Elevator_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_Elevator_C, Elevator_Alpha_920449764532D6CC95C07E8186EC2016) == 0x000248, "Member 'ABP_Elevator_C::Elevator_Alpha_920449764532D6CC95C07E8186EC2016' has a wrong offset!");
static_assert(offsetof(ABP_Elevator_C, Elevator__Direction_920449764532D6CC95C07E8186EC2016) == 0x00024C, "Member 'ABP_Elevator_C::Elevator__Direction_920449764532D6CC95C07E8186EC2016' has a wrong offset!");
static_assert(offsetof(ABP_Elevator_C, Elevator) == 0x000250, "Member 'ABP_Elevator_C::Elevator' has a wrong offset!");
static_assert(offsetof(ABP_Elevator_C, Is_Moving_) == 0x000258, "Member 'ABP_Elevator_C::Is_Moving_' has a wrong offset!");
static_assert(offsetof(ABP_Elevator_C, IsMovingDown) == 0x000259, "Member 'ABP_Elevator_C::IsMovingDown' has a wrong offset!");
static_assert(offsetof(ABP_Elevator_C, Lever) == 0x000260, "Member 'ABP_Elevator_C::Lever' has a wrong offset!");
static_assert(offsetof(ABP_Elevator_C, CeilingLevel) == 0x000268, "Member 'ABP_Elevator_C::CeilingLevel' has a wrong offset!");
static_assert(offsetof(ABP_Elevator_C, FloorLevel) == 0x00026C, "Member 'ABP_Elevator_C::FloorLevel' has a wrong offset!");
static_assert(offsetof(ABP_Elevator_C, MovementSpeed) == 0x000270, "Member 'ABP_Elevator_C::MovementSpeed' has a wrong offset!");

}

