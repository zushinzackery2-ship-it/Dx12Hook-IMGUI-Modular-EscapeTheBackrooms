#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Lobby_PlayerController_Nebula

#include "Basic.hpp"

#include "InputCore_structs.hpp"
#include "E_CameraSetting_structs.hpp"
#include "AdvancedSessions_structs.hpp"
#include "S_Gamemode_structs.hpp"
#include "UMG_structs.hpp"
#include "Engine_structs.hpp"
#include "S_ConnectedPlayer_structs.hpp"


namespace SDK::Params
{

// Function Lobby_PlayerController_Nebula.Lobby_PlayerController_Nebula_C.ExecuteUbergraph_Lobby_PlayerController_Nebula
// 0x02A8 (0x02A8 - 0x0000)
struct Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_2;                     // 0x0008(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_1;                     // 0x0020(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable;                              // 0x0038(0x0018)(HasGetValueTypeHash)
	class UW_VOIPHUD_C*                           CallFunc_Create_ReturnValue;                       // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key;                       // 0x0058(0x0018)(HasGetValueTypeHash)
	class UFancyVideoSubsystem*                   CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x007B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsConsoleBuild_ReturnValue;               // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RegisterLocalTalker_ReturnValue;          // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsConsoleBuild_ReturnValue_1;             // 0x007E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsConsoleBuild_ReturnValue_2;             // 0x007F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Load_ControlSettings_Sensitivity;         // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Load_ControlSettings_InvertMouse;         // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_CameraSetting                               CallFunc_Load_ControlSettings_CameraSetting;       // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Load_ControlSettings_ShowBody;            // 0x0086(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Load_ControlSettings_UsingPushToTalk;     // 0x0087(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Load_ControlSettings_FOV;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Load_ControlSettings_SmoothRotation;      // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Load_ControlSettings_HideGore;            // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8E[0x2];                                       // 0x008E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Load_ControlSettings_Gamma;               // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Load_ControlSettings_CameraShake;         // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Load_ControlSettings_ShowEventContent;    // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Load_ControlSettings_AimAssist;           // 0x0096(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Load_ControlSettings_ControllerFeedback;  // 0x0097(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Load_ControlSettings_ShowChat;            // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Load_ControlSettings_Sensitivity_1;       // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Load_ControlSettings_InvertMouse_1;       // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_CameraSetting                               CallFunc_Load_ControlSettings_CameraSetting_1;     // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Load_ControlSettings_ShowBody_1;          // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Load_ControlSettings_UsingPushToTalk_1;   // 0x00A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Load_ControlSettings_FOV_1;               // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Load_ControlSettings_SmoothRotation_1;    // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Load_ControlSettings_HideGore_1;          // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AA[0x2];                                       // 0x00AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Load_ControlSettings_Gamma_1;             // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Load_ControlSettings_CameraShake_1;       // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Load_ControlSettings_ShowEventContent_1;  // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Load_ControlSettings_AimAssist_1;         // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Load_ControlSettings_ControllerFeedback_1; // 0x00B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Load_ControlSettings_ShowChat_1;          // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B5[0x3];                                       // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AMP_PS_C*                               K2Node_DynamicCast_AsMP_PS;                        // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMP_PS_C*                               K2Node_DynamicCast_AsMP_PS_1;                      // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_UserInterface_C>  K2Node_DynamicCast_AsBPI_User_Interface;           // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_CustomEvent_CircularThrobber_Visibility;    // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EA[0x6];                                       // 0x00EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_CustomEvent_LobbyStatus_Text;               // 0x00F0(0x0018)()
	class FText                                   K2Node_CustomEvent_Text;                           // 0x0108(0x0018)()
	bool                                          K2Node_CustomEvent_WarningState_;                  // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_HideButton_;                    // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_IsLaunchingGame;                // 0x0122(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_123[0x5];                                      // 0x0123(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_CustomEvent_ServerName;                     // 0x0128(0x0018)()
	TArray<struct FS_ConnectedPlayer>             K2Node_CustomEvent_ConnectedPlayers;               // 0x0140(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocalPlayerController_ReturnValue;      // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0152(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_153[0x5];                                      // 0x0153(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_MyGameInstance_C*                   K2Node_DynamicCast_AsBP_My_Game_Instance;          // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDestroySessionCallbackProxy*           CallFunc_DestroySession_ReturnValue;               // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_Map;                            // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_MyGameInstance_C*                   K2Node_DynamicCast_AsBP_My_Game_Instance_1;        // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsHeadMountedDisplayEnabled_ReturnValue;  // 0x0199(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19A[0x6];                                      // 0x019A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_LobbyActor_C*                       CallFunc_GetActorOfClass_ReturnValue;              // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A9[0x3];                                      // 0x01A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x01AC(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_1BC[0x4];                                      // 0x01BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACameraActor*                           CallFunc_GetActorOfClass_ReturnValue_1;            // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMissionSelectOpen_Yes;                  // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x01C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x01CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1CB[0x1];                                      // 0x01CB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x01CC(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsCommunicationRestricted_ReturnValue;    // 0x01DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1DD[0x3];                                      // 0x01DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x01E0(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsLocalPlayerController_ReturnValue_1;    // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F1[0x7];                                      // 0x01F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDestroySessionCallbackProxy*           CallFunc_DestroySession_ReturnValue_1;             // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsConsoleBuild_ReturnValue_3;             // 0x0201(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InitVoice_ReturnValue;                    // 0x0202(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_203[0x5];                                      // 0x0203(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_2;            // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_MyGameInstance_C*                   K2Node_DynamicCast_AsBP_My_Game_Instance_2;        // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_219[0x7];                                      // 0x0219(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_UserInterface_C>  K2Node_DynamicCast_AsBPI_User_Interface_1;         // 0x0220(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_231[0x3];                                      // 0x0231(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0234(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_244[0x4];                                      // 0x0244(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_UserInterface_C>  K2Node_DynamicCast_AsBPI_User_Interface_2;         // 0x0248(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_259[0x7];                                      // 0x0259(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_3;            // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_MyGameInstance_C*                   K2Node_DynamicCast_AsBP_My_Game_Instance_3;        // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_271[0x7];                                      // 0x0271(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_Menu_Evaluation_C*                  CallFunc_Create_ReturnValue_1;                     // 0x0278(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_SettingsPanel_Theme2_C*             CallFunc_Create_ReturnValue_2;                     // 0x0280(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_Menu_Lobby_C*                       CallFunc_Create_ReturnValue_3;                     // 0x0288(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_3;                     // 0x0290(0x0018)(HasGetValueTypeHash)
};
static_assert(alignof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula) == 0x000008, "Wrong alignment on Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula");
static_assert(sizeof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula) == 0x0002A8, "Wrong size on Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula, EntryPoint) == 0x000000, "Member 'Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula::EntryPoint' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula, K2Node_InputActionEvent_Key_2) == 0x000008, "Member 'Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula::K2Node_InputActionEvent_Key_2' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula, K2Node_InputActionEvent_Key_1) == 0x000020, "Member 'Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula::K2Node_InputActionEvent_Key_1' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula, Temp_struct_Variable) == 0x000038, "Member 'Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula, CallFunc_Create_ReturnValue) == 0x000050, "Member 'Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula, K2Node_InputActionEvent_Key) == 0x000058, "Member 'Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula::K2Node_InputActionEvent_Key' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000070, "Member 'Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula, CallFunc_IsPlaying_ReturnValue) == 0x000078, "Member 'Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula, CallFunc_IsValid_ReturnValue) == 0x000079, "Member 'Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula, CallFunc_Not_PreBool_ReturnValue) == 0x00007A, "Member 'Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula, CallFunc_IsValid_ReturnValue_1) == 0x00007B, "Member 'Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula, CallFunc_IsConsoleBuild_ReturnValue) == 0x00007C, "Member 'Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula::CallFunc_IsConsoleBuild_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula, CallFunc_RegisterLocalTalker_ReturnValue) == 0x00007D, "Member 'Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula::CallFunc_RegisterLocalTalker_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula, CallFunc_IsConsoleBuild_ReturnValue_1) == 0x00007E, "Member 'Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula::CallFunc_IsConsoleBuild_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula, CallFunc_IsConsoleBuild_ReturnValue_2) == 0x00007F, "Member 'Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula::CallFunc_IsConsoleBuild_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula, CallFunc_Load_ControlSettings_Sensitivity) == 0x000080, "Member 'Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula::CallFunc_Load_ControlSettings_Sensitivity' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula, CallFunc_Load_ControlSettings_InvertMouse) == 0x000084, "Member 'Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula::CallFunc_Load_ControlSettings_InvertMouse' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula, CallFunc_Load_ControlSettings_CameraSetting) == 0x000085, "Member 'Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula::CallFunc_Load_ControlSettings_CameraSetting' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula, CallFunc_Load_ControlSettings_ShowBody) == 0x000086, "Member 'Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula::CallFunc_Load_ControlSettings_ShowBody' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula, CallFunc_Load_ControlSettings_UsingPushToTalk) == 0x000087, "Member 'Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula::CallFunc_Load_ControlSettings_UsingPushToTalk' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula, CallFunc_Load_ControlSettings_FOV) == 0x000088, "Member 'Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula::CallFunc_Load_ControlSettings_FOV' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula, CallFunc_Load_ControlSettings_SmoothRotation) == 0x00008C, "Member 'Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula::CallFunc_Load_ControlSettings_SmoothRotation' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula, CallFunc_Load_ControlSettings_HideGore) == 0x00008D, "Member 'Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula::CallFunc_Load_ControlSettings_HideGore' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula, CallFunc_Load_ControlSettings_Gamma) == 0x000090, "Member 'Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula::CallFunc_Load_ControlSettings_Gamma' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula, CallFunc_Load_ControlSettings_CameraShake) == 0x000094, "Member 'Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula::CallFunc_Load_ControlSettings_CameraShake' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula, CallFunc_Load_ControlSettings_ShowEventContent) == 0x000095, "Member 'Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula::CallFunc_Load_ControlSettings_ShowEventContent' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula, CallFunc_Load_ControlSettings_AimAssist) == 0x000096, "Member 'Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula::CallFunc_Load_ControlSettings_AimAssist' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula, CallFunc_Load_ControlSettings_ControllerFeedback) == 0x000097, "Member 'Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula::CallFunc_Load_ControlSettings_ControllerFeedback' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula, CallFunc_Load_ControlSettings_ShowChat) == 0x000098, "Member 'Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula::CallFunc_Load_ControlSettings_ShowChat' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula, CallFunc_Load_ControlSettings_Sensitivity_1) == 0x00009C, "Member 'Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula::CallFunc_Load_ControlSettings_Sensitivity_1' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula, CallFunc_Load_ControlSettings_InvertMouse_1) == 0x0000A0, "Member 'Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula::CallFunc_Load_ControlSettings_InvertMouse_1' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula, CallFunc_Load_ControlSettings_CameraSetting_1) == 0x0000A1, "Member 'Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula::CallFunc_Load_ControlSettings_CameraSetting_1' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula, CallFunc_Load_ControlSettings_ShowBody_1) == 0x0000A2, "Member 'Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula::CallFunc_Load_ControlSettings_ShowBody_1' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula, CallFunc_Load_ControlSettings_UsingPushToTalk_1) == 0x0000A3, "Member 'Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula::CallFunc_Load_ControlSettings_UsingPushToTalk_1' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula, CallFunc_Load_ControlSettings_FOV_1) == 0x0000A4, "Member 'Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula::CallFunc_Load_ControlSettings_FOV_1' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula, CallFunc_Load_ControlSettings_SmoothRotation_1) == 0x0000A8, "Member 'Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula::CallFunc_Load_ControlSettings_SmoothRotation_1' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula, CallFunc_Load_ControlSettings_HideGore_1) == 0x0000A9, "Member 'Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula::CallFunc_Load_ControlSettings_HideGore_1' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula, CallFunc_Load_ControlSettings_Gamma_1) == 0x0000AC, "Member 'Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula::CallFunc_Load_ControlSettings_Gamma_1' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula, CallFunc_Load_ControlSettings_CameraShake_1) == 0x0000B0, "Member 'Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula::CallFunc_Load_ControlSettings_CameraShake_1' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula, CallFunc_Load_ControlSettings_ShowEventContent_1) == 0x0000B1, "Member 'Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula::CallFunc_Load_ControlSettings_ShowEventContent_1' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula, CallFunc_Load_ControlSettings_AimAssist_1) == 0x0000B2, "Member 'Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula::CallFunc_Load_ControlSettings_AimAssist_1' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula, CallFunc_Load_ControlSettings_ControllerFeedback_1) == 0x0000B3, "Member 'Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula::CallFunc_Load_ControlSettings_ControllerFeedback_1' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula, CallFunc_Load_ControlSettings_ShowChat_1) == 0x0000B4, "Member 'Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula::CallFunc_Load_ControlSettings_ShowChat_1' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula, K2Node_DynamicCast_AsMP_PS) == 0x0000B8, "Member 'Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula::K2Node_DynamicCast_AsMP_PS' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula, K2Node_DynamicCast_bSuccess) == 0x0000C0, "Member 'Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula, K2Node_DynamicCast_AsMP_PS_1) == 0x0000C8, "Member 'Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula::K2Node_DynamicCast_AsMP_PS_1' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula, K2Node_DynamicCast_bSuccess_1) == 0x0000D0, "Member 'Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula, K2Node_DynamicCast_AsBPI_User_Interface) == 0x0000D8, "Member 'Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula::K2Node_DynamicCast_AsBPI_User_Interface' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula, K2Node_DynamicCast_bSuccess_2) == 0x0000E8, "Member 'Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula, K2Node_CustomEvent_CircularThrobber_Visibility) == 0x0000E9, "Member 'Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula::K2Node_CustomEvent_CircularThrobber_Visibility' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula, K2Node_CustomEvent_LobbyStatus_Text) == 0x0000F0, "Member 'Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula::K2Node_CustomEvent_LobbyStatus_Text' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula, K2Node_CustomEvent_Text) == 0x000108, "Member 'Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula::K2Node_CustomEvent_Text' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula, K2Node_CustomEvent_WarningState_) == 0x000120, "Member 'Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula::K2Node_CustomEvent_WarningState_' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula, K2Node_CustomEvent_HideButton_) == 0x000121, "Member 'Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula::K2Node_CustomEvent_HideButton_' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula, K2Node_CustomEvent_IsLaunchingGame) == 0x000122, "Member 'Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula::K2Node_CustomEvent_IsLaunchingGame' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula, K2Node_CustomEvent_ServerName) == 0x000128, "Member 'Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula::K2Node_CustomEvent_ServerName' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula, K2Node_CustomEvent_ConnectedPlayers) == 0x000140, "Member 'Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula::K2Node_CustomEvent_ConnectedPlayers' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula, K2Node_Event_EndPlayReason) == 0x000150, "Member 'Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula, CallFunc_IsLocalPlayerController_ReturnValue) == 0x000151, "Member 'Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula::CallFunc_IsLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula, K2Node_SwitchEnum_CmpSuccess) == 0x000152, "Member 'Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula, CallFunc_GetGameInstance_ReturnValue) == 0x000158, "Member 'Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula, K2Node_DynamicCast_AsBP_My_Game_Instance) == 0x000160, "Member 'Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula::K2Node_DynamicCast_AsBP_My_Game_Instance' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula, K2Node_DynamicCast_bSuccess_3) == 0x000168, "Member 'Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula, CallFunc_DestroySession_ReturnValue) == 0x000170, "Member 'Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula::CallFunc_DestroySession_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula, K2Node_CustomEvent_Map) == 0x000178, "Member 'Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula::K2Node_CustomEvent_Map' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula, CallFunc_IsValid_ReturnValue_2) == 0x000180, "Member 'Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula, CallFunc_GetGameInstance_ReturnValue_1) == 0x000188, "Member 'Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula, K2Node_DynamicCast_AsBP_My_Game_Instance_1) == 0x000190, "Member 'Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula::K2Node_DynamicCast_AsBP_My_Game_Instance_1' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula, K2Node_DynamicCast_bSuccess_4) == 0x000198, "Member 'Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula, CallFunc_IsHeadMountedDisplayEnabled_ReturnValue) == 0x000199, "Member 'Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula::CallFunc_IsHeadMountedDisplayEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula, CallFunc_GetActorOfClass_ReturnValue) == 0x0001A0, "Member 'Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula, CallFunc_Not_PreBool_ReturnValue_1) == 0x0001A8, "Member 'Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula, K2Node_CreateDelegate_OutputDelegate) == 0x0001AC, "Member 'Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula, CallFunc_GetActorOfClass_ReturnValue_1) == 0x0001C0, "Member 'Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula::CallFunc_GetActorOfClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula, CallFunc_IsMissionSelectOpen_Yes) == 0x0001C8, "Member 'Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula::CallFunc_IsMissionSelectOpen_Yes' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula, CallFunc_IsServer_ReturnValue) == 0x0001C9, "Member 'Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula, CallFunc_Not_PreBool_ReturnValue_2) == 0x0001CA, "Member 'Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula, K2Node_CreateDelegate_OutputDelegate_1) == 0x0001CC, "Member 'Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula, CallFunc_IsCommunicationRestricted_ReturnValue) == 0x0001DC, "Member 'Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula::CallFunc_IsCommunicationRestricted_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula, K2Node_CreateDelegate_OutputDelegate_2) == 0x0001E0, "Member 'Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula, CallFunc_IsLocalPlayerController_ReturnValue_1) == 0x0001F0, "Member 'Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula::CallFunc_IsLocalPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula, CallFunc_DestroySession_ReturnValue_1) == 0x0001F8, "Member 'Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula::CallFunc_DestroySession_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula, CallFunc_IsValid_ReturnValue_3) == 0x000200, "Member 'Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula, CallFunc_IsConsoleBuild_ReturnValue_3) == 0x000201, "Member 'Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula::CallFunc_IsConsoleBuild_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula, CallFunc_InitVoice_ReturnValue) == 0x000202, "Member 'Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula::CallFunc_InitVoice_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula, CallFunc_GetGameInstance_ReturnValue_2) == 0x000208, "Member 'Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula::CallFunc_GetGameInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula, K2Node_DynamicCast_AsBP_My_Game_Instance_2) == 0x000210, "Member 'Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula::K2Node_DynamicCast_AsBP_My_Game_Instance_2' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula, K2Node_DynamicCast_bSuccess_5) == 0x000218, "Member 'Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula, K2Node_DynamicCast_AsBPI_User_Interface_1) == 0x000220, "Member 'Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula::K2Node_DynamicCast_AsBPI_User_Interface_1' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula, K2Node_DynamicCast_bSuccess_6) == 0x000230, "Member 'Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula, K2Node_CreateDelegate_OutputDelegate_3) == 0x000234, "Member 'Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula, K2Node_DynamicCast_AsBPI_User_Interface_2) == 0x000248, "Member 'Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula::K2Node_DynamicCast_AsBPI_User_Interface_2' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula, K2Node_DynamicCast_bSuccess_7) == 0x000258, "Member 'Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula, CallFunc_GetGameInstance_ReturnValue_3) == 0x000260, "Member 'Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula::CallFunc_GetGameInstance_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula, K2Node_DynamicCast_AsBP_My_Game_Instance_3) == 0x000268, "Member 'Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula::K2Node_DynamicCast_AsBP_My_Game_Instance_3' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula, K2Node_DynamicCast_bSuccess_8) == 0x000270, "Member 'Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula, CallFunc_Create_ReturnValue_1) == 0x000278, "Member 'Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula, CallFunc_Create_ReturnValue_2) == 0x000280, "Member 'Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula::CallFunc_Create_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula, CallFunc_Create_ReturnValue_3) == 0x000288, "Member 'Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula::CallFunc_Create_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula, K2Node_InputActionEvent_Key_3) == 0x000290, "Member 'Lobby_PlayerController_Nebula_C_ExecuteUbergraph_Lobby_PlayerController_Nebula::K2Node_InputActionEvent_Key_3' has a wrong offset!");

// Function Lobby_PlayerController_Nebula.Lobby_PlayerController_Nebula_C.OC_Create_MapTravel_Loadingscreen
// 0x0008 (0x0008 - 0x0000)
struct Lobby_PlayerController_Nebula_C_OC_Create_MapTravel_Loadingscreen final
{
public:
	class FName                                   Map;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Lobby_PlayerController_Nebula_C_OC_Create_MapTravel_Loadingscreen) == 0x000004, "Wrong alignment on Lobby_PlayerController_Nebula_C_OC_Create_MapTravel_Loadingscreen");
static_assert(sizeof(Lobby_PlayerController_Nebula_C_OC_Create_MapTravel_Loadingscreen) == 0x000008, "Wrong size on Lobby_PlayerController_Nebula_C_OC_Create_MapTravel_Loadingscreen");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_OC_Create_MapTravel_Loadingscreen, Map) == 0x000000, "Member 'Lobby_PlayerController_Nebula_C_OC_Create_MapTravel_Loadingscreen::Map' has a wrong offset!");

// Function Lobby_PlayerController_Nebula.Lobby_PlayerController_Nebula_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct Lobby_PlayerController_Nebula_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Lobby_PlayerController_Nebula_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on Lobby_PlayerController_Nebula_C_ReceiveEndPlay");
static_assert(sizeof(Lobby_PlayerController_Nebula_C_ReceiveEndPlay) == 0x000001, "Wrong size on Lobby_PlayerController_Nebula_C_ReceiveEndPlay");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'Lobby_PlayerController_Nebula_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function Lobby_PlayerController_Nebula.Lobby_PlayerController_Nebula_C.OC_Update_ConnectedPlayersList
// 0x0010 (0x0010 - 0x0000)
struct Lobby_PlayerController_Nebula_C_OC_Update_ConnectedPlayersList final
{
public:
	TArray<struct FS_ConnectedPlayer>             ConnectedPlayers_0;                                // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(Lobby_PlayerController_Nebula_C_OC_Update_ConnectedPlayersList) == 0x000008, "Wrong alignment on Lobby_PlayerController_Nebula_C_OC_Update_ConnectedPlayersList");
static_assert(sizeof(Lobby_PlayerController_Nebula_C_OC_Update_ConnectedPlayersList) == 0x000010, "Wrong size on Lobby_PlayerController_Nebula_C_OC_Update_ConnectedPlayersList");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_OC_Update_ConnectedPlayersList, ConnectedPlayers_0) == 0x000000, "Member 'Lobby_PlayerController_Nebula_C_OC_Update_ConnectedPlayersList::ConnectedPlayers_0' has a wrong offset!");

// Function Lobby_PlayerController_Nebula.Lobby_PlayerController_Nebula_C.OC_Update_ServerName
// 0x0018 (0x0018 - 0x0000)
struct Lobby_PlayerController_Nebula_C_OC_Update_ServerName final
{
public:
	class FText                                   ServerName_0;                                      // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(Lobby_PlayerController_Nebula_C_OC_Update_ServerName) == 0x000008, "Wrong alignment on Lobby_PlayerController_Nebula_C_OC_Update_ServerName");
static_assert(sizeof(Lobby_PlayerController_Nebula_C_OC_Update_ServerName) == 0x000018, "Wrong size on Lobby_PlayerController_Nebula_C_OC_Update_ServerName");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_OC_Update_ServerName, ServerName_0) == 0x000000, "Member 'Lobby_PlayerController_Nebula_C_OC_Update_ServerName::ServerName_0' has a wrong offset!");

// Function Lobby_PlayerController_Nebula.Lobby_PlayerController_Nebula_C.OC_Launchevent
// 0x0001 (0x0001 - 0x0000)
struct Lobby_PlayerController_Nebula_C_OC_Launchevent final
{
public:
	bool                                          IsLaunchingGame_0;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Lobby_PlayerController_Nebula_C_OC_Launchevent) == 0x000001, "Wrong alignment on Lobby_PlayerController_Nebula_C_OC_Launchevent");
static_assert(sizeof(Lobby_PlayerController_Nebula_C_OC_Launchevent) == 0x000001, "Wrong size on Lobby_PlayerController_Nebula_C_OC_Launchevent");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_OC_Launchevent, IsLaunchingGame_0) == 0x000000, "Member 'Lobby_PlayerController_Nebula_C_OC_Launchevent::IsLaunchingGame_0' has a wrong offset!");

// Function Lobby_PlayerController_Nebula.Lobby_PlayerController_Nebula_C.OC_Update_ReadyUpButton
// 0x0020 (0x0020 - 0x0000)
struct Lobby_PlayerController_Nebula_C_OC_Update_ReadyUpButton final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          WarningState_;                                     // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          HideButton_;                                       // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Lobby_PlayerController_Nebula_C_OC_Update_ReadyUpButton) == 0x000008, "Wrong alignment on Lobby_PlayerController_Nebula_C_OC_Update_ReadyUpButton");
static_assert(sizeof(Lobby_PlayerController_Nebula_C_OC_Update_ReadyUpButton) == 0x000020, "Wrong size on Lobby_PlayerController_Nebula_C_OC_Update_ReadyUpButton");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_OC_Update_ReadyUpButton, Text) == 0x000000, "Member 'Lobby_PlayerController_Nebula_C_OC_Update_ReadyUpButton::Text' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_OC_Update_ReadyUpButton, WarningState_) == 0x000018, "Member 'Lobby_PlayerController_Nebula_C_OC_Update_ReadyUpButton::WarningState_' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_OC_Update_ReadyUpButton, HideButton_) == 0x000019, "Member 'Lobby_PlayerController_Nebula_C_OC_Update_ReadyUpButton::HideButton_' has a wrong offset!");

// Function Lobby_PlayerController_Nebula.Lobby_PlayerController_Nebula_C.OC_Update_LobbyStatusIndicator
// 0x0020 (0x0020 - 0x0000)
struct Lobby_PlayerController_Nebula_C_OC_Update_LobbyStatusIndicator final
{
public:
	ESlateVisibility                              CircularThrobber_Visibility;                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   LobbyStatus_Text;                                  // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(Lobby_PlayerController_Nebula_C_OC_Update_LobbyStatusIndicator) == 0x000008, "Wrong alignment on Lobby_PlayerController_Nebula_C_OC_Update_LobbyStatusIndicator");
static_assert(sizeof(Lobby_PlayerController_Nebula_C_OC_Update_LobbyStatusIndicator) == 0x000020, "Wrong size on Lobby_PlayerController_Nebula_C_OC_Update_LobbyStatusIndicator");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_OC_Update_LobbyStatusIndicator, CircularThrobber_Visibility) == 0x000000, "Member 'Lobby_PlayerController_Nebula_C_OC_Update_LobbyStatusIndicator::CircularThrobber_Visibility' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_OC_Update_LobbyStatusIndicator, LobbyStatus_Text) == 0x000008, "Member 'Lobby_PlayerController_Nebula_C_OC_Update_LobbyStatusIndicator::LobbyStatus_Text' has a wrong offset!");

// Function Lobby_PlayerController_Nebula.Lobby_PlayerController_Nebula_C.InpActEvt_Chat_K2Node_InputActionEvent_0
// 0x0018 (0x0018 - 0x0000)
struct Lobby_PlayerController_Nebula_C_InpActEvt_Chat_K2Node_InputActionEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(Lobby_PlayerController_Nebula_C_InpActEvt_Chat_K2Node_InputActionEvent_0) == 0x000008, "Wrong alignment on Lobby_PlayerController_Nebula_C_InpActEvt_Chat_K2Node_InputActionEvent_0");
static_assert(sizeof(Lobby_PlayerController_Nebula_C_InpActEvt_Chat_K2Node_InputActionEvent_0) == 0x000018, "Wrong size on Lobby_PlayerController_Nebula_C_InpActEvt_Chat_K2Node_InputActionEvent_0");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_InpActEvt_Chat_K2Node_InputActionEvent_0, Key) == 0x000000, "Member 'Lobby_PlayerController_Nebula_C_InpActEvt_Chat_K2Node_InputActionEvent_0::Key' has a wrong offset!");

// Function Lobby_PlayerController_Nebula.Lobby_PlayerController_Nebula_C.InpActEvt_Talk_K2Node_InputActionEvent_1
// 0x0018 (0x0018 - 0x0000)
struct Lobby_PlayerController_Nebula_C_InpActEvt_Talk_K2Node_InputActionEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(Lobby_PlayerController_Nebula_C_InpActEvt_Talk_K2Node_InputActionEvent_1) == 0x000008, "Wrong alignment on Lobby_PlayerController_Nebula_C_InpActEvt_Talk_K2Node_InputActionEvent_1");
static_assert(sizeof(Lobby_PlayerController_Nebula_C_InpActEvt_Talk_K2Node_InputActionEvent_1) == 0x000018, "Wrong size on Lobby_PlayerController_Nebula_C_InpActEvt_Talk_K2Node_InputActionEvent_1");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_InpActEvt_Talk_K2Node_InputActionEvent_1, Key) == 0x000000, "Member 'Lobby_PlayerController_Nebula_C_InpActEvt_Talk_K2Node_InputActionEvent_1::Key' has a wrong offset!");

// Function Lobby_PlayerController_Nebula.Lobby_PlayerController_Nebula_C.InpActEvt_Talk_K2Node_InputActionEvent_2
// 0x0018 (0x0018 - 0x0000)
struct Lobby_PlayerController_Nebula_C_InpActEvt_Talk_K2Node_InputActionEvent_2 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(Lobby_PlayerController_Nebula_C_InpActEvt_Talk_K2Node_InputActionEvent_2) == 0x000008, "Wrong alignment on Lobby_PlayerController_Nebula_C_InpActEvt_Talk_K2Node_InputActionEvent_2");
static_assert(sizeof(Lobby_PlayerController_Nebula_C_InpActEvt_Talk_K2Node_InputActionEvent_2) == 0x000018, "Wrong size on Lobby_PlayerController_Nebula_C_InpActEvt_Talk_K2Node_InputActionEvent_2");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_InpActEvt_Talk_K2Node_InputActionEvent_2, Key) == 0x000000, "Member 'Lobby_PlayerController_Nebula_C_InpActEvt_Talk_K2Node_InputActionEvent_2::Key' has a wrong offset!");

// Function Lobby_PlayerController_Nebula.Lobby_PlayerController_Nebula_C.InpActEvt_Settings_K2Node_InputActionEvent_3
// 0x0018 (0x0018 - 0x0000)
struct Lobby_PlayerController_Nebula_C_InpActEvt_Settings_K2Node_InputActionEvent_3 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(Lobby_PlayerController_Nebula_C_InpActEvt_Settings_K2Node_InputActionEvent_3) == 0x000008, "Wrong alignment on Lobby_PlayerController_Nebula_C_InpActEvt_Settings_K2Node_InputActionEvent_3");
static_assert(sizeof(Lobby_PlayerController_Nebula_C_InpActEvt_Settings_K2Node_InputActionEvent_3) == 0x000018, "Wrong size on Lobby_PlayerController_Nebula_C_InpActEvt_Settings_K2Node_InputActionEvent_3");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_InpActEvt_Settings_K2Node_InputActionEvent_3, Key) == 0x000000, "Member 'Lobby_PlayerController_Nebula_C_InpActEvt_Settings_K2Node_InputActionEvent_3::Key' has a wrong offset!");

// Function Lobby_PlayerController_Nebula.Lobby_PlayerController_Nebula_C.Update_LobbyPlayerList
// 0x0003 (0x0003 - 0x0000)
struct Lobby_PlayerController_Nebula_C_Update_LobbyPlayerList final
{
public:
	bool                                          CallFunc_IsHeadMountedDisplayEnabled_ReturnValue;  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Lobby_PlayerController_Nebula_C_Update_LobbyPlayerList) == 0x000001, "Wrong alignment on Lobby_PlayerController_Nebula_C_Update_LobbyPlayerList");
static_assert(sizeof(Lobby_PlayerController_Nebula_C_Update_LobbyPlayerList) == 0x000003, "Wrong size on Lobby_PlayerController_Nebula_C_Update_LobbyPlayerList");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_Update_LobbyPlayerList, CallFunc_IsHeadMountedDisplayEnabled_ReturnValue) == 0x000000, "Member 'Lobby_PlayerController_Nebula_C_Update_LobbyPlayerList::CallFunc_IsHeadMountedDisplayEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_Update_LobbyPlayerList, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'Lobby_PlayerController_Nebula_C_Update_LobbyPlayerList::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_Update_LobbyPlayerList, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'Lobby_PlayerController_Nebula_C_Update_LobbyPlayerList::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function Lobby_PlayerController_Nebula.Lobby_PlayerController_Nebula_C.Update_ReadyUpButton
// 0x0002 (0x0002 - 0x0000)
struct Lobby_PlayerController_Nebula_C_Update_ReadyUpButton final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Lobby_PlayerController_Nebula_C_Update_ReadyUpButton) == 0x000001, "Wrong alignment on Lobby_PlayerController_Nebula_C_Update_ReadyUpButton");
static_assert(sizeof(Lobby_PlayerController_Nebula_C_Update_ReadyUpButton) == 0x000002, "Wrong size on Lobby_PlayerController_Nebula_C_Update_ReadyUpButton");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_Update_ReadyUpButton, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'Lobby_PlayerController_Nebula_C_Update_ReadyUpButton::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_Update_ReadyUpButton, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'Lobby_PlayerController_Nebula_C_Update_ReadyUpButton::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function Lobby_PlayerController_Nebula.Lobby_PlayerController_Nebula_C.Update_Launchevent
// 0x0005 (0x0005 - 0x0000)
struct Lobby_PlayerController_Nebula_C_Update_Launchevent final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Lobby_PlayerController_Nebula_C_Update_Launchevent) == 0x000001, "Wrong alignment on Lobby_PlayerController_Nebula_C_Update_Launchevent");
static_assert(sizeof(Lobby_PlayerController_Nebula_C_Update_Launchevent) == 0x000005, "Wrong size on Lobby_PlayerController_Nebula_C_Update_Launchevent");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_Update_Launchevent, Temp_bool_Variable) == 0x000000, "Member 'Lobby_PlayerController_Nebula_C_Update_Launchevent::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_Update_Launchevent, Temp_byte_Variable) == 0x000001, "Member 'Lobby_PlayerController_Nebula_C_Update_Launchevent::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_Update_Launchevent, Temp_byte_Variable_1) == 0x000002, "Member 'Lobby_PlayerController_Nebula_C_Update_Launchevent::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_Update_Launchevent, K2Node_Select_Default) == 0x000003, "Member 'Lobby_PlayerController_Nebula_C_Update_Launchevent::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_Update_Launchevent, CallFunc_Not_PreBool_ReturnValue) == 0x000004, "Member 'Lobby_PlayerController_Nebula_C_Update_Launchevent::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function Lobby_PlayerController_Nebula.Lobby_PlayerController_Nebula_C.Update_LobbyStatusIndicator
// 0x0028 (0x0028 - 0x0000)
struct Lobby_PlayerController_Nebula_C_Update_LobbyStatusIndicator final
{
public:
	ESlateVisibility                              CircularThrobberVisibility;                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   LobbyStatusText;                                   // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Lobby_PlayerController_Nebula_C_Update_LobbyStatusIndicator) == 0x000008, "Wrong alignment on Lobby_PlayerController_Nebula_C_Update_LobbyStatusIndicator");
static_assert(sizeof(Lobby_PlayerController_Nebula_C_Update_LobbyStatusIndicator) == 0x000028, "Wrong size on Lobby_PlayerController_Nebula_C_Update_LobbyStatusIndicator");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_Update_LobbyStatusIndicator, CircularThrobberVisibility) == 0x000000, "Member 'Lobby_PlayerController_Nebula_C_Update_LobbyStatusIndicator::CircularThrobberVisibility' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_Update_LobbyStatusIndicator, LobbyStatusText) == 0x000008, "Member 'Lobby_PlayerController_Nebula_C_Update_LobbyStatusIndicator::LobbyStatusText' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_Update_LobbyStatusIndicator, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'Lobby_PlayerController_Nebula_C_Update_LobbyStatusIndicator::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function Lobby_PlayerController_Nebula.Lobby_PlayerController_Nebula_C.Save_ReadyUpButton_State
// 0x0020 (0x0020 - 0x0000)
struct Lobby_PlayerController_Nebula_C_Save_ReadyUpButton_State final
{
public:
	class FText                                   ReadyUpButton_Text_0;                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          Warning_State__0;                                  // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Hide_Button__0;                                    // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          JustLock_;                                         // 0x001A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Lobby_PlayerController_Nebula_C_Save_ReadyUpButton_State) == 0x000008, "Wrong alignment on Lobby_PlayerController_Nebula_C_Save_ReadyUpButton_State");
static_assert(sizeof(Lobby_PlayerController_Nebula_C_Save_ReadyUpButton_State) == 0x000020, "Wrong size on Lobby_PlayerController_Nebula_C_Save_ReadyUpButton_State");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_Save_ReadyUpButton_State, ReadyUpButton_Text_0) == 0x000000, "Member 'Lobby_PlayerController_Nebula_C_Save_ReadyUpButton_State::ReadyUpButton_Text_0' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_Save_ReadyUpButton_State, Warning_State__0) == 0x000018, "Member 'Lobby_PlayerController_Nebula_C_Save_ReadyUpButton_State::Warning_State__0' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_Save_ReadyUpButton_State, Hide_Button__0) == 0x000019, "Member 'Lobby_PlayerController_Nebula_C_Save_ReadyUpButton_State::Hide_Button__0' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_Save_ReadyUpButton_State, JustLock_) == 0x00001A, "Member 'Lobby_PlayerController_Nebula_C_Save_ReadyUpButton_State::JustLock_' has a wrong offset!");

// Function Lobby_PlayerController_Nebula.Lobby_PlayerController_Nebula_C.Create_MapTravel_LoadingScreen
// 0x0100 (0x0100 - 0x0000)
struct Lobby_PlayerController_Nebula_C_Create_MapTravel_LoadingScreen final
{
public:
	class FName                                   Map;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FS_Gamemode                            CallFunc_GetDataTableRowFromName_OutRow;           // 0x0018(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0080(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x00E8(0x0018)()
};
static_assert(alignof(Lobby_PlayerController_Nebula_C_Create_MapTravel_LoadingScreen) == 0x000008, "Wrong alignment on Lobby_PlayerController_Nebula_C_Create_MapTravel_LoadingScreen");
static_assert(sizeof(Lobby_PlayerController_Nebula_C_Create_MapTravel_LoadingScreen) == 0x000100, "Wrong size on Lobby_PlayerController_Nebula_C_Create_MapTravel_LoadingScreen");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_Create_MapTravel_LoadingScreen, Map) == 0x000000, "Member 'Lobby_PlayerController_Nebula_C_Create_MapTravel_LoadingScreen::Map' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_Create_MapTravel_LoadingScreen, CallFunc_Concat_StrStr_ReturnValue) == 0x000008, "Member 'Lobby_PlayerController_Nebula_C_Create_MapTravel_LoadingScreen::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_Create_MapTravel_LoadingScreen, CallFunc_GetDataTableRowFromName_OutRow) == 0x000018, "Member 'Lobby_PlayerController_Nebula_C_Create_MapTravel_LoadingScreen::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_Create_MapTravel_LoadingScreen, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000058, "Member 'Lobby_PlayerController_Nebula_C_Create_MapTravel_LoadingScreen::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_Create_MapTravel_LoadingScreen, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000060, "Member 'Lobby_PlayerController_Nebula_C_Create_MapTravel_LoadingScreen::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_Create_MapTravel_LoadingScreen, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000070, "Member 'Lobby_PlayerController_Nebula_C_Create_MapTravel_LoadingScreen::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_Create_MapTravel_LoadingScreen, CallFunc_Conv_StringToText_ReturnValue) == 0x000080, "Member 'Lobby_PlayerController_Nebula_C_Create_MapTravel_LoadingScreen::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_Create_MapTravel_LoadingScreen, CallFunc_Conv_TextToString_ReturnValue) == 0x000098, "Member 'Lobby_PlayerController_Nebula_C_Create_MapTravel_LoadingScreen::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_Create_MapTravel_LoadingScreen, CallFunc_Conv_TextToString_ReturnValue_1) == 0x0000A8, "Member 'Lobby_PlayerController_Nebula_C_Create_MapTravel_LoadingScreen::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_Create_MapTravel_LoadingScreen, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0000B8, "Member 'Lobby_PlayerController_Nebula_C_Create_MapTravel_LoadingScreen::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_Create_MapTravel_LoadingScreen, CallFunc_Concat_StrStr_ReturnValue_4) == 0x0000C8, "Member 'Lobby_PlayerController_Nebula_C_Create_MapTravel_LoadingScreen::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_Create_MapTravel_LoadingScreen, CallFunc_Concat_StrStr_ReturnValue_5) == 0x0000D8, "Member 'Lobby_PlayerController_Nebula_C_Create_MapTravel_LoadingScreen::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_Create_MapTravel_LoadingScreen, CallFunc_Conv_StringToText_ReturnValue_1) == 0x0000E8, "Member 'Lobby_PlayerController_Nebula_C_Create_MapTravel_LoadingScreen::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");

// Function Lobby_PlayerController_Nebula.Lobby_PlayerController_Nebula_C.CreateLoadingScreen
// 0x0038 (0x0038 - 0x0000)
struct Lobby_PlayerController_Nebula_C_CreateLoadingScreen final
{
public:
	class FText                                   LoadingScreen_FeedbackText;                        // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UTexture2D*                             LoadingScreen_Image;                               // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocalPlayerController_ReturnValue;      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_LoadingScreen_C*                    CallFunc_Create_ReturnValue;                       // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Lobby_PlayerController_Nebula_C_CreateLoadingScreen) == 0x000008, "Wrong alignment on Lobby_PlayerController_Nebula_C_CreateLoadingScreen");
static_assert(sizeof(Lobby_PlayerController_Nebula_C_CreateLoadingScreen) == 0x000038, "Wrong size on Lobby_PlayerController_Nebula_C_CreateLoadingScreen");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_CreateLoadingScreen, LoadingScreen_FeedbackText) == 0x000000, "Member 'Lobby_PlayerController_Nebula_C_CreateLoadingScreen::LoadingScreen_FeedbackText' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_CreateLoadingScreen, LoadingScreen_Image) == 0x000018, "Member 'Lobby_PlayerController_Nebula_C_CreateLoadingScreen::LoadingScreen_Image' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_CreateLoadingScreen, CallFunc_GetPlayerController_ReturnValue) == 0x000020, "Member 'Lobby_PlayerController_Nebula_C_CreateLoadingScreen::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_CreateLoadingScreen, CallFunc_IsLocalPlayerController_ReturnValue) == 0x000028, "Member 'Lobby_PlayerController_Nebula_C_CreateLoadingScreen::CallFunc_IsLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_CreateLoadingScreen, CallFunc_Create_ReturnValue) == 0x000030, "Member 'Lobby_PlayerController_Nebula_C_CreateLoadingScreen::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function Lobby_PlayerController_Nebula.Lobby_PlayerController_Nebula_C.Update Player Speaking
// 0x00B8 (0x00B8 - 0x0000)
struct Lobby_PlayerController_Nebula_C_Update_Player_Speaking final
{
public:
	bool                                          IsSpeaking;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBPUniqueNetId                         UniqueId;                                          // 0x0008(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FString                                 PlayerName;                                        // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0058(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_Menu_Lobby_Player_C*                K2Node_DynamicCast_AsUI_Menu_Lobby_Player;         // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_83[0x5];                                       // 0x0083(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBPUniqueNetId                         CallFunc_GetUniqueNetIDFromPlayerState_UniqueNetId; // 0x0088(0x0028)()
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_UNetIDUnetID_ReturnValue;      // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Lobby_PlayerController_Nebula_C_Update_Player_Speaking) == 0x000008, "Wrong alignment on Lobby_PlayerController_Nebula_C_Update_Player_Speaking");
static_assert(sizeof(Lobby_PlayerController_Nebula_C_Update_Player_Speaking) == 0x0000B8, "Wrong size on Lobby_PlayerController_Nebula_C_Update_Player_Speaking");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_Update_Player_Speaking, IsSpeaking) == 0x000000, "Member 'Lobby_PlayerController_Nebula_C_Update_Player_Speaking::IsSpeaking' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_Update_Player_Speaking, UniqueId) == 0x000008, "Member 'Lobby_PlayerController_Nebula_C_Update_Player_Speaking::UniqueId' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_Update_Player_Speaking, PlayerName) == 0x000030, "Member 'Lobby_PlayerController_Nebula_C_Update_Player_Speaking::PlayerName' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_Update_Player_Speaking, Temp_bool_True_if_break_was_hit_Variable) == 0x000040, "Member 'Lobby_PlayerController_Nebula_C_Update_Player_Speaking::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_Update_Player_Speaking, Temp_int_Array_Index_Variable) == 0x000044, "Member 'Lobby_PlayerController_Nebula_C_Update_Player_Speaking::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_Update_Player_Speaking, CallFunc_Not_PreBool_ReturnValue) == 0x000048, "Member 'Lobby_PlayerController_Nebula_C_Update_Player_Speaking::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_Update_Player_Speaking, Temp_int_Loop_Counter_Variable) == 0x00004C, "Member 'Lobby_PlayerController_Nebula_C_Update_Player_Speaking::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_Update_Player_Speaking, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'Lobby_PlayerController_Nebula_C_Update_Player_Speaking::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_Update_Player_Speaking, CallFunc_IsValid_ReturnValue_1) == 0x000051, "Member 'Lobby_PlayerController_Nebula_C_Update_Player_Speaking::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_Update_Player_Speaking, CallFunc_GetAllChildren_ReturnValue) == 0x000058, "Member 'Lobby_PlayerController_Nebula_C_Update_Player_Speaking::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_Update_Player_Speaking, CallFunc_Array_Get_Item) == 0x000068, "Member 'Lobby_PlayerController_Nebula_C_Update_Player_Speaking::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_Update_Player_Speaking, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'Lobby_PlayerController_Nebula_C_Update_Player_Speaking::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_Update_Player_Speaking, K2Node_DynamicCast_AsUI_Menu_Lobby_Player) == 0x000078, "Member 'Lobby_PlayerController_Nebula_C_Update_Player_Speaking::K2Node_DynamicCast_AsUI_Menu_Lobby_Player' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_Update_Player_Speaking, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'Lobby_PlayerController_Nebula_C_Update_Player_Speaking::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_Update_Player_Speaking, CallFunc_Less_IntInt_ReturnValue) == 0x000081, "Member 'Lobby_PlayerController_Nebula_C_Update_Player_Speaking::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_Update_Player_Speaking, CallFunc_BooleanAND_ReturnValue) == 0x000082, "Member 'Lobby_PlayerController_Nebula_C_Update_Player_Speaking::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_Update_Player_Speaking, CallFunc_GetUniqueNetIDFromPlayerState_UniqueNetId) == 0x000088, "Member 'Lobby_PlayerController_Nebula_C_Update_Player_Speaking::CallFunc_GetUniqueNetIDFromPlayerState_UniqueNetId' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_Update_Player_Speaking, CallFunc_Add_IntInt_ReturnValue) == 0x0000B0, "Member 'Lobby_PlayerController_Nebula_C_Update_Player_Speaking::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_Update_Player_Speaking, CallFunc_EqualEqual_UNetIDUnetID_ReturnValue) == 0x0000B4, "Member 'Lobby_PlayerController_Nebula_C_Update_Player_Speaking::CallFunc_EqualEqual_UNetIDUnetID_ReturnValue' has a wrong offset!");

// Function Lobby_PlayerController_Nebula.Lobby_PlayerController_Nebula_C.OnRep_CanTalk
// 0x0001 (0x0001 - 0x0000)
struct Lobby_PlayerController_Nebula_C_OnRep_CanTalk final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Lobby_PlayerController_Nebula_C_OnRep_CanTalk) == 0x000001, "Wrong alignment on Lobby_PlayerController_Nebula_C_OnRep_CanTalk");
static_assert(sizeof(Lobby_PlayerController_Nebula_C_OnRep_CanTalk) == 0x000001, "Wrong size on Lobby_PlayerController_Nebula_C_OnRep_CanTalk");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_OnRep_CanTalk, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'Lobby_PlayerController_Nebula_C_OnRep_CanTalk::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function Lobby_PlayerController_Nebula.Lobby_PlayerController_Nebula_C.IsMissionSelectOpen
// 0x0030 (0x0030 - 0x0000)
struct Lobby_PlayerController_Nebula_C_IsMissionSelectOpen final
{
public:
	bool                                          Yes;                                               // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUI_Menu_Programm_C*>            CallFunc_GetAllWidgetsOfClass_FoundWidgets;        // 0x0008(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_Menu_Programm_C*                    CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Lobby_PlayerController_Nebula_C_IsMissionSelectOpen) == 0x000008, "Wrong alignment on Lobby_PlayerController_Nebula_C_IsMissionSelectOpen");
static_assert(sizeof(Lobby_PlayerController_Nebula_C_IsMissionSelectOpen) == 0x000030, "Wrong size on Lobby_PlayerController_Nebula_C_IsMissionSelectOpen");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_IsMissionSelectOpen, Yes) == 0x000000, "Member 'Lobby_PlayerController_Nebula_C_IsMissionSelectOpen::Yes' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_IsMissionSelectOpen, CallFunc_GetAllWidgetsOfClass_FoundWidgets) == 0x000008, "Member 'Lobby_PlayerController_Nebula_C_IsMissionSelectOpen::CallFunc_GetAllWidgetsOfClass_FoundWidgets' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_IsMissionSelectOpen, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000018, "Member 'Lobby_PlayerController_Nebula_C_IsMissionSelectOpen::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_IsMissionSelectOpen, CallFunc_Array_Get_Item) == 0x000020, "Member 'Lobby_PlayerController_Nebula_C_IsMissionSelectOpen::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_IsMissionSelectOpen, CallFunc_IsVisible_ReturnValue) == 0x000028, "Member 'Lobby_PlayerController_Nebula_C_IsMissionSelectOpen::CallFunc_IsVisible_ReturnValue' has a wrong offset!");

// Function Lobby_PlayerController_Nebula.Lobby_PlayerController_Nebula_C.On Push to Talk Changed
// 0x0020 (0x0020 - 0x0000)
struct Lobby_PlayerController_Nebula_C_On_Push_to_Talk_Changed final
{
public:
	bool                                          CallFunc_IsConsoleBuild_ReturnValue;               // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Load_ControlSettings_Sensitivity;         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Load_ControlSettings_InvertMouse;         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_CameraSetting                               CallFunc_Load_ControlSettings_CameraSetting;       // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Load_ControlSettings_ShowBody;            // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Load_ControlSettings_UsingPushToTalk;     // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Load_ControlSettings_FOV;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Load_ControlSettings_SmoothRotation;      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Load_ControlSettings_HideGore;            // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Load_ControlSettings_Gamma;               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Load_ControlSettings_CameraShake;         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Load_ControlSettings_ShowEventContent;    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Load_ControlSettings_AimAssist;           // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Load_ControlSettings_ControllerFeedback;  // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Load_ControlSettings_ShowChat;            // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsConsoleBuild_ReturnValue_1;             // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Lobby_PlayerController_Nebula_C_On_Push_to_Talk_Changed) == 0x000004, "Wrong alignment on Lobby_PlayerController_Nebula_C_On_Push_to_Talk_Changed");
static_assert(sizeof(Lobby_PlayerController_Nebula_C_On_Push_to_Talk_Changed) == 0x000020, "Wrong size on Lobby_PlayerController_Nebula_C_On_Push_to_Talk_Changed");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_On_Push_to_Talk_Changed, CallFunc_IsConsoleBuild_ReturnValue) == 0x000000, "Member 'Lobby_PlayerController_Nebula_C_On_Push_to_Talk_Changed::CallFunc_IsConsoleBuild_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_On_Push_to_Talk_Changed, CallFunc_Load_ControlSettings_Sensitivity) == 0x000004, "Member 'Lobby_PlayerController_Nebula_C_On_Push_to_Talk_Changed::CallFunc_Load_ControlSettings_Sensitivity' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_On_Push_to_Talk_Changed, CallFunc_Load_ControlSettings_InvertMouse) == 0x000008, "Member 'Lobby_PlayerController_Nebula_C_On_Push_to_Talk_Changed::CallFunc_Load_ControlSettings_InvertMouse' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_On_Push_to_Talk_Changed, CallFunc_Load_ControlSettings_CameraSetting) == 0x000009, "Member 'Lobby_PlayerController_Nebula_C_On_Push_to_Talk_Changed::CallFunc_Load_ControlSettings_CameraSetting' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_On_Push_to_Talk_Changed, CallFunc_Load_ControlSettings_ShowBody) == 0x00000A, "Member 'Lobby_PlayerController_Nebula_C_On_Push_to_Talk_Changed::CallFunc_Load_ControlSettings_ShowBody' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_On_Push_to_Talk_Changed, CallFunc_Load_ControlSettings_UsingPushToTalk) == 0x00000B, "Member 'Lobby_PlayerController_Nebula_C_On_Push_to_Talk_Changed::CallFunc_Load_ControlSettings_UsingPushToTalk' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_On_Push_to_Talk_Changed, CallFunc_Load_ControlSettings_FOV) == 0x00000C, "Member 'Lobby_PlayerController_Nebula_C_On_Push_to_Talk_Changed::CallFunc_Load_ControlSettings_FOV' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_On_Push_to_Talk_Changed, CallFunc_Load_ControlSettings_SmoothRotation) == 0x000010, "Member 'Lobby_PlayerController_Nebula_C_On_Push_to_Talk_Changed::CallFunc_Load_ControlSettings_SmoothRotation' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_On_Push_to_Talk_Changed, CallFunc_Load_ControlSettings_HideGore) == 0x000011, "Member 'Lobby_PlayerController_Nebula_C_On_Push_to_Talk_Changed::CallFunc_Load_ControlSettings_HideGore' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_On_Push_to_Talk_Changed, CallFunc_Load_ControlSettings_Gamma) == 0x000014, "Member 'Lobby_PlayerController_Nebula_C_On_Push_to_Talk_Changed::CallFunc_Load_ControlSettings_Gamma' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_On_Push_to_Talk_Changed, CallFunc_Load_ControlSettings_CameraShake) == 0x000018, "Member 'Lobby_PlayerController_Nebula_C_On_Push_to_Talk_Changed::CallFunc_Load_ControlSettings_CameraShake' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_On_Push_to_Talk_Changed, CallFunc_Load_ControlSettings_ShowEventContent) == 0x000019, "Member 'Lobby_PlayerController_Nebula_C_On_Push_to_Talk_Changed::CallFunc_Load_ControlSettings_ShowEventContent' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_On_Push_to_Talk_Changed, CallFunc_Load_ControlSettings_AimAssist) == 0x00001A, "Member 'Lobby_PlayerController_Nebula_C_On_Push_to_Talk_Changed::CallFunc_Load_ControlSettings_AimAssist' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_On_Push_to_Talk_Changed, CallFunc_Load_ControlSettings_ControllerFeedback) == 0x00001B, "Member 'Lobby_PlayerController_Nebula_C_On_Push_to_Talk_Changed::CallFunc_Load_ControlSettings_ControllerFeedback' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_On_Push_to_Talk_Changed, CallFunc_Load_ControlSettings_ShowChat) == 0x00001C, "Member 'Lobby_PlayerController_Nebula_C_On_Push_to_Talk_Changed::CallFunc_Load_ControlSettings_ShowChat' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_Nebula_C_On_Push_to_Talk_Changed, CallFunc_IsConsoleBuild_ReturnValue_1) == 0x00001D, "Member 'Lobby_PlayerController_Nebula_C_On_Push_to_Talk_Changed::CallFunc_IsConsoleBuild_ReturnValue_1' has a wrong offset!");

}

