#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Fish

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Fish.BP_Fish_C
// 0x0040 (0x0500 - 0x04C0)
class ABP_Fish_C final : public ACharacter
{
public:
	uint8                                         Pad_4B8[0x8];                                      // 0x04B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x04C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        EyeSight;                                          // 0x04C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       KillPlayer;                                        // 0x04D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Audio;                                             // 0x04D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldMove;                                        // 0x04E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          CanAttack;                                         // 0x04E1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsTargetting;                                      // 0x04E2(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	uint8                                         Pad_4E3[0x1];                                      // 0x04E3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AttackOffset;                                      // 0x04E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_RowBoat_C*                          TargetPlayer;                                      // 0x04E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         MovementSpeed;                                     // 0x04F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Fish(int32 EntryPoint);
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void StopSound();
	void MC_Stop(float Delay);
	void StartSound();
	void AttackPlayer(class ABPCharacter_Demo_C* Player);
	void BndEvt__BP_Hound_KillPlayer_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void BndEvt__BP_Hound_KillPlayer_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void MC_KillAnimation(class ABPCharacter_Demo_C* Target);
	void PlayFlip();
	void Jumpscare(class ABPCharacter_Demo_C* Player);
	void MC_KillSound();
	void LookAtEntity(class ABPCharacter_Demo_C* Target);
	void StopMovement();
	void OnRep_IsTargetting();
	void CanSeePlayer(class ABPCharacter_Demo_C* Target, bool* CanSee);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Fish_C">();
	}
	static class ABP_Fish_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Fish_C>();
	}
};
static_assert(alignof(ABP_Fish_C) == 0x000010, "Wrong alignment on ABP_Fish_C");
static_assert(sizeof(ABP_Fish_C) == 0x000500, "Wrong size on ABP_Fish_C");
static_assert(offsetof(ABP_Fish_C, UberGraphFrame) == 0x0004C0, "Member 'ABP_Fish_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Fish_C, EyeSight) == 0x0004C8, "Member 'ABP_Fish_C::EyeSight' has a wrong offset!");
static_assert(offsetof(ABP_Fish_C, KillPlayer) == 0x0004D0, "Member 'ABP_Fish_C::KillPlayer' has a wrong offset!");
static_assert(offsetof(ABP_Fish_C, Audio) == 0x0004D8, "Member 'ABP_Fish_C::Audio' has a wrong offset!");
static_assert(offsetof(ABP_Fish_C, ShouldMove) == 0x0004E0, "Member 'ABP_Fish_C::ShouldMove' has a wrong offset!");
static_assert(offsetof(ABP_Fish_C, CanAttack) == 0x0004E1, "Member 'ABP_Fish_C::CanAttack' has a wrong offset!");
static_assert(offsetof(ABP_Fish_C, IsTargetting) == 0x0004E2, "Member 'ABP_Fish_C::IsTargetting' has a wrong offset!");
static_assert(offsetof(ABP_Fish_C, AttackOffset) == 0x0004E4, "Member 'ABP_Fish_C::AttackOffset' has a wrong offset!");
static_assert(offsetof(ABP_Fish_C, TargetPlayer) == 0x0004E8, "Member 'ABP_Fish_C::TargetPlayer' has a wrong offset!");
static_assert(offsetof(ABP_Fish_C, MovementSpeed) == 0x0004F0, "Member 'ABP_Fish_C::MovementSpeed' has a wrong offset!");

}

