#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Ocean_Manager

#include "Basic.hpp"

#include "BP_Ocean_Manager_classes.hpp"
#include "BP_Ocean_Manager_parameters.hpp"


namespace SDK
{

// Function BP_Ocean_Manager.BP_Ocean_Manager_C.ExecuteUbergraph_BP_Ocean_Manager
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Ocean_Manager_C::ExecuteUbergraph_BP_Ocean_Manager(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Ocean_Manager_C", "ExecuteUbergraph_BP_Ocean_Manager");

	Params::BP_Ocean_Manager_C_ExecuteUbergraph_BP_Ocean_Manager Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Ocean_Manager.BP_Ocean_Manager_C.StopSpawnTimer
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_Ocean_Manager_C::StopSpawnTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Ocean_Manager_C", "StopSpawnTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Ocean_Manager.BP_Ocean_Manager_C.StartSpawnTimer
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_Ocean_Manager_C::StartSpawnTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Ocean_Manager_C", "StartSpawnTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Ocean_Manager.BP_Ocean_Manager_C.FindTarget
// (BlueprintCallable, BlueprintEvent)

void ABP_Ocean_Manager_C::FindTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Ocean_Manager_C", "FindTarget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Ocean_Manager.BP_Ocean_Manager_C.UpdateWaterSettings
// (BlueprintCallable, BlueprintEvent)

void ABP_Ocean_Manager_C::UpdateWaterSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Ocean_Manager_C", "UpdateWaterSettings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Ocean_Manager.BP_Ocean_Manager_C.StopRisingWaves
// (BlueprintCallable, BlueprintEvent)

void ABP_Ocean_Manager_C::StopRisingWaves()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Ocean_Manager_C", "StopRisingWaves");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Ocean_Manager.BP_Ocean_Manager_C.StartRisingWaves
// (BlueprintCallable, BlueprintEvent)

void ABP_Ocean_Manager_C::StartRisingWaves()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Ocean_Manager_C", "StartRisingWaves");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Ocean_Manager.BP_Ocean_Manager_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_Ocean_Manager_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Ocean_Manager_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Ocean_Manager.BP_Ocean_Manager_C.ToggleWaves__UpdateBuoyancy__EventFunc
// (BlueprintEvent)

void ABP_Ocean_Manager_C::ToggleWaves__UpdateBuoyancy__EventFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Ocean_Manager_C", "ToggleWaves__UpdateBuoyancy__EventFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Ocean_Manager.BP_Ocean_Manager_C.ToggleWaves__UpdateDrowning__EventFunc
// (BlueprintEvent)

void ABP_Ocean_Manager_C::ToggleWaves__UpdateDrowning__EventFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Ocean_Manager_C", "ToggleWaves__UpdateDrowning__EventFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Ocean_Manager.BP_Ocean_Manager_C.ToggleWaves__UpdateFunc
// (BlueprintEvent)

void ABP_Ocean_Manager_C::ToggleWaves__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Ocean_Manager_C", "ToggleWaves__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Ocean_Manager.BP_Ocean_Manager_C.ToggleWaves__FinishedFunc
// (BlueprintEvent)

void ABP_Ocean_Manager_C::ToggleWaves__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Ocean_Manager_C", "ToggleWaves__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Ocean_Manager.BP_Ocean_Manager_C.UpdateBuoyancy
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Rising                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Ocean_Manager_C::UpdateBuoyancy(bool Rising)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Ocean_Manager_C", "UpdateBuoyancy");

	Params::BP_Ocean_Manager_C_UpdateBuoyancy Parms{};

	Parms.Rising = Rising;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Ocean_Manager.BP_Ocean_Manager_C.UpdateDrowning
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Rising                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Ocean_Manager_C::UpdateDrowning(bool Rising)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Ocean_Manager_C", "UpdateDrowning");

	Params::BP_Ocean_Manager_C_UpdateDrowning Parms{};

	Parms.Rising = Rising;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Ocean_Manager.BP_Ocean_Manager_C.Find Target Player
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABPCharacter_Demo_C**             TargetPlayer                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Ocean_Manager_C::Find_Target_Player(class ABPCharacter_Demo_C** TargetPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Ocean_Manager_C", "Find Target Player");

	Params::BP_Ocean_Manager_C_Find_Target_Player Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (TargetPlayer != nullptr)
		*TargetPlayer = Parms.TargetPlayer;
}

}

