#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Player_Arms_AnimBP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "ST_Item_structs.hpp"


namespace SDK::Params
{

// Function Player_Arms_AnimBP.Player_Arms_AnimBP_C.ExecuteUbergraph_Player_Arms_AnimBP
// 0x0100 (0x0100 - 0x0000)
struct Player_Arms_AnimBP_C_ExecuteUbergraph_Player_Arms_AnimBP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaTimeX;                           // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPCharacter_Demo_C*                    K2Node_DynamicCast_AsBPCharacter_Demo;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VSize2D_ReturnValue;                      // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_Item                               CallFunc_GetDataTableRowFromName_OutRow;           // 0x0050(0x00A0)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCarrying_ReturnValue;                   // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x00F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSwimming_ReturnValue;                   // 0x00F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00F6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00F7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x00FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x00FB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Player_Arms_AnimBP_C_ExecuteUbergraph_Player_Arms_AnimBP) == 0x000010, "Wrong alignment on Player_Arms_AnimBP_C_ExecuteUbergraph_Player_Arms_AnimBP");
static_assert(sizeof(Player_Arms_AnimBP_C_ExecuteUbergraph_Player_Arms_AnimBP) == 0x000100, "Wrong size on Player_Arms_AnimBP_C_ExecuteUbergraph_Player_Arms_AnimBP");
static_assert(offsetof(Player_Arms_AnimBP_C_ExecuteUbergraph_Player_Arms_AnimBP, EntryPoint) == 0x000000, "Member 'Player_Arms_AnimBP_C_ExecuteUbergraph_Player_Arms_AnimBP::EntryPoint' has a wrong offset!");
static_assert(offsetof(Player_Arms_AnimBP_C_ExecuteUbergraph_Player_Arms_AnimBP, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000004, "Member 'Player_Arms_AnimBP_C_ExecuteUbergraph_Player_Arms_AnimBP::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_Arms_AnimBP_C_ExecuteUbergraph_Player_Arms_AnimBP, CallFunc_Not_PreBool_ReturnValue) == 0x000005, "Member 'Player_Arms_AnimBP_C_ExecuteUbergraph_Player_Arms_AnimBP::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_Arms_AnimBP_C_ExecuteUbergraph_Player_Arms_AnimBP, CallFunc_SelectFloat_ReturnValue) == 0x000008, "Member 'Player_Arms_AnimBP_C_ExecuteUbergraph_Player_Arms_AnimBP::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_Arms_AnimBP_C_ExecuteUbergraph_Player_Arms_AnimBP, K2Node_Event_DeltaTimeX) == 0x00000C, "Member 'Player_Arms_AnimBP_C_ExecuteUbergraph_Player_Arms_AnimBP::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(Player_Arms_AnimBP_C_ExecuteUbergraph_Player_Arms_AnimBP, CallFunc_TryGetPawnOwner_ReturnValue) == 0x000010, "Member 'Player_Arms_AnimBP_C_ExecuteUbergraph_Player_Arms_AnimBP::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_Arms_AnimBP_C_ExecuteUbergraph_Player_Arms_AnimBP, CallFunc_GetVelocity_ReturnValue) == 0x000018, "Member 'Player_Arms_AnimBP_C_ExecuteUbergraph_Player_Arms_AnimBP::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_Arms_AnimBP_C_ExecuteUbergraph_Player_Arms_AnimBP, K2Node_DynamicCast_AsBPCharacter_Demo) == 0x000028, "Member 'Player_Arms_AnimBP_C_ExecuteUbergraph_Player_Arms_AnimBP::K2Node_DynamicCast_AsBPCharacter_Demo' has a wrong offset!");
static_assert(offsetof(Player_Arms_AnimBP_C_ExecuteUbergraph_Player_Arms_AnimBP, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'Player_Arms_AnimBP_C_ExecuteUbergraph_Player_Arms_AnimBP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Player_Arms_AnimBP_C_ExecuteUbergraph_Player_Arms_AnimBP, CallFunc_BreakVector_X) == 0x000034, "Member 'Player_Arms_AnimBP_C_ExecuteUbergraph_Player_Arms_AnimBP::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Player_Arms_AnimBP_C_ExecuteUbergraph_Player_Arms_AnimBP, CallFunc_BreakVector_Y) == 0x000038, "Member 'Player_Arms_AnimBP_C_ExecuteUbergraph_Player_Arms_AnimBP::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Player_Arms_AnimBP_C_ExecuteUbergraph_Player_Arms_AnimBP, CallFunc_BreakVector_Z) == 0x00003C, "Member 'Player_Arms_AnimBP_C_ExecuteUbergraph_Player_Arms_AnimBP::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Player_Arms_AnimBP_C_ExecuteUbergraph_Player_Arms_AnimBP, CallFunc_MakeVector2D_ReturnValue) == 0x000040, "Member 'Player_Arms_AnimBP_C_ExecuteUbergraph_Player_Arms_AnimBP::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_Arms_AnimBP_C_ExecuteUbergraph_Player_Arms_AnimBP, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'Player_Arms_AnimBP_C_ExecuteUbergraph_Player_Arms_AnimBP::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_Arms_AnimBP_C_ExecuteUbergraph_Player_Arms_AnimBP, CallFunc_VSize2D_ReturnValue) == 0x00004C, "Member 'Player_Arms_AnimBP_C_ExecuteUbergraph_Player_Arms_AnimBP::CallFunc_VSize2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_Arms_AnimBP_C_ExecuteUbergraph_Player_Arms_AnimBP, CallFunc_GetDataTableRowFromName_OutRow) == 0x000050, "Member 'Player_Arms_AnimBP_C_ExecuteUbergraph_Player_Arms_AnimBP::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(Player_Arms_AnimBP_C_ExecuteUbergraph_Player_Arms_AnimBP, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000F0, "Member 'Player_Arms_AnimBP_C_ExecuteUbergraph_Player_Arms_AnimBP::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_Arms_AnimBP_C_ExecuteUbergraph_Player_Arms_AnimBP, CallFunc_IsCarrying_ReturnValue) == 0x0000F1, "Member 'Player_Arms_AnimBP_C_ExecuteUbergraph_Player_Arms_AnimBP::CallFunc_IsCarrying_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_Arms_AnimBP_C_ExecuteUbergraph_Player_Arms_AnimBP, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000F2, "Member 'Player_Arms_AnimBP_C_ExecuteUbergraph_Player_Arms_AnimBP::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Player_Arms_AnimBP_C_ExecuteUbergraph_Player_Arms_AnimBP, CallFunc_Not_PreBool_ReturnValue_2) == 0x0000F3, "Member 'Player_Arms_AnimBP_C_ExecuteUbergraph_Player_Arms_AnimBP::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Player_Arms_AnimBP_C_ExecuteUbergraph_Player_Arms_AnimBP, CallFunc_BooleanAND_ReturnValue) == 0x0000F4, "Member 'Player_Arms_AnimBP_C_ExecuteUbergraph_Player_Arms_AnimBP::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_Arms_AnimBP_C_ExecuteUbergraph_Player_Arms_AnimBP, CallFunc_IsSwimming_ReturnValue) == 0x0000F5, "Member 'Player_Arms_AnimBP_C_ExecuteUbergraph_Player_Arms_AnimBP::CallFunc_IsSwimming_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_Arms_AnimBP_C_ExecuteUbergraph_Player_Arms_AnimBP, CallFunc_BooleanAND_ReturnValue_1) == 0x0000F6, "Member 'Player_Arms_AnimBP_C_ExecuteUbergraph_Player_Arms_AnimBP::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Player_Arms_AnimBP_C_ExecuteUbergraph_Player_Arms_AnimBP, CallFunc_BooleanOR_ReturnValue) == 0x0000F7, "Member 'Player_Arms_AnimBP_C_ExecuteUbergraph_Player_Arms_AnimBP::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_Arms_AnimBP_C_ExecuteUbergraph_Player_Arms_AnimBP, CallFunc_Less_FloatFloat_ReturnValue) == 0x0000F8, "Member 'Player_Arms_AnimBP_C_ExecuteUbergraph_Player_Arms_AnimBP::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_Arms_AnimBP_C_ExecuteUbergraph_Player_Arms_AnimBP, CallFunc_Not_PreBool_ReturnValue_3) == 0x0000F9, "Member 'Player_Arms_AnimBP_C_ExecuteUbergraph_Player_Arms_AnimBP::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Player_Arms_AnimBP_C_ExecuteUbergraph_Player_Arms_AnimBP, CallFunc_BooleanAND_ReturnValue_2) == 0x0000FA, "Member 'Player_Arms_AnimBP_C_ExecuteUbergraph_Player_Arms_AnimBP::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Player_Arms_AnimBP_C_ExecuteUbergraph_Player_Arms_AnimBP, CallFunc_BooleanOR_ReturnValue_1) == 0x0000FB, "Member 'Player_Arms_AnimBP_C_ExecuteUbergraph_Player_Arms_AnimBP::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

// Function Player_Arms_AnimBP.Player_Arms_AnimBP_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct Player_Arms_AnimBP_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Player_Arms_AnimBP_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on Player_Arms_AnimBP_C_BlueprintUpdateAnimation");
static_assert(sizeof(Player_Arms_AnimBP_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on Player_Arms_AnimBP_C_BlueprintUpdateAnimation");
static_assert(offsetof(Player_Arms_AnimBP_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'Player_Arms_AnimBP_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function Player_Arms_AnimBP.Player_Arms_AnimBP_C.CheckShouldPlaySprintAnimation
// 0x0005 (0x0005 - 0x0000)
struct Player_Arms_AnimBP_C_CheckShouldPlaySprintAnimation final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Player_Arms_AnimBP_C_CheckShouldPlaySprintAnimation) == 0x000001, "Wrong alignment on Player_Arms_AnimBP_C_CheckShouldPlaySprintAnimation");
static_assert(sizeof(Player_Arms_AnimBP_C_CheckShouldPlaySprintAnimation) == 0x000005, "Wrong size on Player_Arms_AnimBP_C_CheckShouldPlaySprintAnimation");
static_assert(offsetof(Player_Arms_AnimBP_C_CheckShouldPlaySprintAnimation, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'Player_Arms_AnimBP_C_CheckShouldPlaySprintAnimation::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_Arms_AnimBP_C_CheckShouldPlaySprintAnimation, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000001, "Member 'Player_Arms_AnimBP_C_CheckShouldPlaySprintAnimation::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_Arms_AnimBP_C_CheckShouldPlaySprintAnimation, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000002, "Member 'Player_Arms_AnimBP_C_CheckShouldPlaySprintAnimation::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_Arms_AnimBP_C_CheckShouldPlaySprintAnimation, CallFunc_BooleanAND_ReturnValue) == 0x000003, "Member 'Player_Arms_AnimBP_C_CheckShouldPlaySprintAnimation::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_Arms_AnimBP_C_CheckShouldPlaySprintAnimation, CallFunc_BooleanAND_ReturnValue_1) == 0x000004, "Member 'Player_Arms_AnimBP_C_CheckShouldPlaySprintAnimation::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function Player_Arms_AnimBP.Player_Arms_AnimBP_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct Player_Arms_AnimBP_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(Player_Arms_AnimBP_C_AnimGraph) == 0x000008, "Wrong alignment on Player_Arms_AnimBP_C_AnimGraph");
static_assert(sizeof(Player_Arms_AnimBP_C_AnimGraph) == 0x000010, "Wrong size on Player_Arms_AnimBP_C_AnimGraph");
static_assert(offsetof(Player_Arms_AnimBP_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'Player_Arms_AnimBP_C_AnimGraph::AnimGraph_0' has a wrong offset!");

}

