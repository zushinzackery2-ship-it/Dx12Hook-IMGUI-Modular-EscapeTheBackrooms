#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Lighthouse

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Lighthouse.BP_Lighthouse_C
// 0x00B8 (0x02D8 - 0x0220)
class ABP_Lighthouse_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   StaticMesh1;                                       // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Fresnel_Lens01;                                 // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SpotLight;                                         // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SpotLight1;                                        // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Fresnel_Lens_Platform;                          // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Fade_Alpha_6D981B96455834514324CF9A1C18F71A;       // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Fade__Direction_6D981B96455834514324CF9A1C18F71A;  // 0x0264(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_265[0x3];                                      // 0x0265(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Fade;                                              // 0x0268(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Rotate_Rotation_D698AB5545F00D2C9CF65CB9F4EF3B02;  // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Rotate__Direction_D698AB5545F00D2C9CF65CB9F4EF3B02; // 0x0274(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_275[0x3];                                      // 0x0275(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Rotate;                                            // 0x0278(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsOn;                                              // 0x0280(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	uint8                                         Pad_281[0x7];                                      // 0x0281(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           LighthouseTimer;                                   // 0x0288(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   GodRayMesh;                                        // 0x0290(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Width;                                             // 0x0298(0x0004)(Edit, ConstParm, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Length;                                            // 0x029C(0x0004)(Edit, ConstParm, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Dynamic_material;                                  // 0x02A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color;                                             // 0x02A8(0x0010)(Edit, ConstParm, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Brightness;                                        // 0x02B8(0x0004)(Edit, ConstParm, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FadeDistance;                                      // 0x02BC(0x0004)(Edit, ConstParm, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Dynamic_material_0;                                // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StartingZ;                                         // 0x02C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2CC[0x4];                                      // 0x02CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               DynamicLensMat;                                    // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Lighthouse(int32 EntryPoint);
	void ReceiveBeginPlay();
	void FadeIn();
	void FadeOut();
	void StopTimer();
	void StartTimer();
	void Start();
	void Fade__UpdateFunc();
	void Fade__FinishedFunc();
	void Rotate__PlayHorn__EventFunc();
	void Rotate__Fade__EventFunc();
	void Rotate__UpdateFunc();
	void Rotate__FinishedFunc();
	void UserConstructionScript();
	void OnRep_IsOn();
	void Play_Lighthouse();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Lighthouse_C">();
	}
	static class ABP_Lighthouse_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Lighthouse_C>();
	}
};
static_assert(alignof(ABP_Lighthouse_C) == 0x000008, "Wrong alignment on ABP_Lighthouse_C");
static_assert(sizeof(ABP_Lighthouse_C) == 0x0002D8, "Wrong size on ABP_Lighthouse_C");
static_assert(offsetof(ABP_Lighthouse_C, UberGraphFrame) == 0x000220, "Member 'ABP_Lighthouse_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Lighthouse_C, StaticMesh1) == 0x000228, "Member 'ABP_Lighthouse_C::StaticMesh1' has a wrong offset!");
static_assert(offsetof(ABP_Lighthouse_C, StaticMesh) == 0x000230, "Member 'ABP_Lighthouse_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(ABP_Lighthouse_C, SM_Fresnel_Lens01) == 0x000238, "Member 'ABP_Lighthouse_C::SM_Fresnel_Lens01' has a wrong offset!");
static_assert(offsetof(ABP_Lighthouse_C, SpotLight) == 0x000240, "Member 'ABP_Lighthouse_C::SpotLight' has a wrong offset!");
static_assert(offsetof(ABP_Lighthouse_C, SpotLight1) == 0x000248, "Member 'ABP_Lighthouse_C::SpotLight1' has a wrong offset!");
static_assert(offsetof(ABP_Lighthouse_C, SM_Fresnel_Lens_Platform) == 0x000250, "Member 'ABP_Lighthouse_C::SM_Fresnel_Lens_Platform' has a wrong offset!");
static_assert(offsetof(ABP_Lighthouse_C, DefaultSceneRoot) == 0x000258, "Member 'ABP_Lighthouse_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_Lighthouse_C, Fade_Alpha_6D981B96455834514324CF9A1C18F71A) == 0x000260, "Member 'ABP_Lighthouse_C::Fade_Alpha_6D981B96455834514324CF9A1C18F71A' has a wrong offset!");
static_assert(offsetof(ABP_Lighthouse_C, Fade__Direction_6D981B96455834514324CF9A1C18F71A) == 0x000264, "Member 'ABP_Lighthouse_C::Fade__Direction_6D981B96455834514324CF9A1C18F71A' has a wrong offset!");
static_assert(offsetof(ABP_Lighthouse_C, Fade) == 0x000268, "Member 'ABP_Lighthouse_C::Fade' has a wrong offset!");
static_assert(offsetof(ABP_Lighthouse_C, Rotate_Rotation_D698AB5545F00D2C9CF65CB9F4EF3B02) == 0x000270, "Member 'ABP_Lighthouse_C::Rotate_Rotation_D698AB5545F00D2C9CF65CB9F4EF3B02' has a wrong offset!");
static_assert(offsetof(ABP_Lighthouse_C, Rotate__Direction_D698AB5545F00D2C9CF65CB9F4EF3B02) == 0x000274, "Member 'ABP_Lighthouse_C::Rotate__Direction_D698AB5545F00D2C9CF65CB9F4EF3B02' has a wrong offset!");
static_assert(offsetof(ABP_Lighthouse_C, Rotate) == 0x000278, "Member 'ABP_Lighthouse_C::Rotate' has a wrong offset!");
static_assert(offsetof(ABP_Lighthouse_C, IsOn) == 0x000280, "Member 'ABP_Lighthouse_C::IsOn' has a wrong offset!");
static_assert(offsetof(ABP_Lighthouse_C, LighthouseTimer) == 0x000288, "Member 'ABP_Lighthouse_C::LighthouseTimer' has a wrong offset!");
static_assert(offsetof(ABP_Lighthouse_C, GodRayMesh) == 0x000290, "Member 'ABP_Lighthouse_C::GodRayMesh' has a wrong offset!");
static_assert(offsetof(ABP_Lighthouse_C, Width) == 0x000298, "Member 'ABP_Lighthouse_C::Width' has a wrong offset!");
static_assert(offsetof(ABP_Lighthouse_C, Length) == 0x00029C, "Member 'ABP_Lighthouse_C::Length' has a wrong offset!");
static_assert(offsetof(ABP_Lighthouse_C, Dynamic_material) == 0x0002A0, "Member 'ABP_Lighthouse_C::Dynamic_material' has a wrong offset!");
static_assert(offsetof(ABP_Lighthouse_C, Color) == 0x0002A8, "Member 'ABP_Lighthouse_C::Color' has a wrong offset!");
static_assert(offsetof(ABP_Lighthouse_C, Brightness) == 0x0002B8, "Member 'ABP_Lighthouse_C::Brightness' has a wrong offset!");
static_assert(offsetof(ABP_Lighthouse_C, FadeDistance) == 0x0002BC, "Member 'ABP_Lighthouse_C::FadeDistance' has a wrong offset!");
static_assert(offsetof(ABP_Lighthouse_C, Dynamic_material_0) == 0x0002C0, "Member 'ABP_Lighthouse_C::Dynamic_material_0' has a wrong offset!");
static_assert(offsetof(ABP_Lighthouse_C, StartingZ) == 0x0002C8, "Member 'ABP_Lighthouse_C::StartingZ' has a wrong offset!");
static_assert(offsetof(ABP_Lighthouse_C, DynamicLensMat) == 0x0002D0, "Member 'ABP_Lighthouse_C::DynamicLensMat' has a wrong offset!");

}

