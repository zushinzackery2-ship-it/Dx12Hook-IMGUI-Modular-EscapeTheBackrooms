#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: XRVisualization

#include "Basic.hpp"

#include "XRVisualization_classes.hpp"
#include "XRVisualization_parameters.hpp"


namespace SDK
{

// Function XRVisualization.XRVisualizationFunctionLibrary.RenderHMD
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FXRHMDData&                XRHMDData                                              (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UXRVisualizationFunctionLibrary::RenderHMD(const struct FXRHMDData& XRHMDData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("XRVisualizationFunctionLibrary", "RenderHMD");

	Params::XRVisualizationFunctionLibrary_RenderHMD Parms{};

	Parms.XRHMDData = std::move(XRHMDData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function XRVisualization.XRVisualizationFunctionLibrary.RenderMotionController
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FXRMotionControllerData&   XRControllerData                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bRight                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UXRVisualizationFunctionLibrary::RenderMotionController(const struct FXRMotionControllerData& XRControllerData, bool bRight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("XRVisualizationFunctionLibrary", "RenderMotionController");

	Params::XRVisualizationFunctionLibrary_RenderMotionController Parms{};

	Parms.XRControllerData = std::move(XRControllerData);
	Parms.bRight = bRight;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

