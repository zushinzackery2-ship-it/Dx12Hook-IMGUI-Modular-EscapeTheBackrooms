#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Moth

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "AIModule_structs.hpp"
#include "Engine_structs.hpp"
#include "HE_LookAtLocationSeq_structs.hpp"
#include "HE_LookAtLocation_structs.hpp"


namespace SDK::Params
{

// Function BP_Moth.BP_Moth_C.ExecuteUbergraph_BP_Moth
// 0x05B0 (0x05B0 - 0x0000)
struct BP_Moth_C_ExecuteUbergraph_BP_Moth final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPathFollowingResult                          Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_4;                   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_3;                   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_1;            // 0x0028(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_2;                   // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_2;            // 0x0040(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_1;                   // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_3;            // 0x0058(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName;                     // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_4;            // 0x0070(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   Temp_name_Variable;                                // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPathFollowingResult                          K2Node_CustomEvent_MovementResult_3;               // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x008B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void(EPathFollowingResult MovementResult)> K2Node_CreateDelegate_OutputDelegate_5;     // 0x008C(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable_2;               // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9E[0x2];                                       // 0x009E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          CallFunc_GetAIController_ReturnValue;              // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAIC_Moth_C*                            K2Node_DynamicCast_AsAIC_Moth;                     // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B2[0x6];                                       // 0x00B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPCharacter_Demo_C*                    K2Node_CustomEvent_Player;                         // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_2;                     // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPathFollowingResult                          K2Node_CustomEvent_MovementResult;                 // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C2[0x2];                                       // 0x00C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EPathFollowingResult MovementResult)> K2Node_CreateDelegate_OutputDelegate_6;     // 0x00C4(0x0010)(ZeroConstructor, NoDestructor)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x00D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAtLocation_ReturnValue;         // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAtLocation_ReturnValue_1;       // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAIC_Moth_C*                            K2Node_DynamicCast_AsAIC_Moth_1;                   // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0110(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0120(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12D[0x3];                                      // 0x012D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0130(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class ABPCharacter_Demo_C*                    K2Node_DynamicCast_AsBPCharacter_Demo;             // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C1[0x7];                                      // 0x01C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue_1;              // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanSeePlayer_CanSee;                      // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D1[0x7];                                      // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller;            // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPathFollowingResult                          K2Node_CustomEvent_MovementResult_1;               // 0x01E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E2[0x2];                                      // 0x01E2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x01E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x01F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x01FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult; // 0x0208(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0290(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_IsIdle;                         // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C1[0xF];                                      // 0x02C1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x02D0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0300(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x030C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0318(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_324[0x4];                                      // 0x0324(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAIAsyncTaskBlueprintProxy*             CallFunc_CreateMoveToProxyObject_ReturnValue;      // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x0330(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x03B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x03B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BA[0x2];                                      // 0x03BA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x03BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EPathFollowingResult MovementResult)> K2Node_CreateDelegate_OutputDelegate_7;     // 0x03C8(0x0010)(ZeroConstructor, NoDestructor)
	struct FHE_LookAtLocationSeq                  K2Node_MakeStruct_HE_LookAtLocationSeq;            // 0x03D8(0x0018)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FHE_LookAtLocationSeq>          K2Node_MakeArray_Array;                            // 0x03F0(0x0010)(ReferenceParm)
	struct FHE_LookAtLocation                     K2Node_MakeStruct_HE_LookAtLocation;               // 0x0400(0x0018)(HasGetValueTypeHash)
	uint8                                         Pad_418[0x8];                                      // 0x0418(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_TLerp_ReturnValue;                        // 0x0420(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult;   // 0x0450(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UAIAsyncTaskBlueprintProxy*             CallFunc_CreateMoveToProxyObject_ReturnValue_1;    // 0x04D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_ShouldAttack;                   // 0x04E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x04E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x04E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x04E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPathFollowingResult                          Temp_byte_Variable_1;                              // 0x04E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E5[0x3];                                      // 0x04E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x04E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_2;    // 0x04F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocationAndRotation_SweepHitResult; // 0x0500(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocationAndRotation_ReturnValue; // 0x0588(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPathFollowingResult                          K2Node_CustomEvent_MovementResult_2;               // 0x0589(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_ReturnValue_1;                  // 0x058A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x058B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_58C[0x4];                                      // 0x058C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue; // 0x0590(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0598(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0599(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59A[0x2];                                      // 0x059A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EPathFollowingResult MovementResult)> K2Node_CreateDelegate_OutputDelegate_8;     // 0x059C(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(BP_Moth_C_ExecuteUbergraph_BP_Moth) == 0x000010, "Wrong alignment on BP_Moth_C_ExecuteUbergraph_BP_Moth");
static_assert(sizeof(BP_Moth_C_ExecuteUbergraph_BP_Moth) == 0x0005B0, "Wrong size on BP_Moth_C_ExecuteUbergraph_BP_Moth");
static_assert(offsetof(BP_Moth_C_ExecuteUbergraph_BP_Moth, EntryPoint) == 0x000000, "Member 'BP_Moth_C_ExecuteUbergraph_BP_Moth::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_ExecuteUbergraph_BP_Moth, Temp_byte_Variable) == 0x000004, "Member 'BP_Moth_C_ExecuteUbergraph_BP_Moth::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_ExecuteUbergraph_BP_Moth, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000005, "Member 'BP_Moth_C_ExecuteUbergraph_BP_Moth::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_ExecuteUbergraph_BP_Moth, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_Moth_C_ExecuteUbergraph_BP_Moth::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_ExecuteUbergraph_BP_Moth, K2Node_CustomEvent_NotifyName_4) == 0x000018, "Member 'BP_Moth_C_ExecuteUbergraph_BP_Moth::K2Node_CustomEvent_NotifyName_4' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_ExecuteUbergraph_BP_Moth, K2Node_CustomEvent_NotifyName_3) == 0x000020, "Member 'BP_Moth_C_ExecuteUbergraph_BP_Moth::K2Node_CustomEvent_NotifyName_3' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_ExecuteUbergraph_BP_Moth, K2Node_CreateDelegate_OutputDelegate_1) == 0x000028, "Member 'BP_Moth_C_ExecuteUbergraph_BP_Moth::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_ExecuteUbergraph_BP_Moth, K2Node_CustomEvent_NotifyName_2) == 0x000038, "Member 'BP_Moth_C_ExecuteUbergraph_BP_Moth::K2Node_CustomEvent_NotifyName_2' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_ExecuteUbergraph_BP_Moth, K2Node_CreateDelegate_OutputDelegate_2) == 0x000040, "Member 'BP_Moth_C_ExecuteUbergraph_BP_Moth::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_ExecuteUbergraph_BP_Moth, K2Node_CustomEvent_NotifyName_1) == 0x000050, "Member 'BP_Moth_C_ExecuteUbergraph_BP_Moth::K2Node_CustomEvent_NotifyName_1' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_ExecuteUbergraph_BP_Moth, K2Node_CreateDelegate_OutputDelegate_3) == 0x000058, "Member 'BP_Moth_C_ExecuteUbergraph_BP_Moth::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_ExecuteUbergraph_BP_Moth, K2Node_CustomEvent_NotifyName) == 0x000068, "Member 'BP_Moth_C_ExecuteUbergraph_BP_Moth::K2Node_CustomEvent_NotifyName' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_ExecuteUbergraph_BP_Moth, K2Node_CreateDelegate_OutputDelegate_4) == 0x000070, "Member 'BP_Moth_C_ExecuteUbergraph_BP_Moth::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_ExecuteUbergraph_BP_Moth, Temp_name_Variable) == 0x000080, "Member 'BP_Moth_C_ExecuteUbergraph_BP_Moth::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_ExecuteUbergraph_BP_Moth, K2Node_CustomEvent_MovementResult_3) == 0x000088, "Member 'BP_Moth_C_ExecuteUbergraph_BP_Moth::K2Node_CustomEvent_MovementResult_3' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_ExecuteUbergraph_BP_Moth, Temp_bool_IsClosed_Variable) == 0x000089, "Member 'BP_Moth_C_ExecuteUbergraph_BP_Moth::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_ExecuteUbergraph_BP_Moth, Temp_bool_Has_Been_Initd_Variable) == 0x00008A, "Member 'BP_Moth_C_ExecuteUbergraph_BP_Moth::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_ExecuteUbergraph_BP_Moth, Temp_bool_Has_Been_Initd_Variable_1) == 0x00008B, "Member 'BP_Moth_C_ExecuteUbergraph_BP_Moth::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_ExecuteUbergraph_BP_Moth, K2Node_CreateDelegate_OutputDelegate_5) == 0x00008C, "Member 'BP_Moth_C_ExecuteUbergraph_BP_Moth::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_ExecuteUbergraph_BP_Moth, Temp_bool_IsClosed_Variable_1) == 0x00009C, "Member 'BP_Moth_C_ExecuteUbergraph_BP_Moth::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_ExecuteUbergraph_BP_Moth, Temp_bool_Has_Been_Initd_Variable_2) == 0x00009D, "Member 'BP_Moth_C_ExecuteUbergraph_BP_Moth::Temp_bool_Has_Been_Initd_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_ExecuteUbergraph_BP_Moth, CallFunc_GetAIController_ReturnValue) == 0x0000A0, "Member 'BP_Moth_C_ExecuteUbergraph_BP_Moth::CallFunc_GetAIController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_ExecuteUbergraph_BP_Moth, K2Node_DynamicCast_AsAIC_Moth) == 0x0000A8, "Member 'BP_Moth_C_ExecuteUbergraph_BP_Moth::K2Node_DynamicCast_AsAIC_Moth' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_ExecuteUbergraph_BP_Moth, K2Node_DynamicCast_bSuccess) == 0x0000B0, "Member 'BP_Moth_C_ExecuteUbergraph_BP_Moth::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_ExecuteUbergraph_BP_Moth, CallFunc_IsPlaying_ReturnValue) == 0x0000B1, "Member 'BP_Moth_C_ExecuteUbergraph_BP_Moth::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_ExecuteUbergraph_BP_Moth, K2Node_CustomEvent_Player) == 0x0000B8, "Member 'BP_Moth_C_ExecuteUbergraph_BP_Moth::K2Node_CustomEvent_Player' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_ExecuteUbergraph_BP_Moth, Temp_bool_IsClosed_Variable_2) == 0x0000C0, "Member 'BP_Moth_C_ExecuteUbergraph_BP_Moth::Temp_bool_IsClosed_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_ExecuteUbergraph_BP_Moth, K2Node_CustomEvent_MovementResult) == 0x0000C1, "Member 'BP_Moth_C_ExecuteUbergraph_BP_Moth::K2Node_CustomEvent_MovementResult' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_ExecuteUbergraph_BP_Moth, K2Node_CreateDelegate_OutputDelegate_6) == 0x0000C4, "Member 'BP_Moth_C_ExecuteUbergraph_BP_Moth::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_ExecuteUbergraph_BP_Moth, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0000D4, "Member 'BP_Moth_C_ExecuteUbergraph_BP_Moth::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_ExecuteUbergraph_BP_Moth, CallFunc_SpawnSoundAtLocation_ReturnValue) == 0x0000E0, "Member 'BP_Moth_C_ExecuteUbergraph_BP_Moth::CallFunc_SpawnSoundAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_ExecuteUbergraph_BP_Moth, CallFunc_SpawnSoundAtLocation_ReturnValue_1) == 0x0000E8, "Member 'BP_Moth_C_ExecuteUbergraph_BP_Moth::CallFunc_SpawnSoundAtLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_ExecuteUbergraph_BP_Moth, CallFunc_HasAuthority_ReturnValue) == 0x0000F0, "Member 'BP_Moth_C_ExecuteUbergraph_BP_Moth::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_ExecuteUbergraph_BP_Moth, CallFunc_GetController_ReturnValue) == 0x0000F8, "Member 'BP_Moth_C_ExecuteUbergraph_BP_Moth::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_ExecuteUbergraph_BP_Moth, K2Node_DynamicCast_AsAIC_Moth_1) == 0x000100, "Member 'BP_Moth_C_ExecuteUbergraph_BP_Moth::K2Node_DynamicCast_AsAIC_Moth_1' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_ExecuteUbergraph_BP_Moth, K2Node_DynamicCast_bSuccess_1) == 0x000108, "Member 'BP_Moth_C_ExecuteUbergraph_BP_Moth::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_ExecuteUbergraph_BP_Moth, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000110, "Member 'BP_Moth_C_ExecuteUbergraph_BP_Moth::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_ExecuteUbergraph_BP_Moth, K2Node_ComponentBoundEvent_OtherActor) == 0x000118, "Member 'BP_Moth_C_ExecuteUbergraph_BP_Moth::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_ExecuteUbergraph_BP_Moth, K2Node_ComponentBoundEvent_OtherComp) == 0x000120, "Member 'BP_Moth_C_ExecuteUbergraph_BP_Moth::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_ExecuteUbergraph_BP_Moth, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000128, "Member 'BP_Moth_C_ExecuteUbergraph_BP_Moth::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_ExecuteUbergraph_BP_Moth, K2Node_ComponentBoundEvent_bFromSweep) == 0x00012C, "Member 'BP_Moth_C_ExecuteUbergraph_BP_Moth::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_ExecuteUbergraph_BP_Moth, K2Node_ComponentBoundEvent_SweepResult) == 0x000130, "Member 'BP_Moth_C_ExecuteUbergraph_BP_Moth::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_ExecuteUbergraph_BP_Moth, K2Node_DynamicCast_AsBPCharacter_Demo) == 0x0001B8, "Member 'BP_Moth_C_ExecuteUbergraph_BP_Moth::K2Node_DynamicCast_AsBPCharacter_Demo' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_ExecuteUbergraph_BP_Moth, K2Node_DynamicCast_bSuccess_2) == 0x0001C0, "Member 'BP_Moth_C_ExecuteUbergraph_BP_Moth::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_ExecuteUbergraph_BP_Moth, CallFunc_GetController_ReturnValue_1) == 0x0001C8, "Member 'BP_Moth_C_ExecuteUbergraph_BP_Moth::CallFunc_GetController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_ExecuteUbergraph_BP_Moth, CallFunc_CanSeePlayer_CanSee) == 0x0001D0, "Member 'BP_Moth_C_ExecuteUbergraph_BP_Moth::CallFunc_CanSeePlayer_CanSee' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_ExecuteUbergraph_BP_Moth, K2Node_DynamicCast_AsPlayer_Controller) == 0x0001D8, "Member 'BP_Moth_C_ExecuteUbergraph_BP_Moth::K2Node_DynamicCast_AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_ExecuteUbergraph_BP_Moth, K2Node_DynamicCast_bSuccess_3) == 0x0001E0, "Member 'BP_Moth_C_ExecuteUbergraph_BP_Moth::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_ExecuteUbergraph_BP_Moth, K2Node_CustomEvent_MovementResult_1) == 0x0001E1, "Member 'BP_Moth_C_ExecuteUbergraph_BP_Moth::K2Node_CustomEvent_MovementResult_1' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_ExecuteUbergraph_BP_Moth, CallFunc_BreakTransform_Location) == 0x0001E4, "Member 'BP_Moth_C_ExecuteUbergraph_BP_Moth::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_ExecuteUbergraph_BP_Moth, CallFunc_BreakTransform_Rotation) == 0x0001F0, "Member 'BP_Moth_C_ExecuteUbergraph_BP_Moth::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_ExecuteUbergraph_BP_Moth, CallFunc_BreakTransform_Scale) == 0x0001FC, "Member 'BP_Moth_C_ExecuteUbergraph_BP_Moth::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_ExecuteUbergraph_BP_Moth, CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult) == 0x000208, "Member 'BP_Moth_C_ExecuteUbergraph_BP_Moth::CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_ExecuteUbergraph_BP_Moth, CallFunc_GetTransform_ReturnValue) == 0x000290, "Member 'BP_Moth_C_ExecuteUbergraph_BP_Moth::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_ExecuteUbergraph_BP_Moth, K2Node_CustomEvent_IsIdle) == 0x0002C0, "Member 'BP_Moth_C_ExecuteUbergraph_BP_Moth::K2Node_CustomEvent_IsIdle' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_ExecuteUbergraph_BP_Moth, CallFunc_MakeTransform_ReturnValue) == 0x0002D0, "Member 'BP_Moth_C_ExecuteUbergraph_BP_Moth::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_ExecuteUbergraph_BP_Moth, CallFunc_BreakTransform_Location_1) == 0x000300, "Member 'BP_Moth_C_ExecuteUbergraph_BP_Moth::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_ExecuteUbergraph_BP_Moth, CallFunc_BreakTransform_Rotation_1) == 0x00030C, "Member 'BP_Moth_C_ExecuteUbergraph_BP_Moth::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_ExecuteUbergraph_BP_Moth, CallFunc_BreakTransform_Scale_1) == 0x000318, "Member 'BP_Moth_C_ExecuteUbergraph_BP_Moth::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_ExecuteUbergraph_BP_Moth, CallFunc_CreateMoveToProxyObject_ReturnValue) == 0x000328, "Member 'BP_Moth_C_ExecuteUbergraph_BP_Moth::CallFunc_CreateMoveToProxyObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_ExecuteUbergraph_BP_Moth, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x000330, "Member 'BP_Moth_C_ExecuteUbergraph_BP_Moth::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_ExecuteUbergraph_BP_Moth, CallFunc_K2_SetActorTransform_ReturnValue) == 0x0003B8, "Member 'BP_Moth_C_ExecuteUbergraph_BP_Moth::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_ExecuteUbergraph_BP_Moth, CallFunc_IsValid_ReturnValue) == 0x0003B9, "Member 'BP_Moth_C_ExecuteUbergraph_BP_Moth::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_ExecuteUbergraph_BP_Moth, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x0003BC, "Member 'BP_Moth_C_ExecuteUbergraph_BP_Moth::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_ExecuteUbergraph_BP_Moth, K2Node_CreateDelegate_OutputDelegate_7) == 0x0003C8, "Member 'BP_Moth_C_ExecuteUbergraph_BP_Moth::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_ExecuteUbergraph_BP_Moth, K2Node_MakeStruct_HE_LookAtLocationSeq) == 0x0003D8, "Member 'BP_Moth_C_ExecuteUbergraph_BP_Moth::K2Node_MakeStruct_HE_LookAtLocationSeq' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_ExecuteUbergraph_BP_Moth, K2Node_MakeArray_Array) == 0x0003F0, "Member 'BP_Moth_C_ExecuteUbergraph_BP_Moth::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_ExecuteUbergraph_BP_Moth, K2Node_MakeStruct_HE_LookAtLocation) == 0x000400, "Member 'BP_Moth_C_ExecuteUbergraph_BP_Moth::K2Node_MakeStruct_HE_LookAtLocation' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_ExecuteUbergraph_BP_Moth, CallFunc_TLerp_ReturnValue) == 0x000420, "Member 'BP_Moth_C_ExecuteUbergraph_BP_Moth::CallFunc_TLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_ExecuteUbergraph_BP_Moth, CallFunc_K2_SetRelativeTransform_SweepHitResult) == 0x000450, "Member 'BP_Moth_C_ExecuteUbergraph_BP_Moth::CallFunc_K2_SetRelativeTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_ExecuteUbergraph_BP_Moth, CallFunc_CreateMoveToProxyObject_ReturnValue_1) == 0x0004D8, "Member 'BP_Moth_C_ExecuteUbergraph_BP_Moth::CallFunc_CreateMoveToProxyObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_ExecuteUbergraph_BP_Moth, K2Node_CustomEvent_ShouldAttack) == 0x0004E0, "Member 'BP_Moth_C_ExecuteUbergraph_BP_Moth::K2Node_CustomEvent_ShouldAttack' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_ExecuteUbergraph_BP_Moth, CallFunc_IsValid_ReturnValue_1) == 0x0004E1, "Member 'BP_Moth_C_ExecuteUbergraph_BP_Moth::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_ExecuteUbergraph_BP_Moth, CallFunc_IsValid_ReturnValue_2) == 0x0004E2, "Member 'BP_Moth_C_ExecuteUbergraph_BP_Moth::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_ExecuteUbergraph_BP_Moth, CallFunc_IsValid_ReturnValue_3) == 0x0004E3, "Member 'BP_Moth_C_ExecuteUbergraph_BP_Moth::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_ExecuteUbergraph_BP_Moth, Temp_byte_Variable_1) == 0x0004E4, "Member 'BP_Moth_C_ExecuteUbergraph_BP_Moth::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_ExecuteUbergraph_BP_Moth, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x0004E8, "Member 'BP_Moth_C_ExecuteUbergraph_BP_Moth::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_ExecuteUbergraph_BP_Moth, CallFunc_K2_GetComponentLocation_ReturnValue_2) == 0x0004F4, "Member 'BP_Moth_C_ExecuteUbergraph_BP_Moth::CallFunc_K2_GetComponentLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_ExecuteUbergraph_BP_Moth, CallFunc_K2_SetActorLocationAndRotation_SweepHitResult) == 0x000500, "Member 'BP_Moth_C_ExecuteUbergraph_BP_Moth::CallFunc_K2_SetActorLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_ExecuteUbergraph_BP_Moth, CallFunc_K2_SetActorLocationAndRotation_ReturnValue) == 0x000588, "Member 'BP_Moth_C_ExecuteUbergraph_BP_Moth::CallFunc_K2_SetActorLocationAndRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_ExecuteUbergraph_BP_Moth, K2Node_CustomEvent_MovementResult_2) == 0x000589, "Member 'BP_Moth_C_ExecuteUbergraph_BP_Moth::K2Node_CustomEvent_MovementResult_2' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_ExecuteUbergraph_BP_Moth, CallFunc_IsPlaying_ReturnValue_1) == 0x00058A, "Member 'BP_Moth_C_ExecuteUbergraph_BP_Moth::CallFunc_IsPlaying_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_ExecuteUbergraph_BP_Moth, CallFunc_HasAuthority_ReturnValue_1) == 0x00058B, "Member 'BP_Moth_C_ExecuteUbergraph_BP_Moth::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_ExecuteUbergraph_BP_Moth, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue) == 0x000590, "Member 'BP_Moth_C_ExecuteUbergraph_BP_Moth::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_ExecuteUbergraph_BP_Moth, CallFunc_IsValid_ReturnValue_4) == 0x000598, "Member 'BP_Moth_C_ExecuteUbergraph_BP_Moth::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_ExecuteUbergraph_BP_Moth, CallFunc_IsValid_ReturnValue_5) == 0x000599, "Member 'BP_Moth_C_ExecuteUbergraph_BP_Moth::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_ExecuteUbergraph_BP_Moth, K2Node_CreateDelegate_OutputDelegate_8) == 0x00059C, "Member 'BP_Moth_C_ExecuteUbergraph_BP_Moth::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");

// Function BP_Moth.BP_Moth_C.DropPlayer
// 0x0001 (0x0001 - 0x0000)
struct BP_Moth_C_DropPlayer final
{
public:
	bool                                          ShouldAttack;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Moth_C_DropPlayer) == 0x000001, "Wrong alignment on BP_Moth_C_DropPlayer");
static_assert(sizeof(BP_Moth_C_DropPlayer) == 0x000001, "Wrong size on BP_Moth_C_DropPlayer");
static_assert(offsetof(BP_Moth_C_DropPlayer, ShouldAttack) == 0x000000, "Member 'BP_Moth_C_DropPlayer::ShouldAttack' has a wrong offset!");

// Function BP_Moth.BP_Moth_C.ToggleIdle
// 0x0001 (0x0001 - 0x0000)
struct BP_Moth_C_ToggleIdle final
{
public:
	bool                                          IsIdle_0;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Moth_C_ToggleIdle) == 0x000001, "Wrong alignment on BP_Moth_C_ToggleIdle");
static_assert(sizeof(BP_Moth_C_ToggleIdle) == 0x000001, "Wrong size on BP_Moth_C_ToggleIdle");
static_assert(offsetof(BP_Moth_C_ToggleIdle, IsIdle_0) == 0x000000, "Member 'BP_Moth_C_ToggleIdle::IsIdle_0' has a wrong offset!");

// Function BP_Moth.BP_Moth_C.BndEvt__BP_Hound_KillPlayer_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct BP_Moth_C_BndEvt__BP_Hound_KillPlayer_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_Moth_C_BndEvt__BP_Hound_KillPlayer_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_Moth_C_BndEvt__BP_Hound_KillPlayer_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_Moth_C_BndEvt__BP_Hound_KillPlayer_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on BP_Moth_C_BndEvt__BP_Hound_KillPlayer_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_Moth_C_BndEvt__BP_Hound_KillPlayer_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_Moth_C_BndEvt__BP_Hound_KillPlayer_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_BndEvt__BP_Hound_KillPlayer_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_Moth_C_BndEvt__BP_Hound_KillPlayer_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_BndEvt__BP_Hound_KillPlayer_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_Moth_C_BndEvt__BP_Hound_KillPlayer_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_BndEvt__BP_Hound_KillPlayer_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_Moth_C_BndEvt__BP_Hound_KillPlayer_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_BndEvt__BP_Hound_KillPlayer_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_Moth_C_BndEvt__BP_Hound_KillPlayer_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_BndEvt__BP_Hound_KillPlayer_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_Moth_C_BndEvt__BP_Hound_KillPlayer_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_Moth.BP_Moth_C.AttackPlayer
// 0x0008 (0x0008 - 0x0000)
struct BP_Moth_C_AttackPlayer final
{
public:
	class ABPCharacter_Demo_C*                    Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Moth_C_AttackPlayer) == 0x000008, "Wrong alignment on BP_Moth_C_AttackPlayer");
static_assert(sizeof(BP_Moth_C_AttackPlayer) == 0x000008, "Wrong size on BP_Moth_C_AttackPlayer");
static_assert(offsetof(BP_Moth_C_AttackPlayer, Player) == 0x000000, "Member 'BP_Moth_C_AttackPlayer::Player' has a wrong offset!");

// Function BP_Moth.BP_Moth_C.OnCompleted_826A0D8B4B2AF71A79AA649436631992
// 0x0008 (0x0008 - 0x0000)
struct BP_Moth_C_OnCompleted_826A0D8B4B2AF71A79AA649436631992 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Moth_C_OnCompleted_826A0D8B4B2AF71A79AA649436631992) == 0x000004, "Wrong alignment on BP_Moth_C_OnCompleted_826A0D8B4B2AF71A79AA649436631992");
static_assert(sizeof(BP_Moth_C_OnCompleted_826A0D8B4B2AF71A79AA649436631992) == 0x000008, "Wrong size on BP_Moth_C_OnCompleted_826A0D8B4B2AF71A79AA649436631992");
static_assert(offsetof(BP_Moth_C_OnCompleted_826A0D8B4B2AF71A79AA649436631992, NotifyName) == 0x000000, "Member 'BP_Moth_C_OnCompleted_826A0D8B4B2AF71A79AA649436631992::NotifyName' has a wrong offset!");

// Function BP_Moth.BP_Moth_C.OnBlendOut_826A0D8B4B2AF71A79AA649436631992
// 0x0008 (0x0008 - 0x0000)
struct BP_Moth_C_OnBlendOut_826A0D8B4B2AF71A79AA649436631992 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Moth_C_OnBlendOut_826A0D8B4B2AF71A79AA649436631992) == 0x000004, "Wrong alignment on BP_Moth_C_OnBlendOut_826A0D8B4B2AF71A79AA649436631992");
static_assert(sizeof(BP_Moth_C_OnBlendOut_826A0D8B4B2AF71A79AA649436631992) == 0x000008, "Wrong size on BP_Moth_C_OnBlendOut_826A0D8B4B2AF71A79AA649436631992");
static_assert(offsetof(BP_Moth_C_OnBlendOut_826A0D8B4B2AF71A79AA649436631992, NotifyName) == 0x000000, "Member 'BP_Moth_C_OnBlendOut_826A0D8B4B2AF71A79AA649436631992::NotifyName' has a wrong offset!");

// Function BP_Moth.BP_Moth_C.OnInterrupted_826A0D8B4B2AF71A79AA649436631992
// 0x0008 (0x0008 - 0x0000)
struct BP_Moth_C_OnInterrupted_826A0D8B4B2AF71A79AA649436631992 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Moth_C_OnInterrupted_826A0D8B4B2AF71A79AA649436631992) == 0x000004, "Wrong alignment on BP_Moth_C_OnInterrupted_826A0D8B4B2AF71A79AA649436631992");
static_assert(sizeof(BP_Moth_C_OnInterrupted_826A0D8B4B2AF71A79AA649436631992) == 0x000008, "Wrong size on BP_Moth_C_OnInterrupted_826A0D8B4B2AF71A79AA649436631992");
static_assert(offsetof(BP_Moth_C_OnInterrupted_826A0D8B4B2AF71A79AA649436631992, NotifyName) == 0x000000, "Member 'BP_Moth_C_OnInterrupted_826A0D8B4B2AF71A79AA649436631992::NotifyName' has a wrong offset!");

// Function BP_Moth.BP_Moth_C.OnNotifyBegin_826A0D8B4B2AF71A79AA649436631992
// 0x0008 (0x0008 - 0x0000)
struct BP_Moth_C_OnNotifyBegin_826A0D8B4B2AF71A79AA649436631992 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Moth_C_OnNotifyBegin_826A0D8B4B2AF71A79AA649436631992) == 0x000004, "Wrong alignment on BP_Moth_C_OnNotifyBegin_826A0D8B4B2AF71A79AA649436631992");
static_assert(sizeof(BP_Moth_C_OnNotifyBegin_826A0D8B4B2AF71A79AA649436631992) == 0x000008, "Wrong size on BP_Moth_C_OnNotifyBegin_826A0D8B4B2AF71A79AA649436631992");
static_assert(offsetof(BP_Moth_C_OnNotifyBegin_826A0D8B4B2AF71A79AA649436631992, NotifyName) == 0x000000, "Member 'BP_Moth_C_OnNotifyBegin_826A0D8B4B2AF71A79AA649436631992::NotifyName' has a wrong offset!");

// Function BP_Moth.BP_Moth_C.OnNotifyEnd_826A0D8B4B2AF71A79AA649436631992
// 0x0008 (0x0008 - 0x0000)
struct BP_Moth_C_OnNotifyEnd_826A0D8B4B2AF71A79AA649436631992 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Moth_C_OnNotifyEnd_826A0D8B4B2AF71A79AA649436631992) == 0x000004, "Wrong alignment on BP_Moth_C_OnNotifyEnd_826A0D8B4B2AF71A79AA649436631992");
static_assert(sizeof(BP_Moth_C_OnNotifyEnd_826A0D8B4B2AF71A79AA649436631992) == 0x000008, "Wrong size on BP_Moth_C_OnNotifyEnd_826A0D8B4B2AF71A79AA649436631992");
static_assert(offsetof(BP_Moth_C_OnNotifyEnd_826A0D8B4B2AF71A79AA649436631992, NotifyName) == 0x000000, "Member 'BP_Moth_C_OnNotifyEnd_826A0D8B4B2AF71A79AA649436631992::NotifyName' has a wrong offset!");

// Function BP_Moth.BP_Moth_C.OnSuccess_80D0F13747A7105F75433DB2011DDF34
// 0x0001 (0x0001 - 0x0000)
struct BP_Moth_C_OnSuccess_80D0F13747A7105F75433DB2011DDF34 final
{
public:
	EPathFollowingResult                          MovementResult;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Moth_C_OnSuccess_80D0F13747A7105F75433DB2011DDF34) == 0x000001, "Wrong alignment on BP_Moth_C_OnSuccess_80D0F13747A7105F75433DB2011DDF34");
static_assert(sizeof(BP_Moth_C_OnSuccess_80D0F13747A7105F75433DB2011DDF34) == 0x000001, "Wrong size on BP_Moth_C_OnSuccess_80D0F13747A7105F75433DB2011DDF34");
static_assert(offsetof(BP_Moth_C_OnSuccess_80D0F13747A7105F75433DB2011DDF34, MovementResult) == 0x000000, "Member 'BP_Moth_C_OnSuccess_80D0F13747A7105F75433DB2011DDF34::MovementResult' has a wrong offset!");

// Function BP_Moth.BP_Moth_C.OnFail_80D0F13747A7105F75433DB2011DDF34
// 0x0001 (0x0001 - 0x0000)
struct BP_Moth_C_OnFail_80D0F13747A7105F75433DB2011DDF34 final
{
public:
	EPathFollowingResult                          MovementResult;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Moth_C_OnFail_80D0F13747A7105F75433DB2011DDF34) == 0x000001, "Wrong alignment on BP_Moth_C_OnFail_80D0F13747A7105F75433DB2011DDF34");
static_assert(sizeof(BP_Moth_C_OnFail_80D0F13747A7105F75433DB2011DDF34) == 0x000001, "Wrong size on BP_Moth_C_OnFail_80D0F13747A7105F75433DB2011DDF34");
static_assert(offsetof(BP_Moth_C_OnFail_80D0F13747A7105F75433DB2011DDF34, MovementResult) == 0x000000, "Member 'BP_Moth_C_OnFail_80D0F13747A7105F75433DB2011DDF34::MovementResult' has a wrong offset!");

// Function BP_Moth.BP_Moth_C.OnSuccess_01FE13E14A76136BD0F89EBBB3E97A95
// 0x0001 (0x0001 - 0x0000)
struct BP_Moth_C_OnSuccess_01FE13E14A76136BD0F89EBBB3E97A95 final
{
public:
	EPathFollowingResult                          MovementResult;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Moth_C_OnSuccess_01FE13E14A76136BD0F89EBBB3E97A95) == 0x000001, "Wrong alignment on BP_Moth_C_OnSuccess_01FE13E14A76136BD0F89EBBB3E97A95");
static_assert(sizeof(BP_Moth_C_OnSuccess_01FE13E14A76136BD0F89EBBB3E97A95) == 0x000001, "Wrong size on BP_Moth_C_OnSuccess_01FE13E14A76136BD0F89EBBB3E97A95");
static_assert(offsetof(BP_Moth_C_OnSuccess_01FE13E14A76136BD0F89EBBB3E97A95, MovementResult) == 0x000000, "Member 'BP_Moth_C_OnSuccess_01FE13E14A76136BD0F89EBBB3E97A95::MovementResult' has a wrong offset!");

// Function BP_Moth.BP_Moth_C.OnFail_01FE13E14A76136BD0F89EBBB3E97A95
// 0x0001 (0x0001 - 0x0000)
struct BP_Moth_C_OnFail_01FE13E14A76136BD0F89EBBB3E97A95 final
{
public:
	EPathFollowingResult                          MovementResult;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Moth_C_OnFail_01FE13E14A76136BD0F89EBBB3E97A95) == 0x000001, "Wrong alignment on BP_Moth_C_OnFail_01FE13E14A76136BD0F89EBBB3E97A95");
static_assert(sizeof(BP_Moth_C_OnFail_01FE13E14A76136BD0F89EBBB3E97A95) == 0x000001, "Wrong size on BP_Moth_C_OnFail_01FE13E14A76136BD0F89EBBB3E97A95");
static_assert(offsetof(BP_Moth_C_OnFail_01FE13E14A76136BD0F89EBBB3E97A95, MovementResult) == 0x000000, "Member 'BP_Moth_C_OnFail_01FE13E14A76136BD0F89EBBB3E97A95::MovementResult' has a wrong offset!");

// Function BP_Moth.BP_Moth_C.LookAtEntity
// 0x0048 (0x0048 - 0x0000)
struct BP_Moth_C_LookAtEntity final
{
public:
	class ABPCharacter_Demo_C*                    Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Moth_C_LookAtEntity) == 0x000008, "Wrong alignment on BP_Moth_C_LookAtEntity");
static_assert(sizeof(BP_Moth_C_LookAtEntity) == 0x000048, "Wrong size on BP_Moth_C_LookAtEntity");
static_assert(offsetof(BP_Moth_C_LookAtEntity, Target) == 0x000000, "Member 'BP_Moth_C_LookAtEntity::Target' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_LookAtEntity, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000008, "Member 'BP_Moth_C_LookAtEntity::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_LookAtEntity, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000014, "Member 'BP_Moth_C_LookAtEntity::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_LookAtEntity, CallFunc_FindLookAtRotation_ReturnValue) == 0x000020, "Member 'BP_Moth_C_LookAtEntity::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_LookAtEntity, CallFunc_BreakRotator_Roll) == 0x00002C, "Member 'BP_Moth_C_LookAtEntity::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_LookAtEntity, CallFunc_BreakRotator_Pitch) == 0x000030, "Member 'BP_Moth_C_LookAtEntity::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_LookAtEntity, CallFunc_BreakRotator_Yaw) == 0x000034, "Member 'BP_Moth_C_LookAtEntity::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_LookAtEntity, CallFunc_MakeRotator_ReturnValue) == 0x000038, "Member 'BP_Moth_C_LookAtEntity::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_LookAtEntity, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000044, "Member 'BP_Moth_C_LookAtEntity::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");

// Function BP_Moth.BP_Moth_C.LookAtTarget
// 0x0048 (0x0048 - 0x0000)
struct BP_Moth_C_LookAtTarget final
{
public:
	class ABPCharacter_Demo_C*                    Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Moth_C_LookAtTarget) == 0x000008, "Wrong alignment on BP_Moth_C_LookAtTarget");
static_assert(sizeof(BP_Moth_C_LookAtTarget) == 0x000048, "Wrong size on BP_Moth_C_LookAtTarget");
static_assert(offsetof(BP_Moth_C_LookAtTarget, Target) == 0x000000, "Member 'BP_Moth_C_LookAtTarget::Target' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_LookAtTarget, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000008, "Member 'BP_Moth_C_LookAtTarget::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_LookAtTarget, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000014, "Member 'BP_Moth_C_LookAtTarget::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_LookAtTarget, CallFunc_FindLookAtRotation_ReturnValue) == 0x000020, "Member 'BP_Moth_C_LookAtTarget::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_LookAtTarget, CallFunc_BreakRotator_Roll) == 0x00002C, "Member 'BP_Moth_C_LookAtTarget::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_LookAtTarget, CallFunc_BreakRotator_Pitch) == 0x000030, "Member 'BP_Moth_C_LookAtTarget::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_LookAtTarget, CallFunc_BreakRotator_Yaw) == 0x000034, "Member 'BP_Moth_C_LookAtTarget::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_LookAtTarget, CallFunc_MakeRotator_ReturnValue) == 0x000038, "Member 'BP_Moth_C_LookAtTarget::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_LookAtTarget, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000044, "Member 'BP_Moth_C_LookAtTarget::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");

// Function BP_Moth.BP_Moth_C.CanSeePlayer
// 0x0158 (0x0158 - 0x0000)
struct BP_Moth_C_CanSeePlayer final
{
public:
	class ABPCharacter_Demo_C*                    Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanSee;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABPCharacter_Demo_C*>            CallFunc_GetAllActorsOfClass_OutActors;            // 0x0028(0x0010)(ReferenceParm)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0038(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C3[0x1];                                       // 0x00C3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0110(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x012C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0138(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_145[0x3];                                      // 0x0145(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0148(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Moth_C_CanSeePlayer) == 0x000008, "Wrong alignment on BP_Moth_C_CanSeePlayer");
static_assert(sizeof(BP_Moth_C_CanSeePlayer) == 0x000158, "Wrong size on BP_Moth_C_CanSeePlayer");
static_assert(offsetof(BP_Moth_C_CanSeePlayer, Target) == 0x000000, "Member 'BP_Moth_C_CanSeePlayer::Target' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_CanSeePlayer, CanSee) == 0x000008, "Member 'BP_Moth_C_CanSeePlayer::CanSee' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_CanSeePlayer, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'BP_Moth_C_CanSeePlayer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_CanSeePlayer, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00000C, "Member 'BP_Moth_C_CanSeePlayer::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_CanSeePlayer, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000018, "Member 'BP_Moth_C_CanSeePlayer::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_CanSeePlayer, CallFunc_GetAllActorsOfClass_OutActors) == 0x000028, "Member 'BP_Moth_C_CanSeePlayer::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_CanSeePlayer, CallFunc_LineTraceSingle_OutHit) == 0x000038, "Member 'BP_Moth_C_CanSeePlayer::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_CanSeePlayer, CallFunc_LineTraceSingle_ReturnValue) == 0x0000C0, "Member 'BP_Moth_C_CanSeePlayer::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_CanSeePlayer, CallFunc_BreakHitResult_bBlockingHit) == 0x0000C1, "Member 'BP_Moth_C_CanSeePlayer::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_CanSeePlayer, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000C2, "Member 'BP_Moth_C_CanSeePlayer::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_CanSeePlayer, CallFunc_BreakHitResult_Time) == 0x0000C4, "Member 'BP_Moth_C_CanSeePlayer::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_CanSeePlayer, CallFunc_BreakHitResult_Distance) == 0x0000C8, "Member 'BP_Moth_C_CanSeePlayer::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_CanSeePlayer, CallFunc_BreakHitResult_Location) == 0x0000CC, "Member 'BP_Moth_C_CanSeePlayer::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_CanSeePlayer, CallFunc_BreakHitResult_ImpactPoint) == 0x0000D8, "Member 'BP_Moth_C_CanSeePlayer::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_CanSeePlayer, CallFunc_BreakHitResult_Normal) == 0x0000E4, "Member 'BP_Moth_C_CanSeePlayer::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_CanSeePlayer, CallFunc_BreakHitResult_ImpactNormal) == 0x0000F0, "Member 'BP_Moth_C_CanSeePlayer::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_CanSeePlayer, CallFunc_BreakHitResult_PhysMat) == 0x000100, "Member 'BP_Moth_C_CanSeePlayer::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_CanSeePlayer, CallFunc_BreakHitResult_HitActor) == 0x000108, "Member 'BP_Moth_C_CanSeePlayer::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_CanSeePlayer, CallFunc_BreakHitResult_HitComponent) == 0x000110, "Member 'BP_Moth_C_CanSeePlayer::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_CanSeePlayer, CallFunc_BreakHitResult_HitBoneName) == 0x000118, "Member 'BP_Moth_C_CanSeePlayer::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_CanSeePlayer, CallFunc_BreakHitResult_HitItem) == 0x000120, "Member 'BP_Moth_C_CanSeePlayer::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_CanSeePlayer, CallFunc_BreakHitResult_ElementIndex) == 0x000124, "Member 'BP_Moth_C_CanSeePlayer::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_CanSeePlayer, CallFunc_BreakHitResult_FaceIndex) == 0x000128, "Member 'BP_Moth_C_CanSeePlayer::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_CanSeePlayer, CallFunc_BreakHitResult_TraceStart) == 0x00012C, "Member 'BP_Moth_C_CanSeePlayer::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_CanSeePlayer, CallFunc_BreakHitResult_TraceEnd) == 0x000138, "Member 'BP_Moth_C_CanSeePlayer::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_CanSeePlayer, CallFunc_Not_PreBool_ReturnValue) == 0x000144, "Member 'BP_Moth_C_CanSeePlayer::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Moth_C_CanSeePlayer, CallFunc_GetDisplayName_ReturnValue) == 0x000148, "Member 'BP_Moth_C_CanSeePlayer::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");

}

