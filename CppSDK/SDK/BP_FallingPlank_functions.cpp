#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FallingPlank

#include "Basic.hpp"

#include "BP_FallingPlank_classes.hpp"
#include "BP_FallingPlank_parameters.hpp"


namespace SDK
{

// Function BP_FallingPlank.BP_FallingPlank_C.ExecuteUbergraph_BP_FallingPlank
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FallingPlank_C::ExecuteUbergraph_BP_FallingPlank(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FallingPlank_C", "ExecuteUbergraph_BP_FallingPlank");

	Params::BP_FallingPlank_C_ExecuteUbergraph_BP_FallingPlank Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FallingPlank.BP_FallingPlank_C.MC_ImpactSound
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FallingPlank_C::MC_ImpactSound(const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FallingPlank_C", "MC_ImpactSound");

	Params::BP_FallingPlank_C_MC_ImpactSound Parms{};

	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FallingPlank.BP_FallingPlank_C.BndEvt__BP_FallingPlank_PlankMesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              HitComponent                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   NormalImpulse                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FHitResult&                Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_FallingPlank_C::BndEvt__BP_FallingPlank_PlankMesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FallingPlank_C", "BndEvt__BP_FallingPlank_PlankMesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature");

	Params::BP_FallingPlank_C_BndEvt__BP_FallingPlank_PlankMesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature Parms{};

	Parms.HitComponent = HitComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.NormalImpulse = std::move(NormalImpulse);
	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FallingPlank.BP_FallingPlank_C.ResetPhysics
// (BlueprintCallable, BlueprintEvent)

void ABP_FallingPlank_C::ResetPhysics()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FallingPlank_C", "ResetPhysics");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FallingPlank.BP_FallingPlank_C.StopPhysics
// (BlueprintCallable, BlueprintEvent)

void ABP_FallingPlank_C::StopPhysics()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FallingPlank_C", "StopPhysics");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FallingPlank.BP_FallingPlank_C.PlankFall
// (BlueprintCallable, BlueprintEvent)

void ABP_FallingPlank_C::PlankFall()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FallingPlank_C", "PlankFall");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FallingPlank.BP_FallingPlank_C.OnRep_DidFall
// (BlueprintCallable, BlueprintEvent)

void ABP_FallingPlank_C::OnRep_DidFall()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FallingPlank_C", "OnRep_DidFall");

	UObject::ProcessEvent(Func, nullptr);
}

}

