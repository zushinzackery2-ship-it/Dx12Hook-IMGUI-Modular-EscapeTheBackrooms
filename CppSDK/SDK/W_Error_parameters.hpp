#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Error

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "E_Comfirmation_structs.hpp"
#include "InputCore_structs.hpp"


namespace SDK::Params
{

// Function W_Error.W_Error_C.ExecuteUbergraph_W_Error
// 0x0078 (0x0078 - 0x0000)
struct W_Error_C_ExecuteUbergraph_W_Error final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Event_Title;                                // 0x0008(0x0018)()
	class FText                                   K2Node_Event_Message;                              // 0x0020(0x0018)()
	E_Comfirmation                                K2Node_Event_ConfirmationFor;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsEnabled;                            // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsHovered;                            // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B[0x5];                                       // 0x003B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Event_Error;                                // 0x0048(0x0018)()
	TScriptInterface<class IBPI_UserInterface_C>  K2Node_DynamicCast_AsBPI_User_Interface;           // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsFocused;                            // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Error_C_ExecuteUbergraph_W_Error) == 0x000008, "Wrong alignment on W_Error_C_ExecuteUbergraph_W_Error");
static_assert(sizeof(W_Error_C_ExecuteUbergraph_W_Error) == 0x000078, "Wrong size on W_Error_C_ExecuteUbergraph_W_Error");
static_assert(offsetof(W_Error_C_ExecuteUbergraph_W_Error, EntryPoint) == 0x000000, "Member 'W_Error_C_ExecuteUbergraph_W_Error::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_Error_C_ExecuteUbergraph_W_Error, K2Node_Event_Title) == 0x000008, "Member 'W_Error_C_ExecuteUbergraph_W_Error::K2Node_Event_Title' has a wrong offset!");
static_assert(offsetof(W_Error_C_ExecuteUbergraph_W_Error, K2Node_Event_Message) == 0x000020, "Member 'W_Error_C_ExecuteUbergraph_W_Error::K2Node_Event_Message' has a wrong offset!");
static_assert(offsetof(W_Error_C_ExecuteUbergraph_W_Error, K2Node_Event_ConfirmationFor) == 0x000038, "Member 'W_Error_C_ExecuteUbergraph_W_Error::K2Node_Event_ConfirmationFor' has a wrong offset!");
static_assert(offsetof(W_Error_C_ExecuteUbergraph_W_Error, K2Node_Event_IsEnabled) == 0x000039, "Member 'W_Error_C_ExecuteUbergraph_W_Error::K2Node_Event_IsEnabled' has a wrong offset!");
static_assert(offsetof(W_Error_C_ExecuteUbergraph_W_Error, K2Node_Event_IsHovered) == 0x00003A, "Member 'W_Error_C_ExecuteUbergraph_W_Error::K2Node_Event_IsHovered' has a wrong offset!");
static_assert(offsetof(W_Error_C_ExecuteUbergraph_W_Error, CallFunc_GetOwningPlayer_ReturnValue) == 0x000040, "Member 'W_Error_C_ExecuteUbergraph_W_Error::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Error_C_ExecuteUbergraph_W_Error, K2Node_Event_Error) == 0x000048, "Member 'W_Error_C_ExecuteUbergraph_W_Error::K2Node_Event_Error' has a wrong offset!");
static_assert(offsetof(W_Error_C_ExecuteUbergraph_W_Error, K2Node_DynamicCast_AsBPI_User_Interface) == 0x000060, "Member 'W_Error_C_ExecuteUbergraph_W_Error::K2Node_DynamicCast_AsBPI_User_Interface' has a wrong offset!");
static_assert(offsetof(W_Error_C_ExecuteUbergraph_W_Error, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'W_Error_C_ExecuteUbergraph_W_Error::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_Error_C_ExecuteUbergraph_W_Error, K2Node_Event_IsFocused) == 0x000071, "Member 'W_Error_C_ExecuteUbergraph_W_Error::K2Node_Event_IsFocused' has a wrong offset!");

// Function W_Error.W_Error_C.ToggleFocus
// 0x0001 (0x0001 - 0x0000)
struct W_Error_C_ToggleFocus final
{
public:
	bool                                          IsFocused;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Error_C_ToggleFocus) == 0x000001, "Wrong alignment on W_Error_C_ToggleFocus");
static_assert(sizeof(W_Error_C_ToggleFocus) == 0x000001, "Wrong size on W_Error_C_ToggleFocus");
static_assert(offsetof(W_Error_C_ToggleFocus, IsFocused) == 0x000000, "Member 'W_Error_C_ToggleFocus::IsFocused' has a wrong offset!");

// Function W_Error.W_Error_C.ShowError
// 0x0018 (0x0018 - 0x0000)
struct W_Error_C_ShowError final
{
public:
	class FText                                   Error;                                             // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(W_Error_C_ShowError) == 0x000008, "Wrong alignment on W_Error_C_ShowError");
static_assert(sizeof(W_Error_C_ShowError) == 0x000018, "Wrong size on W_Error_C_ShowError");
static_assert(offsetof(W_Error_C_ShowError, Error) == 0x000000, "Member 'W_Error_C_ShowError::Error' has a wrong offset!");

// Function W_Error.W_Error_C.ToggleHover
// 0x0001 (0x0001 - 0x0000)
struct W_Error_C_ToggleHover final
{
public:
	bool                                          IsHovered_0;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Error_C_ToggleHover) == 0x000001, "Wrong alignment on W_Error_C_ToggleHover");
static_assert(sizeof(W_Error_C_ToggleHover) == 0x000001, "Wrong size on W_Error_C_ToggleHover");
static_assert(offsetof(W_Error_C_ToggleHover, IsHovered_0) == 0x000000, "Member 'W_Error_C_ToggleHover::IsHovered_0' has a wrong offset!");

// Function W_Error.W_Error_C.ToggleEnabled
// 0x0001 (0x0001 - 0x0000)
struct W_Error_C_ToggleEnabled final
{
public:
	bool                                          IsEnabled;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Error_C_ToggleEnabled) == 0x000001, "Wrong alignment on W_Error_C_ToggleEnabled");
static_assert(sizeof(W_Error_C_ToggleEnabled) == 0x000001, "Wrong size on W_Error_C_ToggleEnabled");
static_assert(offsetof(W_Error_C_ToggleEnabled, IsEnabled) == 0x000000, "Member 'W_Error_C_ToggleEnabled::IsEnabled' has a wrong offset!");

// Function W_Error.W_Error_C.UpdateConfirmation
// 0x0038 (0x0038 - 0x0000)
struct W_Error_C_UpdateConfirmation final
{
public:
	class FText                                   Title;                                             // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   Message;                                           // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	E_Comfirmation                                ConfirmationFor_0;                                 // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Error_C_UpdateConfirmation) == 0x000008, "Wrong alignment on W_Error_C_UpdateConfirmation");
static_assert(sizeof(W_Error_C_UpdateConfirmation) == 0x000038, "Wrong size on W_Error_C_UpdateConfirmation");
static_assert(offsetof(W_Error_C_UpdateConfirmation, Title) == 0x000000, "Member 'W_Error_C_UpdateConfirmation::Title' has a wrong offset!");
static_assert(offsetof(W_Error_C_UpdateConfirmation, Message) == 0x000018, "Member 'W_Error_C_UpdateConfirmation::Message' has a wrong offset!");
static_assert(offsetof(W_Error_C_UpdateConfirmation, ConfirmationFor_0) == 0x000030, "Member 'W_Error_C_UpdateConfirmation::ConfirmationFor_0' has a wrong offset!");

// Function W_Error.W_Error_C.OnMouseButtonUp
// 0x0218 (0x0218 - 0x0000)
struct W_Error_C_OnMouseButtonUp final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00A8(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0160(0x00B8)()
};
static_assert(alignof(W_Error_C_OnMouseButtonUp) == 0x000008, "Wrong alignment on W_Error_C_OnMouseButtonUp");
static_assert(sizeof(W_Error_C_OnMouseButtonUp) == 0x000218, "Wrong size on W_Error_C_OnMouseButtonUp");
static_assert(offsetof(W_Error_C_OnMouseButtonUp, MyGeometry) == 0x000000, "Member 'W_Error_C_OnMouseButtonUp::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_Error_C_OnMouseButtonUp, MouseEvent) == 0x000038, "Member 'W_Error_C_OnMouseButtonUp::MouseEvent' has a wrong offset!");
static_assert(offsetof(W_Error_C_OnMouseButtonUp, ReturnValue) == 0x0000A8, "Member 'W_Error_C_OnMouseButtonUp::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Error_C_OnMouseButtonUp, CallFunc_Handled_ReturnValue) == 0x000160, "Member 'W_Error_C_OnMouseButtonUp::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function W_Error.W_Error_C.OnPreviewKeyDown
// 0x02B8 (0x02B8 - 0x0000)
struct W_Error_C_OnPreviewKeyDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FKeyEvent                              InKeyEvent;                                        // 0x0038(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FEventReply                            ReturnValue;                                       // 0x0070(0x00B8)(Parm, OutParm, ReturnParm)
	struct FKey                                   CallFunc_GetKey_ReturnValue;                       // 0x0128(0x0018)(HasGetValueTypeHash)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0140(0x00B8)()
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F9[0x7];                                      // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Handled_ReturnValue_1;                    // 0x0200(0x00B8)()
};
static_assert(alignof(W_Error_C_OnPreviewKeyDown) == 0x000008, "Wrong alignment on W_Error_C_OnPreviewKeyDown");
static_assert(sizeof(W_Error_C_OnPreviewKeyDown) == 0x0002B8, "Wrong size on W_Error_C_OnPreviewKeyDown");
static_assert(offsetof(W_Error_C_OnPreviewKeyDown, MyGeometry) == 0x000000, "Member 'W_Error_C_OnPreviewKeyDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_Error_C_OnPreviewKeyDown, InKeyEvent) == 0x000038, "Member 'W_Error_C_OnPreviewKeyDown::InKeyEvent' has a wrong offset!");
static_assert(offsetof(W_Error_C_OnPreviewKeyDown, ReturnValue) == 0x000070, "Member 'W_Error_C_OnPreviewKeyDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Error_C_OnPreviewKeyDown, CallFunc_GetKey_ReturnValue) == 0x000128, "Member 'W_Error_C_OnPreviewKeyDown::CallFunc_GetKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Error_C_OnPreviewKeyDown, CallFunc_Handled_ReturnValue) == 0x000140, "Member 'W_Error_C_OnPreviewKeyDown::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Error_C_OnPreviewKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x0001F8, "Member 'W_Error_C_OnPreviewKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Error_C_OnPreviewKeyDown, CallFunc_Handled_ReturnValue_1) == 0x000200, "Member 'W_Error_C_OnPreviewKeyDown::CallFunc_Handled_ReturnValue_1' has a wrong offset!");

}

