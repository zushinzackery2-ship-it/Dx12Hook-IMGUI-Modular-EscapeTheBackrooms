#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Intro

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Backrooms_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_Intro.W_Intro_C
// 0x0200 (0x0460 - 0x0260)
class UW_Intro_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       TextAnim;                                          // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       IntroAnim;                                         // 0x0270(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UTextBlock*                             ChineseHealthWarning;                              // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Background;                                  // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Black;                                       // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBackgroundBlur*                        MyBackgroundBlur;                                  // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URichTextBlock*                         RichTextBlock_Skip;                                // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_GameName;                                // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_MadeBy;                                  // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_Skip_1;                                  // 0x02B0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	float                                         TimeIntro;                                         // 0x02B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BC[0x4];                                      // 0x02BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             BackgroundImage;                                   // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           BackgroundImageColor;                              // 0x02C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                LogoPosition;                                      // 0x02D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         LogoSizeHeight;                                    // 0x02E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LogoSizeWidth;                                     // 0x02EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Logo;                                              // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   GameNameText;                                      // 0x02F8(0x0018)(Edit, BlueprintVisible)
	struct FSlateFontInfo                         GameNameFont;                                      // 0x0310(0x0058)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FSlateColor                            GameNameColor;                                     // 0x0368(0x0028)(Edit, BlueprintVisible)
	struct FMargin                                GameNamePosition;                                  // 0x0390(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          AutoClose_;                                        // 0x03A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_3A1[0x7];                                      // 0x03A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   MadeByText;                                        // 0x03A8(0x0018)(Edit, BlueprintVisible)
	struct FSlateFontInfo                         MadeByFont;                                        // 0x03C0(0x0058)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FSlateColor                            MadeByColor;                                       // 0x0418(0x0028)(Edit, BlueprintVisible)
	struct FMargin                                MadeByPosition;                                    // 0x0440(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         BackgroundBlur;                                    // 0x0450(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          CanClose_;                                         // 0x0454(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_455[0x3];                                      // 0x0455(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_MainMenu_C*                          MainMenuRef;                                       // 0x0458(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_W_Intro(int32 EntryPoint);
	void OnActiveUserChanged(bool bIsSameUser);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void ShowMainMenu(class UW_MainMenu_C* MainMenuRef_0);
	void CreateMainMenuWidget();
	void OnInitialized();
	void BindInputDeviceChange();
	void OnDeviceChange(EFancyInputDevice NewInputDevice);
	void UpdateRichText();
	void OnBackgroundClick();
	void CloseIntro(bool NormalClose_);
	void PreConstruct(bool IsDesignTime);
	void Construct();
	void RemoveToolTipsInGame();
	struct FEventReply OnMouseButtonDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void CheckFont();
	ESlateVisibility Get_TextBlock_Skip_1_Visibility_0();
	struct FEventReply OnKeyUp(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent);
	struct FEventReply OnPreviewKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent);
	ESlateVisibility Get_ChineseHealthWarning_Visibility();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_Intro_C">();
	}
	static class UW_Intro_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_Intro_C>();
	}
};
static_assert(alignof(UW_Intro_C) == 0x000008, "Wrong alignment on UW_Intro_C");
static_assert(sizeof(UW_Intro_C) == 0x000460, "Wrong size on UW_Intro_C");
static_assert(offsetof(UW_Intro_C, UberGraphFrame) == 0x000260, "Member 'UW_Intro_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_Intro_C, TextAnim) == 0x000268, "Member 'UW_Intro_C::TextAnim' has a wrong offset!");
static_assert(offsetof(UW_Intro_C, IntroAnim) == 0x000270, "Member 'UW_Intro_C::IntroAnim' has a wrong offset!");
static_assert(offsetof(UW_Intro_C, ChineseHealthWarning) == 0x000278, "Member 'UW_Intro_C::ChineseHealthWarning' has a wrong offset!");
static_assert(offsetof(UW_Intro_C, Image_Background) == 0x000280, "Member 'UW_Intro_C::Image_Background' has a wrong offset!");
static_assert(offsetof(UW_Intro_C, Image_Black) == 0x000288, "Member 'UW_Intro_C::Image_Black' has a wrong offset!");
static_assert(offsetof(UW_Intro_C, MyBackgroundBlur) == 0x000290, "Member 'UW_Intro_C::MyBackgroundBlur' has a wrong offset!");
static_assert(offsetof(UW_Intro_C, RichTextBlock_Skip) == 0x000298, "Member 'UW_Intro_C::RichTextBlock_Skip' has a wrong offset!");
static_assert(offsetof(UW_Intro_C, TextBlock_GameName) == 0x0002A0, "Member 'UW_Intro_C::TextBlock_GameName' has a wrong offset!");
static_assert(offsetof(UW_Intro_C, TextBlock_MadeBy) == 0x0002A8, "Member 'UW_Intro_C::TextBlock_MadeBy' has a wrong offset!");
static_assert(offsetof(UW_Intro_C, TextBlock_Skip_1) == 0x0002B0, "Member 'UW_Intro_C::TextBlock_Skip_1' has a wrong offset!");
static_assert(offsetof(UW_Intro_C, TimeIntro) == 0x0002B8, "Member 'UW_Intro_C::TimeIntro' has a wrong offset!");
static_assert(offsetof(UW_Intro_C, BackgroundImage) == 0x0002C0, "Member 'UW_Intro_C::BackgroundImage' has a wrong offset!");
static_assert(offsetof(UW_Intro_C, BackgroundImageColor) == 0x0002C8, "Member 'UW_Intro_C::BackgroundImageColor' has a wrong offset!");
static_assert(offsetof(UW_Intro_C, LogoPosition) == 0x0002D8, "Member 'UW_Intro_C::LogoPosition' has a wrong offset!");
static_assert(offsetof(UW_Intro_C, LogoSizeHeight) == 0x0002E8, "Member 'UW_Intro_C::LogoSizeHeight' has a wrong offset!");
static_assert(offsetof(UW_Intro_C, LogoSizeWidth) == 0x0002EC, "Member 'UW_Intro_C::LogoSizeWidth' has a wrong offset!");
static_assert(offsetof(UW_Intro_C, Logo) == 0x0002F0, "Member 'UW_Intro_C::Logo' has a wrong offset!");
static_assert(offsetof(UW_Intro_C, GameNameText) == 0x0002F8, "Member 'UW_Intro_C::GameNameText' has a wrong offset!");
static_assert(offsetof(UW_Intro_C, GameNameFont) == 0x000310, "Member 'UW_Intro_C::GameNameFont' has a wrong offset!");
static_assert(offsetof(UW_Intro_C, GameNameColor) == 0x000368, "Member 'UW_Intro_C::GameNameColor' has a wrong offset!");
static_assert(offsetof(UW_Intro_C, GameNamePosition) == 0x000390, "Member 'UW_Intro_C::GameNamePosition' has a wrong offset!");
static_assert(offsetof(UW_Intro_C, AutoClose_) == 0x0003A0, "Member 'UW_Intro_C::AutoClose_' has a wrong offset!");
static_assert(offsetof(UW_Intro_C, MadeByText) == 0x0003A8, "Member 'UW_Intro_C::MadeByText' has a wrong offset!");
static_assert(offsetof(UW_Intro_C, MadeByFont) == 0x0003C0, "Member 'UW_Intro_C::MadeByFont' has a wrong offset!");
static_assert(offsetof(UW_Intro_C, MadeByColor) == 0x000418, "Member 'UW_Intro_C::MadeByColor' has a wrong offset!");
static_assert(offsetof(UW_Intro_C, MadeByPosition) == 0x000440, "Member 'UW_Intro_C::MadeByPosition' has a wrong offset!");
static_assert(offsetof(UW_Intro_C, BackgroundBlur) == 0x000450, "Member 'UW_Intro_C::BackgroundBlur' has a wrong offset!");
static_assert(offsetof(UW_Intro_C, CanClose_) == 0x000454, "Member 'UW_Intro_C::CanClose_' has a wrong offset!");
static_assert(offsetof(UW_Intro_C, MainMenuRef) == 0x000458, "Member 'UW_Intro_C::MainMenuRef' has a wrong offset!");

}

