#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AsyncLoadingScreen

#include "Basic.hpp"

#include "AsyncLoadingScreen_classes.hpp"
#include "AsyncLoadingScreen_parameters.hpp"


namespace SDK
{

// Function AsyncLoadingScreen.AsyncLoadingScreenLibrary.GetIsEnableLoadingScreen
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAsyncLoadingScreenLibrary::GetIsEnableLoadingScreen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AsyncLoadingScreenLibrary", "GetIsEnableLoadingScreen");

	Params::AsyncLoadingScreenLibrary_GetIsEnableLoadingScreen Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AsyncLoadingScreen.AsyncLoadingScreenLibrary.SetDisplayBackgroundIndex
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   BackgroundIndex                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAsyncLoadingScreenLibrary::SetDisplayBackgroundIndex(int32 BackgroundIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AsyncLoadingScreenLibrary", "SetDisplayBackgroundIndex");

	Params::AsyncLoadingScreenLibrary_SetDisplayBackgroundIndex Parms{};

	Parms.BackgroundIndex = BackgroundIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AsyncLoadingScreen.AsyncLoadingScreenLibrary.SetDisplayMovieIndex
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   MovieIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAsyncLoadingScreenLibrary::SetDisplayMovieIndex(int32 MovieIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AsyncLoadingScreenLibrary", "SetDisplayMovieIndex");

	Params::AsyncLoadingScreenLibrary_SetDisplayMovieIndex Parms{};

	Parms.MovieIndex = MovieIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AsyncLoadingScreen.AsyncLoadingScreenLibrary.SetDisplayTipTextIndex
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   TipTextIndex                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAsyncLoadingScreenLibrary::SetDisplayTipTextIndex(int32 TipTextIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AsyncLoadingScreenLibrary", "SetDisplayTipTextIndex");

	Params::AsyncLoadingScreenLibrary_SetDisplayTipTextIndex Parms{};

	Parms.TipTextIndex = TipTextIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AsyncLoadingScreen.AsyncLoadingScreenLibrary.SetEnableLoadingScreen
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bIsEnableLoadingScreen                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAsyncLoadingScreenLibrary::SetEnableLoadingScreen(bool bIsEnableLoadingScreen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AsyncLoadingScreenLibrary", "SetEnableLoadingScreen");

	Params::AsyncLoadingScreenLibrary_SetEnableLoadingScreen Parms{};

	Parms.bIsEnableLoadingScreen = bIsEnableLoadingScreen;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AsyncLoadingScreen.AsyncLoadingScreenLibrary.StopLoadingScreen
// (Final, Native, Static, Public, BlueprintCallable)

void UAsyncLoadingScreenLibrary::StopLoadingScreen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AsyncLoadingScreenLibrary", "StopLoadingScreen");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}

}

