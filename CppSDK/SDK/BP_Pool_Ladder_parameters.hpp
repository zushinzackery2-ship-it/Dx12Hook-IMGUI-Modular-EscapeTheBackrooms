#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Pool_Ladder

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_Pool_Ladder.BP_Pool_Ladder_C.ExecuteUbergraph_BP_Pool_Ladder
// 0x00C0 (0x00C0 - 0x0000)
struct BP_Pool_Ladder_C_ExecuteUbergraph_BP_Pool_Ladder final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0028(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class ABPCharacter_Demo_C*                    K2Node_DynamicCast_AsBPCharacter_Demo;             // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Pool_Ladder_C_ExecuteUbergraph_BP_Pool_Ladder) == 0x000008, "Wrong alignment on BP_Pool_Ladder_C_ExecuteUbergraph_BP_Pool_Ladder");
static_assert(sizeof(BP_Pool_Ladder_C_ExecuteUbergraph_BP_Pool_Ladder) == 0x0000C0, "Wrong size on BP_Pool_Ladder_C_ExecuteUbergraph_BP_Pool_Ladder");
static_assert(offsetof(BP_Pool_Ladder_C_ExecuteUbergraph_BP_Pool_Ladder, EntryPoint) == 0x000000, "Member 'BP_Pool_Ladder_C_ExecuteUbergraph_BP_Pool_Ladder::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Pool_Ladder_C_ExecuteUbergraph_BP_Pool_Ladder, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000008, "Member 'BP_Pool_Ladder_C_ExecuteUbergraph_BP_Pool_Ladder::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_Pool_Ladder_C_ExecuteUbergraph_BP_Pool_Ladder, K2Node_ComponentBoundEvent_OtherActor) == 0x000010, "Member 'BP_Pool_Ladder_C_ExecuteUbergraph_BP_Pool_Ladder::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_Pool_Ladder_C_ExecuteUbergraph_BP_Pool_Ladder, K2Node_ComponentBoundEvent_OtherComp) == 0x000018, "Member 'BP_Pool_Ladder_C_ExecuteUbergraph_BP_Pool_Ladder::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_Pool_Ladder_C_ExecuteUbergraph_BP_Pool_Ladder, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000020, "Member 'BP_Pool_Ladder_C_ExecuteUbergraph_BP_Pool_Ladder::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_Pool_Ladder_C_ExecuteUbergraph_BP_Pool_Ladder, K2Node_ComponentBoundEvent_bFromSweep) == 0x000024, "Member 'BP_Pool_Ladder_C_ExecuteUbergraph_BP_Pool_Ladder::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_Pool_Ladder_C_ExecuteUbergraph_BP_Pool_Ladder, K2Node_ComponentBoundEvent_SweepResult) == 0x000028, "Member 'BP_Pool_Ladder_C_ExecuteUbergraph_BP_Pool_Ladder::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_Pool_Ladder_C_ExecuteUbergraph_BP_Pool_Ladder, K2Node_DynamicCast_AsBPCharacter_Demo) == 0x0000B0, "Member 'BP_Pool_Ladder_C_ExecuteUbergraph_BP_Pool_Ladder::K2Node_DynamicCast_AsBPCharacter_Demo' has a wrong offset!");
static_assert(offsetof(BP_Pool_Ladder_C_ExecuteUbergraph_BP_Pool_Ladder, K2Node_DynamicCast_bSuccess) == 0x0000B8, "Member 'BP_Pool_Ladder_C_ExecuteUbergraph_BP_Pool_Ladder::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_Pool_Ladder.BP_Pool_Ladder_C.BndEvt__BP_Ladder_Box1_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct BP_Pool_Ladder_C_BndEvt__BP_Ladder_Box1_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_Pool_Ladder_C_BndEvt__BP_Ladder_Box1_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_Pool_Ladder_C_BndEvt__BP_Ladder_Box1_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_Pool_Ladder_C_BndEvt__BP_Ladder_Box1_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on BP_Pool_Ladder_C_BndEvt__BP_Ladder_Box1_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_Pool_Ladder_C_BndEvt__BP_Ladder_Box1_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_Pool_Ladder_C_BndEvt__BP_Ladder_Box1_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_Pool_Ladder_C_BndEvt__BP_Ladder_Box1_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_Pool_Ladder_C_BndEvt__BP_Ladder_Box1_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_Pool_Ladder_C_BndEvt__BP_Ladder_Box1_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_Pool_Ladder_C_BndEvt__BP_Ladder_Box1_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_Pool_Ladder_C_BndEvt__BP_Ladder_Box1_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_Pool_Ladder_C_BndEvt__BP_Ladder_Box1_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_Pool_Ladder_C_BndEvt__BP_Ladder_Box1_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_Pool_Ladder_C_BndEvt__BP_Ladder_Box1_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_Pool_Ladder_C_BndEvt__BP_Ladder_Box1_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_Pool_Ladder_C_BndEvt__BP_Ladder_Box1_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_Pool_Ladder.BP_Pool_Ladder_C.UserConstructionScript
// 0x00F0 (0x00F0 - 0x0000)
struct BP_Pool_Ladder_C_UserConstructionScript final
{
public:
	int32                                         NumOhRungs;                                        // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LadderSectionWidth;                                // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LadderSectionHeight;                               // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Scale2;                                            // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UHierarchicalInstancedStaticMeshComponent* Rung;                                           // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0030(0x0030)(IsPlainOldData, NoDestructor)
	class UHierarchicalInstancedStaticMeshComponent* CallFunc_AddComponent_ReturnValue;              // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocalBounds_Min;                       // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocalBounds_Max;                       // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0xC];                                       // 0x00A4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x00B0(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddInstance_ReturnValue;                  // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Pool_Ladder_C_UserConstructionScript) == 0x000010, "Wrong alignment on BP_Pool_Ladder_C_UserConstructionScript");
static_assert(sizeof(BP_Pool_Ladder_C_UserConstructionScript) == 0x0000F0, "Wrong size on BP_Pool_Ladder_C_UserConstructionScript");
static_assert(offsetof(BP_Pool_Ladder_C_UserConstructionScript, NumOhRungs) == 0x000000, "Member 'BP_Pool_Ladder_C_UserConstructionScript::NumOhRungs' has a wrong offset!");
static_assert(offsetof(BP_Pool_Ladder_C_UserConstructionScript, LadderSectionWidth) == 0x000004, "Member 'BP_Pool_Ladder_C_UserConstructionScript::LadderSectionWidth' has a wrong offset!");
static_assert(offsetof(BP_Pool_Ladder_C_UserConstructionScript, LadderSectionHeight) == 0x000008, "Member 'BP_Pool_Ladder_C_UserConstructionScript::LadderSectionHeight' has a wrong offset!");
static_assert(offsetof(BP_Pool_Ladder_C_UserConstructionScript, Scale2) == 0x00000C, "Member 'BP_Pool_Ladder_C_UserConstructionScript::Scale2' has a wrong offset!");
static_assert(offsetof(BP_Pool_Ladder_C_UserConstructionScript, Rung) == 0x000010, "Member 'BP_Pool_Ladder_C_UserConstructionScript::Rung' has a wrong offset!");
static_assert(offsetof(BP_Pool_Ladder_C_UserConstructionScript, CallFunc_Subtract_IntInt_ReturnValue) == 0x000018, "Member 'BP_Pool_Ladder_C_UserConstructionScript::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pool_Ladder_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue) == 0x00001C, "Member 'BP_Pool_Ladder_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pool_Ladder_C_UserConstructionScript, CallFunc_MakeTransform_ReturnValue) == 0x000030, "Member 'BP_Pool_Ladder_C_UserConstructionScript::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pool_Ladder_C_UserConstructionScript, CallFunc_AddComponent_ReturnValue) == 0x000060, "Member 'BP_Pool_Ladder_C_UserConstructionScript::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pool_Ladder_C_UserConstructionScript, CallFunc_GetLocalBounds_Min) == 0x000068, "Member 'BP_Pool_Ladder_C_UserConstructionScript::CallFunc_GetLocalBounds_Min' has a wrong offset!");
static_assert(offsetof(BP_Pool_Ladder_C_UserConstructionScript, CallFunc_GetLocalBounds_Max) == 0x000074, "Member 'BP_Pool_Ladder_C_UserConstructionScript::CallFunc_GetLocalBounds_Max' has a wrong offset!");
static_assert(offsetof(BP_Pool_Ladder_C_UserConstructionScript, Temp_int_Variable) == 0x000080, "Member 'BP_Pool_Ladder_C_UserConstructionScript::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_Pool_Ladder_C_UserConstructionScript, CallFunc_BreakVector_X) == 0x000084, "Member 'BP_Pool_Ladder_C_UserConstructionScript::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_Pool_Ladder_C_UserConstructionScript, CallFunc_BreakVector_Y) == 0x000088, "Member 'BP_Pool_Ladder_C_UserConstructionScript::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_Pool_Ladder_C_UserConstructionScript, CallFunc_BreakVector_Z) == 0x00008C, "Member 'BP_Pool_Ladder_C_UserConstructionScript::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_Pool_Ladder_C_UserConstructionScript, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000090, "Member 'BP_Pool_Ladder_C_UserConstructionScript::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pool_Ladder_C_UserConstructionScript, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000094, "Member 'BP_Pool_Ladder_C_UserConstructionScript::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pool_Ladder_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue_1) == 0x000098, "Member 'BP_Pool_Ladder_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Pool_Ladder_C_UserConstructionScript, CallFunc_MakeTransform_ReturnValue_1) == 0x0000B0, "Member 'BP_Pool_Ladder_C_UserConstructionScript::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Pool_Ladder_C_UserConstructionScript, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000E0, "Member 'BP_Pool_Ladder_C_UserConstructionScript::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pool_Ladder_C_UserConstructionScript, CallFunc_Add_IntInt_ReturnValue) == 0x0000E4, "Member 'BP_Pool_Ladder_C_UserConstructionScript::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pool_Ladder_C_UserConstructionScript, CallFunc_AddInstance_ReturnValue) == 0x0000E8, "Member 'BP_Pool_Ladder_C_UserConstructionScript::CallFunc_AddInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pool_Ladder_C_UserConstructionScript, CallFunc_Multiply_IntInt_ReturnValue) == 0x0000EC, "Member 'BP_Pool_Ladder_C_UserConstructionScript::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");

// Function BP_Pool_Ladder.BP_Pool_Ladder_C.GetStartPoint
// 0x0048 (0x0048 - 0x0000)
struct BP_Pool_Ladder_C_GetStartPoint final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Pool_Ladder_C_GetStartPoint) == 0x000004, "Wrong alignment on BP_Pool_Ladder_C_GetStartPoint");
static_assert(sizeof(BP_Pool_Ladder_C_GetStartPoint) == 0x000048, "Wrong size on BP_Pool_Ladder_C_GetStartPoint");
static_assert(offsetof(BP_Pool_Ladder_C_GetStartPoint, ReturnValue) == 0x000000, "Member 'BP_Pool_Ladder_C_GetStartPoint::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pool_Ladder_C_GetStartPoint, CallFunc_GetActorForwardVector_ReturnValue) == 0x00000C, "Member 'BP_Pool_Ladder_C_GetStartPoint::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pool_Ladder_C_GetStartPoint, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000018, "Member 'BP_Pool_Ladder_C_GetStartPoint::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pool_Ladder_C_GetStartPoint, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000024, "Member 'BP_Pool_Ladder_C_GetStartPoint::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pool_Ladder_C_GetStartPoint, CallFunc_Add_VectorVector_ReturnValue) == 0x000030, "Member 'BP_Pool_Ladder_C_GetStartPoint::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pool_Ladder_C_GetStartPoint, CallFunc_Add_VectorVector_ReturnValue_1) == 0x00003C, "Member 'BP_Pool_Ladder_C_GetStartPoint::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");

// Function BP_Pool_Ladder.BP_Pool_Ladder_C.CanClimb
// 0x0088 (0x0088 - 0x0000)
struct BP_Pool_Ladder_C_CanClimb final
{
public:
	class APawn*                                  Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Pool_Ladder_C_CanClimb) == 0x000008, "Wrong alignment on BP_Pool_Ladder_C_CanClimb");
static_assert(sizeof(BP_Pool_Ladder_C_CanClimb) == 0x000088, "Wrong size on BP_Pool_Ladder_C_CanClimb");
static_assert(offsetof(BP_Pool_Ladder_C_CanClimb, Pawn) == 0x000000, "Member 'BP_Pool_Ladder_C_CanClimb::Pawn' has a wrong offset!");
static_assert(offsetof(BP_Pool_Ladder_C_CanClimb, ReturnValue) == 0x000008, "Member 'BP_Pool_Ladder_C_CanClimb::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pool_Ladder_C_CanClimb, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00000C, "Member 'BP_Pool_Ladder_C_CanClimb::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pool_Ladder_C_CanClimb, CallFunc_GetActorForwardVector_ReturnValue) == 0x000018, "Member 'BP_Pool_Ladder_C_CanClimb::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pool_Ladder_C_CanClimb, CallFunc_BreakVector_X) == 0x000024, "Member 'BP_Pool_Ladder_C_CanClimb::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_Pool_Ladder_C_CanClimb, CallFunc_BreakVector_Y) == 0x000028, "Member 'BP_Pool_Ladder_C_CanClimb::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_Pool_Ladder_C_CanClimb, CallFunc_BreakVector_Z) == 0x00002C, "Member 'BP_Pool_Ladder_C_CanClimb::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_Pool_Ladder_C_CanClimb, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000030, "Member 'BP_Pool_Ladder_C_CanClimb::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pool_Ladder_C_CanClimb, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x00003C, "Member 'BP_Pool_Ladder_C_CanClimb::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Pool_Ladder_C_CanClimb, CallFunc_Add_VectorVector_ReturnValue) == 0x000048, "Member 'BP_Pool_Ladder_C_CanClimb::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pool_Ladder_C_CanClimb, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000054, "Member 'BP_Pool_Ladder_C_CanClimb::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Pool_Ladder_C_CanClimb, CallFunc_Multiply_IntInt_ReturnValue) == 0x000060, "Member 'BP_Pool_Ladder_C_CanClimb::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pool_Ladder_C_CanClimb, CallFunc_BreakVector_X_1) == 0x000064, "Member 'BP_Pool_Ladder_C_CanClimb::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_Pool_Ladder_C_CanClimb, CallFunc_BreakVector_Y_1) == 0x000068, "Member 'BP_Pool_Ladder_C_CanClimb::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_Pool_Ladder_C_CanClimb, CallFunc_BreakVector_Z_1) == 0x00006C, "Member 'BP_Pool_Ladder_C_CanClimb::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_Pool_Ladder_C_CanClimb, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000070, "Member 'BP_Pool_Ladder_C_CanClimb::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pool_Ladder_C_CanClimb, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000074, "Member 'BP_Pool_Ladder_C_CanClimb::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pool_Ladder_C_CanClimb, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000078, "Member 'BP_Pool_Ladder_C_CanClimb::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Pool_Ladder_C_CanClimb, CallFunc_Add_FloatFloat_ReturnValue) == 0x00007C, "Member 'BP_Pool_Ladder_C_CanClimb::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pool_Ladder_C_CanClimb, CallFunc_Less_FloatFloat_ReturnValue) == 0x000080, "Member 'BP_Pool_Ladder_C_CanClimb::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_Pool_Ladder.BP_Pool_Ladder_C.GetHeightPoint
// 0x0040 (0x0040 - 0x0000)
struct BP_Pool_Ladder_C_GetHeightPoint final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Pool_Ladder_C_GetHeightPoint) == 0x000004, "Wrong alignment on BP_Pool_Ladder_C_GetHeightPoint");
static_assert(sizeof(BP_Pool_Ladder_C_GetHeightPoint) == 0x000040, "Wrong size on BP_Pool_Ladder_C_GetHeightPoint");
static_assert(offsetof(BP_Pool_Ladder_C_GetHeightPoint, ReturnValue) == 0x000000, "Member 'BP_Pool_Ladder_C_GetHeightPoint::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pool_Ladder_C_GetHeightPoint, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00000C, "Member 'BP_Pool_Ladder_C_GetHeightPoint::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pool_Ladder_C_GetHeightPoint, CallFunc_Multiply_IntInt_ReturnValue) == 0x000018, "Member 'BP_Pool_Ladder_C_GetHeightPoint::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pool_Ladder_C_GetHeightPoint, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00001C, "Member 'BP_Pool_Ladder_C_GetHeightPoint::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pool_Ladder_C_GetHeightPoint, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000020, "Member 'BP_Pool_Ladder_C_GetHeightPoint::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pool_Ladder_C_GetHeightPoint, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000024, "Member 'BP_Pool_Ladder_C_GetHeightPoint::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Pool_Ladder_C_GetHeightPoint, CallFunc_MakeVector_ReturnValue) == 0x000028, "Member 'BP_Pool_Ladder_C_GetHeightPoint::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pool_Ladder_C_GetHeightPoint, CallFunc_Add_VectorVector_ReturnValue) == 0x000034, "Member 'BP_Pool_Ladder_C_GetHeightPoint::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

}

