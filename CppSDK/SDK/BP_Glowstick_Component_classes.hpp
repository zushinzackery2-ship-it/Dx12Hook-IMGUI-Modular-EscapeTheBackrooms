#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Glowstick_Component

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Glowstick_Component.BP_Glowstick_Component_C
// 0x0010 (0x00C0 - 0x00B0)
class UBP_Glowstick_Component_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USpotLightComponent*                    SpotLight;                                         // 0x00B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Glowstick_Component(int32 EntryPoint);
	void TickPointlight(class UPointLightComponent* PointLight, const struct FVector& ForwardVector);
	void TickSpotlight(class USpotLightComponent* SpotLight_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Glowstick_Component_C">();
	}
	static class UBP_Glowstick_Component_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_Glowstick_Component_C>();
	}
};
static_assert(alignof(UBP_Glowstick_Component_C) == 0x000008, "Wrong alignment on UBP_Glowstick_Component_C");
static_assert(sizeof(UBP_Glowstick_Component_C) == 0x0000C0, "Wrong size on UBP_Glowstick_Component_C");
static_assert(offsetof(UBP_Glowstick_Component_C, UberGraphFrame) == 0x0000B0, "Member 'UBP_Glowstick_Component_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_Glowstick_Component_C, SpotLight) == 0x0000B8, "Member 'UBP_Glowstick_Component_C::SpotLight' has a wrong offset!");

}

