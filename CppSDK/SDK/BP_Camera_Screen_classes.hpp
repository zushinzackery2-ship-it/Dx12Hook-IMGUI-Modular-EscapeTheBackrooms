#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Camera_Screen

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Camera_Screen.BP_Camera_Screen_C
// 0x0048 (0x0268 - 0x0220)
class ABP_Camera_Screen_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               DynamicTV;                                         // 0x0238(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TVIndex;                                           // 0x0240(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_244[0x4];                                      // 0x0244(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstance*                      Material;                                          // 0x0248(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 RenderTarget;                                      // 0x0250(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCorrect;                                         // 0x0258(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	bool                                          UsePlaceholder;                                    // 0x0259(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	bool                                          ShouldReset;                                       // 0x025A(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	uint8                                         Pad_25B[0x5];                                      // 0x025B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               Texture;                                           // 0x0260(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Camera_Screen(int32 EntryPoint);
	void ReceiveBeginPlay();
	void OnRep_IsCorrect();
	void OnRep_UsePlaceholder();
	void OnRep_ShouldReset();
	void SetFirstTexture(class UTexture** Texture_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Camera_Screen_C">();
	}
	static class ABP_Camera_Screen_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Camera_Screen_C>();
	}
};
static_assert(alignof(ABP_Camera_Screen_C) == 0x000008, "Wrong alignment on ABP_Camera_Screen_C");
static_assert(sizeof(ABP_Camera_Screen_C) == 0x000268, "Wrong size on ABP_Camera_Screen_C");
static_assert(offsetof(ABP_Camera_Screen_C, UberGraphFrame) == 0x000220, "Member 'ABP_Camera_Screen_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Camera_Screen_C, StaticMesh) == 0x000228, "Member 'ABP_Camera_Screen_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(ABP_Camera_Screen_C, DefaultSceneRoot) == 0x000230, "Member 'ABP_Camera_Screen_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_Camera_Screen_C, DynamicTV) == 0x000238, "Member 'ABP_Camera_Screen_C::DynamicTV' has a wrong offset!");
static_assert(offsetof(ABP_Camera_Screen_C, TVIndex) == 0x000240, "Member 'ABP_Camera_Screen_C::TVIndex' has a wrong offset!");
static_assert(offsetof(ABP_Camera_Screen_C, Material) == 0x000248, "Member 'ABP_Camera_Screen_C::Material' has a wrong offset!");
static_assert(offsetof(ABP_Camera_Screen_C, RenderTarget) == 0x000250, "Member 'ABP_Camera_Screen_C::RenderTarget' has a wrong offset!");
static_assert(offsetof(ABP_Camera_Screen_C, IsCorrect) == 0x000258, "Member 'ABP_Camera_Screen_C::IsCorrect' has a wrong offset!");
static_assert(offsetof(ABP_Camera_Screen_C, UsePlaceholder) == 0x000259, "Member 'ABP_Camera_Screen_C::UsePlaceholder' has a wrong offset!");
static_assert(offsetof(ABP_Camera_Screen_C, ShouldReset) == 0x00025A, "Member 'ABP_Camera_Screen_C::ShouldReset' has a wrong offset!");
static_assert(offsetof(ABP_Camera_Screen_C, Texture) == 0x000260, "Member 'ABP_Camera_Screen_C::Texture' has a wrong offset!");

}

