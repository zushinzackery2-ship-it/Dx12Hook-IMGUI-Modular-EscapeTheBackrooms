#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EasyVoiceChat

#include "Basic.hpp"

#include "EasyVoiceChat_classes.hpp"
#include "EasyVoiceChat_parameters.hpp"


namespace SDK
{

// Function EasyVoiceChat.VoiceFunctionLibrary.GetAllPawnsFromState
// (Final, Native, Static, Private, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APawn*                            CurrentPlayer                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Distance                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class APawn*>                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class APawn*> UVoiceFunctionLibrary::GetAllPawnsFromState(class UObject* WorldContextObject, class APawn* CurrentPlayer, float Distance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("VoiceFunctionLibrary", "GetAllPawnsFromState");

	Params::VoiceFunctionLibrary_GetAllPawnsFromState Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.CurrentPlayer = CurrentPlayer;
	Parms.Distance = Distance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyVoiceChat.VoipAudioComponent.PlayVoiceData
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<uint8>&                    CompressedVoiceData                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UVoipAudioComponent::PlayVoiceData(const TArray<uint8>& CompressedVoiceData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoipAudioComponent", "PlayVoiceData");

	Params::VoipAudioComponent_PlayVoiceData Parms{};

	Parms.CompressedVoiceData = std::move(CompressedVoiceData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EasyVoiceChat.VoipManagerComponent.ChangeAudioCaptureDevice
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    NewDeviceName                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UVoipManagerComponent::ChangeAudioCaptureDevice(const class FString& NewDeviceName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoipManagerComponent", "ChangeAudioCaptureDevice");

	Params::VoipManagerComponent_ChangeAudioCaptureDevice Parms{};

	Parms.NewDeviceName = std::move(NewDeviceName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyVoiceChat.VoipManagerComponent.GetCaptureDevices
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UVoipManagerComponent::GetCaptureDevices()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoipManagerComponent", "GetCaptureDevices");

	Params::VoipManagerComponent_GetCaptureDevices Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyVoiceChat.VoipManagerComponent.InitVoice
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AController*                      Controller                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UVoipManagerComponent::InitVoice(class AController* Controller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoipManagerComponent", "InitVoice");

	Params::VoipManagerComponent_InitVoice Parms{};

	Parms.Controller = Controller;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyVoiceChat.VoipManagerComponent.OnPlayerStartTalking
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UVoipManagerComponent::OnPlayerStartTalking()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoipManagerComponent", "OnPlayerStartTalking");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EasyVoiceChat.VoipManagerComponent.OnPlayerStopTalking
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UVoipManagerComponent::OnPlayerStopTalking()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoipManagerComponent", "OnPlayerStopTalking");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EasyVoiceChat.VoipManagerComponent.OnVoiceGeneratedBP
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const TArray<uint8>&                    VoiceBuffer                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// const float                             MicLevel                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UVoipManagerComponent::OnVoiceGeneratedBP(const TArray<uint8>& VoiceBuffer, const float MicLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoipManagerComponent", "OnVoiceGeneratedBP");

	Params::VoipManagerComponent_OnVoiceGeneratedBP Parms{};

	Parms.VoiceBuffer = std::move(VoiceBuffer);
	Parms.MicLevel = MicLevel;

	UObject::ProcessEvent(Func, &Parms);
}

}

