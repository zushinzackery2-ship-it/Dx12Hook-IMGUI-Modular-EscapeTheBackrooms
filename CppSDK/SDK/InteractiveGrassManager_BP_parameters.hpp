#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: InteractiveGrassManager_BP

#include "Basic.hpp"

#include "FoliageToSpawnInArea_structs.hpp"
#include "FoliageToSpawn_Struct_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function InteractiveGrassManager_BP.InteractiveGrassManager_BP_C.ExecuteUbergraph_InteractiveGrassManager_BP
// 0x00B8 (0x00B8 - 0x0000)
struct InteractiveGrassManager_BP_C_ExecuteUbergraph_InteractiveGrassManager_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_newDirection;                   // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_newStrength;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_ReturnValue_1;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AInstancedFoliageActor*>         CallFunc_GetAllActorsOfClass_OutActors;            // 0x0040(0x0010)(ReferenceParm)
	class AInstancedFoliageActor*                 CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UINTERACTIVE_FoliageComp_BP_C*>  CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0060(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UINTERACTIVE_FoliageComp_BP_C*          CallFunc_Array_Get_Item_1;                         // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScalarParameterValue_ReturnValue;      // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAtan2_ReturnValue;                     // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(InteractiveGrassManager_BP_C_ExecuteUbergraph_InteractiveGrassManager_BP) == 0x000008, "Wrong alignment on InteractiveGrassManager_BP_C_ExecuteUbergraph_InteractiveGrassManager_BP");
static_assert(sizeof(InteractiveGrassManager_BP_C_ExecuteUbergraph_InteractiveGrassManager_BP) == 0x0000B8, "Wrong size on InteractiveGrassManager_BP_C_ExecuteUbergraph_InteractiveGrassManager_BP");
static_assert(offsetof(InteractiveGrassManager_BP_C_ExecuteUbergraph_InteractiveGrassManager_BP, EntryPoint) == 0x000000, "Member 'InteractiveGrassManager_BP_C_ExecuteUbergraph_InteractiveGrassManager_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_ExecuteUbergraph_InteractiveGrassManager_BP, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'InteractiveGrassManager_BP_C_ExecuteUbergraph_InteractiveGrassManager_BP::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_ExecuteUbergraph_InteractiveGrassManager_BP, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'InteractiveGrassManager_BP_C_ExecuteUbergraph_InteractiveGrassManager_BP::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_ExecuteUbergraph_InteractiveGrassManager_BP, CallFunc_MapRangeClamped_ReturnValue) == 0x00000C, "Member 'InteractiveGrassManager_BP_C_ExecuteUbergraph_InteractiveGrassManager_BP::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_ExecuteUbergraph_InteractiveGrassManager_BP, Temp_int_Loop_Counter_Variable_1) == 0x000010, "Member 'InteractiveGrassManager_BP_C_ExecuteUbergraph_InteractiveGrassManager_BP::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_ExecuteUbergraph_InteractiveGrassManager_BP, CallFunc_Add_IntInt_ReturnValue_1) == 0x000014, "Member 'InteractiveGrassManager_BP_C_ExecuteUbergraph_InteractiveGrassManager_BP::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_ExecuteUbergraph_InteractiveGrassManager_BP, Temp_int_Array_Index_Variable) == 0x000018, "Member 'InteractiveGrassManager_BP_C_ExecuteUbergraph_InteractiveGrassManager_BP::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_ExecuteUbergraph_InteractiveGrassManager_BP, K2Node_CustomEvent_newDirection) == 0x00001C, "Member 'InteractiveGrassManager_BP_C_ExecuteUbergraph_InteractiveGrassManager_BP::K2Node_CustomEvent_newDirection' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_ExecuteUbergraph_InteractiveGrassManager_BP, K2Node_CustomEvent_newStrength) == 0x000028, "Member 'InteractiveGrassManager_BP_C_ExecuteUbergraph_InteractiveGrassManager_BP::K2Node_CustomEvent_newStrength' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_ExecuteUbergraph_InteractiveGrassManager_BP, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00002C, "Member 'InteractiveGrassManager_BP_C_ExecuteUbergraph_InteractiveGrassManager_BP::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_ExecuteUbergraph_InteractiveGrassManager_BP, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000030, "Member 'InteractiveGrassManager_BP_C_ExecuteUbergraph_InteractiveGrassManager_BP::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_ExecuteUbergraph_InteractiveGrassManager_BP, CallFunc_IsPlaying_ReturnValue) == 0x000034, "Member 'InteractiveGrassManager_BP_C_ExecuteUbergraph_InteractiveGrassManager_BP::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_ExecuteUbergraph_InteractiveGrassManager_BP, Temp_int_Array_Index_Variable_1) == 0x000038, "Member 'InteractiveGrassManager_BP_C_ExecuteUbergraph_InteractiveGrassManager_BP::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_ExecuteUbergraph_InteractiveGrassManager_BP, CallFunc_IsPlaying_ReturnValue_1) == 0x00003C, "Member 'InteractiveGrassManager_BP_C_ExecuteUbergraph_InteractiveGrassManager_BP::CallFunc_IsPlaying_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_ExecuteUbergraph_InteractiveGrassManager_BP, CallFunc_GetAllActorsOfClass_OutActors) == 0x000040, "Member 'InteractiveGrassManager_BP_C_ExecuteUbergraph_InteractiveGrassManager_BP::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_ExecuteUbergraph_InteractiveGrassManager_BP, CallFunc_Array_Get_Item) == 0x000050, "Member 'InteractiveGrassManager_BP_C_ExecuteUbergraph_InteractiveGrassManager_BP::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_ExecuteUbergraph_InteractiveGrassManager_BP, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'InteractiveGrassManager_BP_C_ExecuteUbergraph_InteractiveGrassManager_BP::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_ExecuteUbergraph_InteractiveGrassManager_BP, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000060, "Member 'InteractiveGrassManager_BP_C_ExecuteUbergraph_InteractiveGrassManager_BP::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_ExecuteUbergraph_InteractiveGrassManager_BP, CallFunc_Less_IntInt_ReturnValue) == 0x000070, "Member 'InteractiveGrassManager_BP_C_ExecuteUbergraph_InteractiveGrassManager_BP::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_ExecuteUbergraph_InteractiveGrassManager_BP, CallFunc_Array_Get_Item_1) == 0x000078, "Member 'InteractiveGrassManager_BP_C_ExecuteUbergraph_InteractiveGrassManager_BP::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_ExecuteUbergraph_InteractiveGrassManager_BP, CallFunc_Array_Length_ReturnValue_1) == 0x000080, "Member 'InteractiveGrassManager_BP_C_ExecuteUbergraph_InteractiveGrassManager_BP::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_ExecuteUbergraph_InteractiveGrassManager_BP, CallFunc_Less_IntInt_ReturnValue_1) == 0x000084, "Member 'InteractiveGrassManager_BP_C_ExecuteUbergraph_InteractiveGrassManager_BP::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_ExecuteUbergraph_InteractiveGrassManager_BP, CallFunc_BreakVector_X) == 0x000088, "Member 'InteractiveGrassManager_BP_C_ExecuteUbergraph_InteractiveGrassManager_BP::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_ExecuteUbergraph_InteractiveGrassManager_BP, CallFunc_BreakVector_Y) == 0x00008C, "Member 'InteractiveGrassManager_BP_C_ExecuteUbergraph_InteractiveGrassManager_BP::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_ExecuteUbergraph_InteractiveGrassManager_BP, CallFunc_BreakVector_Z) == 0x000090, "Member 'InteractiveGrassManager_BP_C_ExecuteUbergraph_InteractiveGrassManager_BP::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_ExecuteUbergraph_InteractiveGrassManager_BP, CallFunc_GetScalarParameterValue_ReturnValue) == 0x000094, "Member 'InteractiveGrassManager_BP_C_ExecuteUbergraph_InteractiveGrassManager_BP::CallFunc_GetScalarParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_ExecuteUbergraph_InteractiveGrassManager_BP, CallFunc_DegAtan2_ReturnValue) == 0x000098, "Member 'InteractiveGrassManager_BP_C_ExecuteUbergraph_InteractiveGrassManager_BP::CallFunc_DegAtan2_ReturnValue' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_ExecuteUbergraph_InteractiveGrassManager_BP, CallFunc_Add_FloatFloat_ReturnValue) == 0x00009C, "Member 'InteractiveGrassManager_BP_C_ExecuteUbergraph_InteractiveGrassManager_BP::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_ExecuteUbergraph_InteractiveGrassManager_BP, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x0000A0, "Member 'InteractiveGrassManager_BP_C_ExecuteUbergraph_InteractiveGrassManager_BP::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_ExecuteUbergraph_InteractiveGrassManager_BP, CallFunc_Lerp_ReturnValue) == 0x0000B0, "Member 'InteractiveGrassManager_BP_C_ExecuteUbergraph_InteractiveGrassManager_BP::CallFunc_Lerp_ReturnValue' has a wrong offset!");

// Function InteractiveGrassManager_BP.InteractiveGrassManager_BP_C.SmoothlyChangeWindStrength
// 0x0004 (0x0004 - 0x0000)
struct InteractiveGrassManager_BP_C_SmoothlyChangeWindStrength final
{
public:
	float                                         newStrength;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(InteractiveGrassManager_BP_C_SmoothlyChangeWindStrength) == 0x000004, "Wrong alignment on InteractiveGrassManager_BP_C_SmoothlyChangeWindStrength");
static_assert(sizeof(InteractiveGrassManager_BP_C_SmoothlyChangeWindStrength) == 0x000004, "Wrong size on InteractiveGrassManager_BP_C_SmoothlyChangeWindStrength");
static_assert(offsetof(InteractiveGrassManager_BP_C_SmoothlyChangeWindStrength, newStrength) == 0x000000, "Member 'InteractiveGrassManager_BP_C_SmoothlyChangeWindStrength::newStrength' has a wrong offset!");

// Function InteractiveGrassManager_BP.InteractiveGrassManager_BP_C.SmoothlyChangeWindDirection
// 0x000C (0x000C - 0x0000)
struct InteractiveGrassManager_BP_C_SmoothlyChangeWindDirection final
{
public:
	struct FVector                                newDirection;                                      // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(InteractiveGrassManager_BP_C_SmoothlyChangeWindDirection) == 0x000004, "Wrong alignment on InteractiveGrassManager_BP_C_SmoothlyChangeWindDirection");
static_assert(sizeof(InteractiveGrassManager_BP_C_SmoothlyChangeWindDirection) == 0x00000C, "Wrong size on InteractiveGrassManager_BP_C_SmoothlyChangeWindDirection");
static_assert(offsetof(InteractiveGrassManager_BP_C_SmoothlyChangeWindDirection, newDirection) == 0x000000, "Member 'InteractiveGrassManager_BP_C_SmoothlyChangeWindDirection::newDirection' has a wrong offset!");

// Function InteractiveGrassManager_BP.InteractiveGrassManager_BP_C.SpawnFoliage
// 0x0320 (0x0320 - 0x0000)
struct InteractiveGrassManager_BP_C_SpawnFoliage final
{
public:
	bool                                          spawnUnderCursor;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                locationIfNotUnderCursor;                          // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                normalIfNotUnderCursor;                            // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                minScale;                                          // 0x001C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                MaxScale;                                          // 0x0028(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFoliageToSpawn_Struct                 foliageToSpawn;                                    // 0x0038(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          fromCluster;                                       // 0x0048(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          clusterLastIndex;                                  // 0x0049(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A[0x2];                                       // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Scale;                                             // 0x004C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UINTERACTIVE_FoliageComp_BP_C*          addedFoliageComp;                                  // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UINTERACTIVE_FoliageComp_BP_C*          componentToSpawnWith;                              // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_68[0x8];                                       // 0x0068(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             addedInstanceGrowStartTransform;                   // 0x0070(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	struct FTransform                             addedInstanceOriginalTransform;                    // 0x00A0(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	int32                                         addedInstanceIndex;                                // 0x00D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                spawnNormal;                                       // 0x00D4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            whatToSpawn;                                       // 0x00E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                whereToSpawn;                                      // 0x00E8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UINTERACTIVE_FoliageComp_BP_C*          foundFoliageComp;                                  // 0x00F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          foundFoliageCompWithThisMesh;                      // 0x0100(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0102(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_103[0x1];                                      // 0x0103(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AInteractiveFoliageChunk_BP_C*          CallFunc_AddFoliageChunkActor_addedChunk;          // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0118(0x0010)(ConstParm, ReferenceParm)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0128(0x0010)(ConstParm, ReferenceParm)
	TArray<class AActor*>                         CallFunc_SphereOverlapActors_OutActors;            // 0x0138(0x0010)(ReferenceParm)
	bool                                          CallFunc_SphereOverlapActors_ReturnValue;          // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15C[0x4];                                      // 0x015C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AInteractiveFoliageChunk_BP_C*          K2Node_DynamicCast_AsInteractive_Foliage_Chunk_BP; // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_169[0x3];                                      // 0x0169(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0172(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_173[0x1];                                      // 0x0173(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_2;         // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x0190(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_3;         // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromZ_ReturnValue;                 // 0x01A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_RotatorFromAxisAndAngle_ReturnValue;      // 0x01B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x01C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_GetHitResultUnderCursorByChannel_HitResult; // 0x01D4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_GetHitResultUnderCursorByChannel_ReturnValue; // 0x025C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x025D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x025E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25F[0x1];                                      // 0x025F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0268(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0274(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0280(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x028C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x02A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x02BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x02C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x02D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DC[0x4];                                      // 0x02DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x02E0(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_AddInstanceWorldSpace_ReturnValue;        // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(InteractiveGrassManager_BP_C_SpawnFoliage) == 0x000010, "Wrong alignment on InteractiveGrassManager_BP_C_SpawnFoliage");
static_assert(sizeof(InteractiveGrassManager_BP_C_SpawnFoliage) == 0x000320, "Wrong size on InteractiveGrassManager_BP_C_SpawnFoliage");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliage, spawnUnderCursor) == 0x000000, "Member 'InteractiveGrassManager_BP_C_SpawnFoliage::spawnUnderCursor' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliage, locationIfNotUnderCursor) == 0x000004, "Member 'InteractiveGrassManager_BP_C_SpawnFoliage::locationIfNotUnderCursor' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliage, normalIfNotUnderCursor) == 0x000010, "Member 'InteractiveGrassManager_BP_C_SpawnFoliage::normalIfNotUnderCursor' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliage, minScale) == 0x00001C, "Member 'InteractiveGrassManager_BP_C_SpawnFoliage::minScale' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliage, MaxScale) == 0x000028, "Member 'InteractiveGrassManager_BP_C_SpawnFoliage::MaxScale' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliage, foliageToSpawn) == 0x000038, "Member 'InteractiveGrassManager_BP_C_SpawnFoliage::foliageToSpawn' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliage, fromCluster) == 0x000048, "Member 'InteractiveGrassManager_BP_C_SpawnFoliage::fromCluster' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliage, clusterLastIndex) == 0x000049, "Member 'InteractiveGrassManager_BP_C_SpawnFoliage::clusterLastIndex' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliage, Scale) == 0x00004C, "Member 'InteractiveGrassManager_BP_C_SpawnFoliage::Scale' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliage, addedFoliageComp) == 0x000058, "Member 'InteractiveGrassManager_BP_C_SpawnFoliage::addedFoliageComp' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliage, componentToSpawnWith) == 0x000060, "Member 'InteractiveGrassManager_BP_C_SpawnFoliage::componentToSpawnWith' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliage, addedInstanceGrowStartTransform) == 0x000070, "Member 'InteractiveGrassManager_BP_C_SpawnFoliage::addedInstanceGrowStartTransform' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliage, addedInstanceOriginalTransform) == 0x0000A0, "Member 'InteractiveGrassManager_BP_C_SpawnFoliage::addedInstanceOriginalTransform' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliage, addedInstanceIndex) == 0x0000D0, "Member 'InteractiveGrassManager_BP_C_SpawnFoliage::addedInstanceIndex' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliage, spawnNormal) == 0x0000D4, "Member 'InteractiveGrassManager_BP_C_SpawnFoliage::spawnNormal' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliage, whatToSpawn) == 0x0000E0, "Member 'InteractiveGrassManager_BP_C_SpawnFoliage::whatToSpawn' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliage, whereToSpawn) == 0x0000E8, "Member 'InteractiveGrassManager_BP_C_SpawnFoliage::whereToSpawn' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliage, foundFoliageComp) == 0x0000F8, "Member 'InteractiveGrassManager_BP_C_SpawnFoliage::foundFoliageComp' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliage, foundFoliageCompWithThisMesh) == 0x000100, "Member 'InteractiveGrassManager_BP_C_SpawnFoliage::foundFoliageCompWithThisMesh' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliage, Temp_bool_True_if_break_was_hit_Variable) == 0x000101, "Member 'InteractiveGrassManager_BP_C_SpawnFoliage::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliage, CallFunc_Not_PreBool_ReturnValue) == 0x000102, "Member 'InteractiveGrassManager_BP_C_SpawnFoliage::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliage, Temp_int_Array_Index_Variable) == 0x000104, "Member 'InteractiveGrassManager_BP_C_SpawnFoliage::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliage, CallFunc_AddFoliageChunkActor_addedChunk) == 0x000108, "Member 'InteractiveGrassManager_BP_C_SpawnFoliage::CallFunc_AddFoliageChunkActor_addedChunk' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliage, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000110, "Member 'InteractiveGrassManager_BP_C_SpawnFoliage::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliage, K2Node_MakeArray_Array) == 0x000118, "Member 'InteractiveGrassManager_BP_C_SpawnFoliage::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliage, Temp_object_Variable) == 0x000128, "Member 'InteractiveGrassManager_BP_C_SpawnFoliage::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliage, CallFunc_SphereOverlapActors_OutActors) == 0x000138, "Member 'InteractiveGrassManager_BP_C_SpawnFoliage::CallFunc_SphereOverlapActors_OutActors' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliage, CallFunc_SphereOverlapActors_ReturnValue) == 0x000148, "Member 'InteractiveGrassManager_BP_C_SpawnFoliage::CallFunc_SphereOverlapActors_ReturnValue' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliage, CallFunc_Array_Get_Item) == 0x000150, "Member 'InteractiveGrassManager_BP_C_SpawnFoliage::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliage, CallFunc_Array_Length_ReturnValue) == 0x000158, "Member 'InteractiveGrassManager_BP_C_SpawnFoliage::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliage, K2Node_DynamicCast_AsInteractive_Foliage_Chunk_BP) == 0x000160, "Member 'InteractiveGrassManager_BP_C_SpawnFoliage::K2Node_DynamicCast_AsInteractive_Foliage_Chunk_BP' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliage, K2Node_DynamicCast_bSuccess) == 0x000168, "Member 'InteractiveGrassManager_BP_C_SpawnFoliage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliage, Temp_int_Loop_Counter_Variable) == 0x00016C, "Member 'InteractiveGrassManager_BP_C_SpawnFoliage::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliage, CallFunc_Less_IntInt_ReturnValue) == 0x000170, "Member 'InteractiveGrassManager_BP_C_SpawnFoliage::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliage, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000171, "Member 'InteractiveGrassManager_BP_C_SpawnFoliage::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliage, CallFunc_BooleanAND_ReturnValue) == 0x000172, "Member 'InteractiveGrassManager_BP_C_SpawnFoliage::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliage, CallFunc_Add_IntInt_ReturnValue) == 0x000174, "Member 'InteractiveGrassManager_BP_C_SpawnFoliage::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliage, CallFunc_RandomFloatInRange_ReturnValue) == 0x000178, "Member 'InteractiveGrassManager_BP_C_SpawnFoliage::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliage, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x00017C, "Member 'InteractiveGrassManager_BP_C_SpawnFoliage::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliage, CallFunc_RandomFloatInRange_ReturnValue_2) == 0x000180, "Member 'InteractiveGrassManager_BP_C_SpawnFoliage::CallFunc_RandomFloatInRange_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliage, CallFunc_BreakVector_X) == 0x000184, "Member 'InteractiveGrassManager_BP_C_SpawnFoliage::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliage, CallFunc_BreakVector_Y) == 0x000188, "Member 'InteractiveGrassManager_BP_C_SpawnFoliage::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliage, CallFunc_BreakVector_Z) == 0x00018C, "Member 'InteractiveGrassManager_BP_C_SpawnFoliage::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliage, CallFunc_VLerp_ReturnValue) == 0x000190, "Member 'InteractiveGrassManager_BP_C_SpawnFoliage::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliage, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x00019C, "Member 'InteractiveGrassManager_BP_C_SpawnFoliage::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliage, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x0001A0, "Member 'InteractiveGrassManager_BP_C_SpawnFoliage::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliage, CallFunc_RandomFloatInRange_ReturnValue_3) == 0x0001A4, "Member 'InteractiveGrassManager_BP_C_SpawnFoliage::CallFunc_RandomFloatInRange_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliage, CallFunc_MakeRotFromZ_ReturnValue) == 0x0001A8, "Member 'InteractiveGrassManager_BP_C_SpawnFoliage::CallFunc_MakeRotFromZ_ReturnValue' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliage, CallFunc_RotatorFromAxisAndAngle_ReturnValue) == 0x0001B4, "Member 'InteractiveGrassManager_BP_C_SpawnFoliage::CallFunc_RotatorFromAxisAndAngle_ReturnValue' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliage, CallFunc_GetPlayerController_ReturnValue) == 0x0001C0, "Member 'InteractiveGrassManager_BP_C_SpawnFoliage::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliage, CallFunc_ComposeRotators_ReturnValue) == 0x0001C8, "Member 'InteractiveGrassManager_BP_C_SpawnFoliage::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliage, CallFunc_GetHitResultUnderCursorByChannel_HitResult) == 0x0001D4, "Member 'InteractiveGrassManager_BP_C_SpawnFoliage::CallFunc_GetHitResultUnderCursorByChannel_HitResult' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliage, CallFunc_GetHitResultUnderCursorByChannel_ReturnValue) == 0x00025C, "Member 'InteractiveGrassManager_BP_C_SpawnFoliage::CallFunc_GetHitResultUnderCursorByChannel_ReturnValue' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliage, CallFunc_BreakHitResult_bBlockingHit) == 0x00025D, "Member 'InteractiveGrassManager_BP_C_SpawnFoliage::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliage, CallFunc_BreakHitResult_bInitialOverlap) == 0x00025E, "Member 'InteractiveGrassManager_BP_C_SpawnFoliage::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliage, CallFunc_BreakHitResult_Time) == 0x000260, "Member 'InteractiveGrassManager_BP_C_SpawnFoliage::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliage, CallFunc_BreakHitResult_Distance) == 0x000264, "Member 'InteractiveGrassManager_BP_C_SpawnFoliage::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliage, CallFunc_BreakHitResult_Location) == 0x000268, "Member 'InteractiveGrassManager_BP_C_SpawnFoliage::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliage, CallFunc_BreakHitResult_ImpactPoint) == 0x000274, "Member 'InteractiveGrassManager_BP_C_SpawnFoliage::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliage, CallFunc_BreakHitResult_Normal) == 0x000280, "Member 'InteractiveGrassManager_BP_C_SpawnFoliage::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliage, CallFunc_BreakHitResult_ImpactNormal) == 0x00028C, "Member 'InteractiveGrassManager_BP_C_SpawnFoliage::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliage, CallFunc_BreakHitResult_PhysMat) == 0x000298, "Member 'InteractiveGrassManager_BP_C_SpawnFoliage::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliage, CallFunc_BreakHitResult_HitActor) == 0x0002A0, "Member 'InteractiveGrassManager_BP_C_SpawnFoliage::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliage, CallFunc_BreakHitResult_HitComponent) == 0x0002A8, "Member 'InteractiveGrassManager_BP_C_SpawnFoliage::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliage, CallFunc_BreakHitResult_HitBoneName) == 0x0002B0, "Member 'InteractiveGrassManager_BP_C_SpawnFoliage::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliage, CallFunc_BreakHitResult_HitItem) == 0x0002B8, "Member 'InteractiveGrassManager_BP_C_SpawnFoliage::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliage, CallFunc_BreakHitResult_ElementIndex) == 0x0002BC, "Member 'InteractiveGrassManager_BP_C_SpawnFoliage::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliage, CallFunc_BreakHitResult_FaceIndex) == 0x0002C0, "Member 'InteractiveGrassManager_BP_C_SpawnFoliage::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliage, CallFunc_BreakHitResult_TraceStart) == 0x0002C4, "Member 'InteractiveGrassManager_BP_C_SpawnFoliage::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliage, CallFunc_BreakHitResult_TraceEnd) == 0x0002D0, "Member 'InteractiveGrassManager_BP_C_SpawnFoliage::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliage, CallFunc_MakeTransform_ReturnValue) == 0x0002E0, "Member 'InteractiveGrassManager_BP_C_SpawnFoliage::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliage, CallFunc_AddInstanceWorldSpace_ReturnValue) == 0x000310, "Member 'InteractiveGrassManager_BP_C_SpawnFoliage::CallFunc_AddInstanceWorldSpace_ReturnValue' has a wrong offset!");

// Function InteractiveGrassManager_BP.InteractiveGrassManager_BP_C.SpawnFoliageCluster
// 0x0660 (0x0660 - 0x0000)
struct InteractiveGrassManager_BP_C_SpawnFoliageCluster final
{
public:
	struct FVector                                CenterLocation;                                    // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         sizeX_;                                            // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         sizeY_;                                            // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         density_;                                          // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         nonUniformDistribution;                            // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFoliageToSpawn_Struct                 foliageToSpawn;                                    // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                minScale;                                          // 0x0030(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                MaxScale;                                          // 0x003C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          useGrassSpawnAreas;                                // 0x0048(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGrassSpawnArea_BP_C*                   grassSpawnArea;                                    // 0x0050(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          last;                                              // 0x0058(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LastIndex;                                         // 0x005C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGrassSpawnArea_BP_C*                   grassSpawnArea_;                                   // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          useGrassSpawnAreas_;                               // 0x0068(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         sectionAmountY_;                                   // 0x006C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Density;                                           // 0x0070(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SizeY;                                             // 0x0074(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SizeX;                                             // 0x0078(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                maxScale_;                                         // 0x007C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                minScale_;                                         // 0x0088(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFoliageToSpawn_Struct                 foliageToSpawn_;                                   // 0x0098(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         nonUniformDistribution_;                           // 0x00A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                centerLocation_;                                   // 0x00AC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SectionSize_;                                      // 0x00B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         sectionAmountX_;                                   // 0x00BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        spawnLocationOrigins;                              // 0x00C0(0x0010)(Edit, BlueprintVisible)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x00D0(0x0010)(ConstParm, ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable_1;                            // 0x00F0(0x0010)(ConstParm, ReferenceParm)
	TArray<class AActor*>                         Temp_object_Variable_2;                            // 0x0100(0x0010)(ConstParm, ReferenceParm)
	int32                                         Temp_int_Variable;                                 // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_129[0x3];                                      // 0x0129(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0150(0x0010)(ConstParm, ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Array_Get_Item;                           // 0x0168(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0174(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_175[0x3];                                      // 0x0175(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X_1;                          // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0184(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_185[0x3];                                      // 0x0185(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_3;        // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_4;        // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x01B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_5;        // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x01E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_3;             // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x01F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x0200(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0289(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x028A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x028B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakHitResult_Time;                      // 0x028C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0294(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x02A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x02AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x02B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C4[0x4];                                      // 0x02C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x02D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x02EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x02F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0300(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x030C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30D[0x3];                                      // 0x030D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X_3;                          // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_3;                          // 0x0314(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_3;                          // 0x0318(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x031C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_4;                          // 0x0328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_4;                          // 0x032C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_4;                          // 0x0330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_4;                 // 0x0334(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0340(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x03C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C9[0x3];                                      // 0x03C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x03CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x03D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x03D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D2[0x2];                                      // 0x03D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x03D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x03D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x03DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x03E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x03F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x0400(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40C[0x4];                                      // 0x040C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x0410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x0418(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x0420(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x0428(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x0430(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x0434(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x0438(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x043C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x0448(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0454(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ComponentHasTag_ReturnValue;              // 0x0458(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_459[0x3];                                      // 0x0459(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x045C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x0460(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x0464(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x0468(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_5;        // 0x046C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_5;                          // 0x0470(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_5;                          // 0x0474(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_5;                          // 0x0478(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_6;                          // 0x047C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_6;                          // 0x0480(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_6;                          // 0x0484(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_7;                          // 0x0488(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_7;                          // 0x048C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_7;                          // 0x0490(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_6;        // 0x0494(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_7;        // 0x0498(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue_1;          // 0x049C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue_2;          // 0x04A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_4;             // 0x04A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_5;             // 0x04A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_6;        // 0x04AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x04B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue_1;              // 0x04B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x04B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B9[0x3];                                      // 0x04B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x04BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue_3;          // 0x04C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_7;        // 0x04C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_5;                 // 0x04C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Array_Get_Item_1;                         // 0x04D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x04E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_8;                          // 0x04E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_8;                          // 0x04E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_8;                          // 0x04EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x04F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F1[0x3];                                      // 0x04F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_8;        // 0x04F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_6;             // 0x04F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_9;        // 0x04FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_10;       // 0x0500(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_2;         // 0x0504(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_7;             // 0x0508(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_11;       // 0x050C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_3;         // 0x0510(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_6;                 // 0x0514(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_9;                          // 0x0520(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_9;                          // 0x0524(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_9;                          // 0x0528(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x052C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_12;       // 0x0530(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_8;             // 0x0534(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_7;                 // 0x0538(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_8;                 // 0x0544(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit_1;                 // 0x0550(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue_1;            // 0x05D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_2;            // 0x05D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_2;         // 0x05DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5DB[0x1];                                      // 0x05DB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_2;                    // 0x05DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_2;                // 0x05E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_2;                // 0x05E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_2;             // 0x05F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_2;                  // 0x05FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_2;            // 0x0608(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_614[0x4];                                      // 0x0614(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_2;                 // 0x0618(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_2;                // 0x0620(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_2;            // 0x0628(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_2;             // 0x0630(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_2;                 // 0x0638(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_2;            // 0x063C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_2;               // 0x0640(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_2;              // 0x0644(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_2;                // 0x0650(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(InteractiveGrassManager_BP_C_SpawnFoliageCluster) == 0x000008, "Wrong alignment on InteractiveGrassManager_BP_C_SpawnFoliageCluster");
static_assert(sizeof(InteractiveGrassManager_BP_C_SpawnFoliageCluster) == 0x000660, "Wrong size on InteractiveGrassManager_BP_C_SpawnFoliageCluster");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CenterLocation) == 0x000000, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CenterLocation' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, sizeX_) == 0x00000C, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::sizeX_' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, sizeY_) == 0x000010, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::sizeY_' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, density_) == 0x000014, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::density_' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, nonUniformDistribution) == 0x000018, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::nonUniformDistribution' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, foliageToSpawn) == 0x000020, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::foliageToSpawn' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, minScale) == 0x000030, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::minScale' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, MaxScale) == 0x00003C, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::MaxScale' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, useGrassSpawnAreas) == 0x000048, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::useGrassSpawnAreas' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, grassSpawnArea) == 0x000050, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::grassSpawnArea' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, last) == 0x000058, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::last' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, LastIndex) == 0x00005C, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::LastIndex' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, grassSpawnArea_) == 0x000060, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::grassSpawnArea_' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, useGrassSpawnAreas_) == 0x000068, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::useGrassSpawnAreas_' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, sectionAmountY_) == 0x00006C, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::sectionAmountY_' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, Density) == 0x000070, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::Density' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, SizeY) == 0x000074, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::SizeY' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, SizeX) == 0x000078, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::SizeX' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, maxScale_) == 0x00007C, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::maxScale_' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, minScale_) == 0x000088, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::minScale_' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, foliageToSpawn_) == 0x000098, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::foliageToSpawn_' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, nonUniformDistribution_) == 0x0000A8, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::nonUniformDistribution_' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, centerLocation_) == 0x0000AC, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::centerLocation_' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, SectionSize_) == 0x0000B8, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::SectionSize_' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, sectionAmountX_) == 0x0000BC, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::sectionAmountX_' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, spawnLocationOrigins) == 0x0000C0, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::spawnLocationOrigins' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, Temp_object_Variable) == 0x0000D0, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, Temp_int_Loop_Counter_Variable) == 0x0000E0, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_Add_IntInt_ReturnValue) == 0x0000E4, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, Temp_int_Array_Index_Variable) == 0x0000E8, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, Temp_object_Variable_1) == 0x0000F0, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, Temp_object_Variable_2) == 0x000100, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, Temp_int_Variable) == 0x000110, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_Add_IntInt_ReturnValue_1) == 0x000114, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, Temp_int_Loop_Counter_Variable_1) == 0x000118, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_Add_IntInt_ReturnValue_2) == 0x00011C, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, Temp_int_Variable_1) == 0x000120, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_Add_IntInt_ReturnValue_3) == 0x000124, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000128, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_Array_LastIndex_ReturnValue) == 0x00012C, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000130, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_BreakVector_X) == 0x00013C, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_BreakVector_Y) == 0x000140, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_BreakVector_Z) == 0x000144, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000148, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_Add_FloatFloat_ReturnValue) == 0x00014C, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, K2Node_MakeArray_Array) == 0x000150, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, Temp_int_Array_Index_Variable_1) == 0x000160, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_Array_Length_ReturnValue) == 0x000164, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_Array_Get_Item) == 0x000168, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_Less_IntInt_ReturnValue) == 0x000174, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_BreakVector_X_1) == 0x000178, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_BreakVector_Y_1) == 0x00017C, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_BreakVector_Z_1) == 0x000180, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000184, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000188, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x00018C, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000190, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000194, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x000198, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_RandomFloatInRange_ReturnValue) == 0x00019C, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x0001A0, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x0001A4, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_Subtract_FloatFloat_ReturnValue_3) == 0x0001A8, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_Subtract_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x0001AC, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_Subtract_FloatFloat_ReturnValue_4) == 0x0001B0, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_Subtract_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x0001B4, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_MakeVector_ReturnValue) == 0x0001B8, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_Divide_IntInt_ReturnValue) == 0x0001C4, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_BreakVector_X_2) == 0x0001C8, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_BreakVector_Y_2) == 0x0001CC, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_BreakVector_Z_2) == 0x0001D0, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_Subtract_IntInt_ReturnValue) == 0x0001D4, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_Subtract_FloatFloat_ReturnValue_5) == 0x0001D8, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_Subtract_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_Multiply_IntFloat_ReturnValue) == 0x0001DC, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_MakeVector_ReturnValue_1) == 0x0001E0, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_Add_FloatFloat_ReturnValue_3) == 0x0001EC, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_Add_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_MakeVector_ReturnValue_2) == 0x0001F0, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0001FC, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_LineTraceSingleForObjects_OutHit) == 0x000200, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x000288, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000289, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_BreakHitResult_bBlockingHit) == 0x00028A, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_BreakHitResult_bInitialOverlap) == 0x00028B, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_BreakHitResult_Time) == 0x00028C, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_BreakHitResult_Distance) == 0x000290, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_BreakHitResult_Location) == 0x000294, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_BreakHitResult_ImpactPoint) == 0x0002A0, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_BreakHitResult_Normal) == 0x0002AC, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_BreakHitResult_ImpactNormal) == 0x0002B8, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_BreakHitResult_PhysMat) == 0x0002C8, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_BreakHitResult_HitActor) == 0x0002D0, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_BreakHitResult_HitComponent) == 0x0002D8, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_BreakHitResult_HitBoneName) == 0x0002E0, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_BreakHitResult_HitItem) == 0x0002E8, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_BreakHitResult_ElementIndex) == 0x0002EC, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_BreakHitResult_FaceIndex) == 0x0002F0, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_BreakHitResult_TraceStart) == 0x0002F4, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_BreakHitResult_TraceEnd) == 0x000300, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00030C, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_BreakVector_X_3) == 0x000310, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_BreakVector_Y_3) == 0x000314, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_BreakVector_Z_3) == 0x000318, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_MakeVector_ReturnValue_3) == 0x00031C, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_BreakVector_X_4) == 0x000328, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_BreakVector_X_4' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_BreakVector_Y_4) == 0x00032C, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_BreakVector_Y_4' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_BreakVector_Z_4) == 0x000330, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_BreakVector_Z_4' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_MakeVector_ReturnValue_4) == 0x000334, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_MakeVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_LineTraceSingle_OutHit) == 0x000340, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_LineTraceSingle_ReturnValue) == 0x0003C8, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0003CC, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_BreakHitResult_bBlockingHit_1) == 0x0003D0, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x0003D1, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_BreakHitResult_Time_1) == 0x0003D4, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_BreakHitResult_Distance_1) == 0x0003D8, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_BreakHitResult_Location_1) == 0x0003DC, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_BreakHitResult_ImpactPoint_1) == 0x0003E8, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_BreakHitResult_Normal_1) == 0x0003F4, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_BreakHitResult_ImpactNormal_1) == 0x000400, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_BreakHitResult_PhysMat_1) == 0x000410, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_BreakHitResult_HitActor_1) == 0x000418, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_BreakHitResult_HitComponent_1) == 0x000420, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_BreakHitResult_HitBoneName_1) == 0x000428, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_BreakHitResult_HitItem_1) == 0x000430, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_BreakHitResult_ElementIndex_1) == 0x000434, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_BreakHitResult_FaceIndex_1) == 0x000438, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_BreakHitResult_TraceStart_1) == 0x00043C, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_BreakHitResult_TraceEnd_1) == 0x000448, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_FTrunc_ReturnValue) == 0x000454, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_ComponentHasTag_ReturnValue) == 0x000458, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_ComponentHasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x00045C, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x000460, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_FTrunc_ReturnValue_1) == 0x000464, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x000468, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_Multiply_FloatFloat_ReturnValue_5) == 0x00046C, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_Multiply_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_BreakVector_X_5) == 0x000470, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_BreakVector_X_5' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_BreakVector_Y_5) == 0x000474, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_BreakVector_Y_5' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_BreakVector_Z_5) == 0x000478, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_BreakVector_Z_5' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_BreakVector_X_6) == 0x00047C, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_BreakVector_X_6' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_BreakVector_Y_6) == 0x000480, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_BreakVector_Y_6' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_BreakVector_Z_6) == 0x000484, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_BreakVector_Z_6' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_BreakVector_X_7) == 0x000488, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_BreakVector_X_7' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_BreakVector_Y_7) == 0x00048C, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_BreakVector_Y_7' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_BreakVector_Z_7) == 0x000490, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_BreakVector_Z_7' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_Multiply_FloatFloat_ReturnValue_6) == 0x000494, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_Multiply_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_Multiply_FloatFloat_ReturnValue_7) == 0x000498, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_Multiply_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_Multiply_IntFloat_ReturnValue_1) == 0x00049C, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_Multiply_IntFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_Multiply_IntFloat_ReturnValue_2) == 0x0004A0, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_Multiply_IntFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_Add_FloatFloat_ReturnValue_4) == 0x0004A4, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_Add_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_Add_FloatFloat_ReturnValue_5) == 0x0004A8, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_Add_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_Subtract_FloatFloat_ReturnValue_6) == 0x0004AC, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_Subtract_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x0004B0, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_Divide_IntInt_ReturnValue_1) == 0x0004B4, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_Divide_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x0004B8, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x0004BC, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_Multiply_IntFloat_ReturnValue_3) == 0x0004C0, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_Multiply_IntFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_Subtract_FloatFloat_ReturnValue_7) == 0x0004C4, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_Subtract_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_MakeVector_ReturnValue_5) == 0x0004C8, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_MakeVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_Array_Get_Item_1) == 0x0004D4, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_Array_Length_ReturnValue_1) == 0x0004E0, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_BreakVector_X_8) == 0x0004E4, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_BreakVector_X_8' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_BreakVector_Y_8) == 0x0004E8, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_BreakVector_Y_8' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_BreakVector_Z_8) == 0x0004EC, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_BreakVector_Z_8' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_Less_IntInt_ReturnValue_1) == 0x0004F0, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_Subtract_FloatFloat_ReturnValue_8) == 0x0004F4, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_Subtract_FloatFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_Add_FloatFloat_ReturnValue_6) == 0x0004F8, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_Add_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_Subtract_FloatFloat_ReturnValue_9) == 0x0004FC, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_Subtract_FloatFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_Subtract_FloatFloat_ReturnValue_10) == 0x000500, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_Subtract_FloatFloat_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_RandomFloatInRange_ReturnValue_2) == 0x000504, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_RandomFloatInRange_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_Add_FloatFloat_ReturnValue_7) == 0x000508, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_Add_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_Subtract_FloatFloat_ReturnValue_11) == 0x00050C, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_Subtract_FloatFloat_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_RandomFloatInRange_ReturnValue_3) == 0x000510, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_RandomFloatInRange_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_MakeVector_ReturnValue_6) == 0x000514, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_MakeVector_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_BreakVector_X_9) == 0x000520, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_BreakVector_X_9' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_BreakVector_Y_9) == 0x000524, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_BreakVector_Y_9' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_BreakVector_Z_9) == 0x000528, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_BreakVector_Z_9' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_Array_Add_ReturnValue) == 0x00052C, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_Subtract_FloatFloat_ReturnValue_12) == 0x000530, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_Subtract_FloatFloat_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_Add_FloatFloat_ReturnValue_8) == 0x000534, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_Add_FloatFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_MakeVector_ReturnValue_7) == 0x000538, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_MakeVector_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_MakeVector_ReturnValue_8) == 0x000544, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_MakeVector_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_LineTraceSingle_OutHit_1) == 0x000550, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_LineTraceSingle_OutHit_1' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_LineTraceSingle_ReturnValue_1) == 0x0005D8, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_LineTraceSingle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_BreakHitResult_bBlockingHit_2) == 0x0005D9, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_BreakHitResult_bBlockingHit_2' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_BreakHitResult_bInitialOverlap_2) == 0x0005DA, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_BreakHitResult_bInitialOverlap_2' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_BreakHitResult_Time_2) == 0x0005DC, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_BreakHitResult_Time_2' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_BreakHitResult_Distance_2) == 0x0005E0, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_BreakHitResult_Distance_2' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_BreakHitResult_Location_2) == 0x0005E4, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_BreakHitResult_Location_2' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_BreakHitResult_ImpactPoint_2) == 0x0005F0, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_BreakHitResult_ImpactPoint_2' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_BreakHitResult_Normal_2) == 0x0005FC, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_BreakHitResult_Normal_2' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_BreakHitResult_ImpactNormal_2) == 0x000608, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_BreakHitResult_ImpactNormal_2' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_BreakHitResult_PhysMat_2) == 0x000618, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_BreakHitResult_PhysMat_2' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_BreakHitResult_HitActor_2) == 0x000620, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_BreakHitResult_HitActor_2' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_BreakHitResult_HitComponent_2) == 0x000628, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_BreakHitResult_HitComponent_2' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_BreakHitResult_HitBoneName_2) == 0x000630, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_BreakHitResult_HitBoneName_2' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_BreakHitResult_HitItem_2) == 0x000638, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_BreakHitResult_HitItem_2' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_BreakHitResult_ElementIndex_2) == 0x00063C, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_BreakHitResult_ElementIndex_2' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_BreakHitResult_FaceIndex_2) == 0x000640, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_BreakHitResult_FaceIndex_2' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_BreakHitResult_TraceStart_2) == 0x000644, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_BreakHitResult_TraceStart_2' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_SpawnFoliageCluster, CallFunc_BreakHitResult_TraceEnd_2) == 0x000650, "Member 'InteractiveGrassManager_BP_C_SpawnFoliageCluster::CallFunc_BreakHitResult_TraceEnd_2' has a wrong offset!");

// Function InteractiveGrassManager_BP.InteractiveGrassManager_BP_C.GetFreeMaterialInteractionChannel
// 0x0014 (0x0014 - 0x0000)
struct InteractiveGrassManager_BP_C_GetFreeMaterialInteractionChannel final
{
public:
	bool                                          Found;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         foundChannel;                                      // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         foundIndex;                                        // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000C(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x000E(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F[0x1];                                        // 0x000F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(InteractiveGrassManager_BP_C_GetFreeMaterialInteractionChannel) == 0x000004, "Wrong alignment on InteractiveGrassManager_BP_C_GetFreeMaterialInteractionChannel");
static_assert(sizeof(InteractiveGrassManager_BP_C_GetFreeMaterialInteractionChannel) == 0x000014, "Wrong size on InteractiveGrassManager_BP_C_GetFreeMaterialInteractionChannel");
static_assert(offsetof(InteractiveGrassManager_BP_C_GetFreeMaterialInteractionChannel, Found) == 0x000000, "Member 'InteractiveGrassManager_BP_C_GetFreeMaterialInteractionChannel::Found' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_GetFreeMaterialInteractionChannel, foundChannel) == 0x000004, "Member 'InteractiveGrassManager_BP_C_GetFreeMaterialInteractionChannel::foundChannel' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_GetFreeMaterialInteractionChannel, foundIndex) == 0x000008, "Member 'InteractiveGrassManager_BP_C_GetFreeMaterialInteractionChannel::foundIndex' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_GetFreeMaterialInteractionChannel, Temp_bool_Variable) == 0x00000C, "Member 'InteractiveGrassManager_BP_C_GetFreeMaterialInteractionChannel::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_GetFreeMaterialInteractionChannel, CallFunc_NotEqual_IntInt_ReturnValue) == 0x00000D, "Member 'InteractiveGrassManager_BP_C_GetFreeMaterialInteractionChannel::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_GetFreeMaterialInteractionChannel, Temp_bool_Variable_1) == 0x00000E, "Member 'InteractiveGrassManager_BP_C_GetFreeMaterialInteractionChannel::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_GetFreeMaterialInteractionChannel, CallFunc_Array_Find_ReturnValue) == 0x000010, "Member 'InteractiveGrassManager_BP_C_GetFreeMaterialInteractionChannel::CallFunc_Array_Find_ReturnValue' has a wrong offset!");

// Function InteractiveGrassManager_BP.InteractiveGrassManager_BP_C.FreeUpMaterialInteractionChannel
// 0x0070 (0x0070 - 0x0000)
struct InteractiveGrassManager_BP_C_FreeUpMaterialInteractionChannel final
{
public:
	int32                                         nrOfChannel;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         releasingInteractionChannel;                       // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_1;          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(InteractiveGrassManager_BP_C_FreeUpMaterialInteractionChannel) == 0x000008, "Wrong alignment on InteractiveGrassManager_BP_C_FreeUpMaterialInteractionChannel");
static_assert(sizeof(InteractiveGrassManager_BP_C_FreeUpMaterialInteractionChannel) == 0x000070, "Wrong size on InteractiveGrassManager_BP_C_FreeUpMaterialInteractionChannel");
static_assert(offsetof(InteractiveGrassManager_BP_C_FreeUpMaterialInteractionChannel, nrOfChannel) == 0x000000, "Member 'InteractiveGrassManager_BP_C_FreeUpMaterialInteractionChannel::nrOfChannel' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_FreeUpMaterialInteractionChannel, releasingInteractionChannel) == 0x000004, "Member 'InteractiveGrassManager_BP_C_FreeUpMaterialInteractionChannel::releasingInteractionChannel' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_FreeUpMaterialInteractionChannel, Temp_bool_Variable) == 0x000008, "Member 'InteractiveGrassManager_BP_C_FreeUpMaterialInteractionChannel::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_FreeUpMaterialInteractionChannel, CallFunc_MakeVector_ReturnValue) == 0x00000C, "Member 'InteractiveGrassManager_BP_C_FreeUpMaterialInteractionChannel::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_FreeUpMaterialInteractionChannel, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x000018, "Member 'InteractiveGrassManager_BP_C_FreeUpMaterialInteractionChannel::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_FreeUpMaterialInteractionChannel, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'InteractiveGrassManager_BP_C_FreeUpMaterialInteractionChannel::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_FreeUpMaterialInteractionChannel, CallFunc_Conv_IntToString_ReturnValue) == 0x000030, "Member 'InteractiveGrassManager_BP_C_FreeUpMaterialInteractionChannel::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_FreeUpMaterialInteractionChannel, CallFunc_Concat_StrStr_ReturnValue) == 0x000040, "Member 'InteractiveGrassManager_BP_C_FreeUpMaterialInteractionChannel::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_FreeUpMaterialInteractionChannel, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000050, "Member 'InteractiveGrassManager_BP_C_FreeUpMaterialInteractionChannel::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_FreeUpMaterialInteractionChannel, CallFunc_Conv_StringToName_ReturnValue) == 0x000060, "Member 'InteractiveGrassManager_BP_C_FreeUpMaterialInteractionChannel::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_FreeUpMaterialInteractionChannel, CallFunc_Conv_StringToName_ReturnValue_1) == 0x000068, "Member 'InteractiveGrassManager_BP_C_FreeUpMaterialInteractionChannel::CallFunc_Conv_StringToName_ReturnValue_1' has a wrong offset!");

// Function InteractiveGrassManager_BP.InteractiveGrassManager_BP_C.DistanceToViewTarget
// 0x0040 (0x0040 - 0x0000)
struct InteractiveGrassManager_BP_C_DistanceToViewTarget final
{
public:
	struct FVector                                fromLocation;                                      // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Distance;                                          // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetViewTarget_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(InteractiveGrassManager_BP_C_DistanceToViewTarget) == 0x000008, "Wrong alignment on InteractiveGrassManager_BP_C_DistanceToViewTarget");
static_assert(sizeof(InteractiveGrassManager_BP_C_DistanceToViewTarget) == 0x000040, "Wrong size on InteractiveGrassManager_BP_C_DistanceToViewTarget");
static_assert(offsetof(InteractiveGrassManager_BP_C_DistanceToViewTarget, fromLocation) == 0x000000, "Member 'InteractiveGrassManager_BP_C_DistanceToViewTarget::fromLocation' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_DistanceToViewTarget, Distance) == 0x00000C, "Member 'InteractiveGrassManager_BP_C_DistanceToViewTarget::Distance' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_DistanceToViewTarget, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'InteractiveGrassManager_BP_C_DistanceToViewTarget::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_DistanceToViewTarget, CallFunc_GetViewTarget_ReturnValue) == 0x000018, "Member 'InteractiveGrassManager_BP_C_DistanceToViewTarget::CallFunc_GetViewTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_DistanceToViewTarget, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000020, "Member 'InteractiveGrassManager_BP_C_DistanceToViewTarget::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_DistanceToViewTarget, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00002C, "Member 'InteractiveGrassManager_BP_C_DistanceToViewTarget::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_DistanceToViewTarget, CallFunc_VSize_ReturnValue) == 0x000038, "Member 'InteractiveGrassManager_BP_C_DistanceToViewTarget::CallFunc_VSize_ReturnValue' has a wrong offset!");

// Function InteractiveGrassManager_BP.InteractiveGrassManager_BP_C.AddFoliageChunkActor
// 0x0080 (0x0080 - 0x0000)
struct InteractiveGrassManager_BP_C_AddFoliageChunkActor final
{
public:
	struct FVector                                ChunkCenter;                                       // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UINTERACTIVE_FoliageComp_BP_C*          SourceComponent;                                   // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          replaceWithSourceComponent;                        // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          leaveDefaultComponent;                             // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AInteractiveFoliageChunk_BP_C*          addedChunk;                                        // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0030(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AInteractiveFoliageChunk_BP_C*          CallFunc_FinishSpawningActor_ReturnValue;          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(InteractiveGrassManager_BP_C_AddFoliageChunkActor) == 0x000010, "Wrong alignment on InteractiveGrassManager_BP_C_AddFoliageChunkActor");
static_assert(sizeof(InteractiveGrassManager_BP_C_AddFoliageChunkActor) == 0x000080, "Wrong size on InteractiveGrassManager_BP_C_AddFoliageChunkActor");
static_assert(offsetof(InteractiveGrassManager_BP_C_AddFoliageChunkActor, ChunkCenter) == 0x000000, "Member 'InteractiveGrassManager_BP_C_AddFoliageChunkActor::ChunkCenter' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_AddFoliageChunkActor, SourceComponent) == 0x000010, "Member 'InteractiveGrassManager_BP_C_AddFoliageChunkActor::SourceComponent' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_AddFoliageChunkActor, replaceWithSourceComponent) == 0x000018, "Member 'InteractiveGrassManager_BP_C_AddFoliageChunkActor::replaceWithSourceComponent' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_AddFoliageChunkActor, leaveDefaultComponent) == 0x000019, "Member 'InteractiveGrassManager_BP_C_AddFoliageChunkActor::leaveDefaultComponent' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_AddFoliageChunkActor, addedChunk) == 0x000020, "Member 'InteractiveGrassManager_BP_C_AddFoliageChunkActor::addedChunk' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_AddFoliageChunkActor, CallFunc_MakeTransform_ReturnValue) == 0x000030, "Member 'InteractiveGrassManager_BP_C_AddFoliageChunkActor::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_AddFoliageChunkActor, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000060, "Member 'InteractiveGrassManager_BP_C_AddFoliageChunkActor::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_AddFoliageChunkActor, CallFunc_FinishSpawningActor_ReturnValue) == 0x000068, "Member 'InteractiveGrassManager_BP_C_AddFoliageChunkActor::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_AddFoliageChunkActor, CallFunc_Array_Add_ReturnValue) == 0x000070, "Member 'InteractiveGrassManager_BP_C_AddFoliageChunkActor::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function InteractiveGrassManager_BP.InteractiveGrassManager_BP_C.PopulateMapWithGrass
// 0x00B8 (0x00B8 - 0x0000)
struct InteractiveGrassManager_BP_C_PopulateMapWithGrass final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AGrassSpawnArea_BP_C*>           CallFunc_GetAllActorsOfClass_OutActors;            // 0x0018(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGrassSpawnArea_BP_C*                   CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFoliageToSpawnInArea                  CallFunc_Array_Get_Item_1;                         // 0x0040(0x0030)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFoliageToSpawn_Struct                 K2Node_MakeStruct_FoliageToSpawn_Struct;           // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorBounds_Origin;                    // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorBounds_BoxExtent;                 // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(InteractiveGrassManager_BP_C_PopulateMapWithGrass) == 0x000008, "Wrong alignment on InteractiveGrassManager_BP_C_PopulateMapWithGrass");
static_assert(sizeof(InteractiveGrassManager_BP_C_PopulateMapWithGrass) == 0x0000B8, "Wrong size on InteractiveGrassManager_BP_C_PopulateMapWithGrass");
static_assert(offsetof(InteractiveGrassManager_BP_C_PopulateMapWithGrass, Temp_int_Array_Index_Variable) == 0x000000, "Member 'InteractiveGrassManager_BP_C_PopulateMapWithGrass::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_PopulateMapWithGrass, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'InteractiveGrassManager_BP_C_PopulateMapWithGrass::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_PopulateMapWithGrass, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'InteractiveGrassManager_BP_C_PopulateMapWithGrass::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_PopulateMapWithGrass, Temp_int_Array_Index_Variable_1) == 0x00000C, "Member 'InteractiveGrassManager_BP_C_PopulateMapWithGrass::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_PopulateMapWithGrass, Temp_int_Loop_Counter_Variable_1) == 0x000010, "Member 'InteractiveGrassManager_BP_C_PopulateMapWithGrass::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_PopulateMapWithGrass, CallFunc_Add_IntInt_ReturnValue_1) == 0x000014, "Member 'InteractiveGrassManager_BP_C_PopulateMapWithGrass::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_PopulateMapWithGrass, CallFunc_GetAllActorsOfClass_OutActors) == 0x000018, "Member 'InteractiveGrassManager_BP_C_PopulateMapWithGrass::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_PopulateMapWithGrass, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'InteractiveGrassManager_BP_C_PopulateMapWithGrass::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_PopulateMapWithGrass, CallFunc_Array_Get_Item) == 0x000030, "Member 'InteractiveGrassManager_BP_C_PopulateMapWithGrass::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_PopulateMapWithGrass, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'InteractiveGrassManager_BP_C_PopulateMapWithGrass::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_PopulateMapWithGrass, CallFunc_Array_Get_Item_1) == 0x000040, "Member 'InteractiveGrassManager_BP_C_PopulateMapWithGrass::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_PopulateMapWithGrass, CallFunc_Array_Length_ReturnValue_1) == 0x000070, "Member 'InteractiveGrassManager_BP_C_PopulateMapWithGrass::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_PopulateMapWithGrass, CallFunc_Less_IntInt_ReturnValue_1) == 0x000074, "Member 'InteractiveGrassManager_BP_C_PopulateMapWithGrass::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_PopulateMapWithGrass, K2Node_MakeStruct_FoliageToSpawn_Struct) == 0x000078, "Member 'InteractiveGrassManager_BP_C_PopulateMapWithGrass::K2Node_MakeStruct_FoliageToSpawn_Struct' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_PopulateMapWithGrass, CallFunc_GetActorBounds_Origin) == 0x000088, "Member 'InteractiveGrassManager_BP_C_PopulateMapWithGrass::CallFunc_GetActorBounds_Origin' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_PopulateMapWithGrass, CallFunc_GetActorBounds_BoxExtent) == 0x000094, "Member 'InteractiveGrassManager_BP_C_PopulateMapWithGrass::CallFunc_GetActorBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_PopulateMapWithGrass, CallFunc_BreakVector_X) == 0x0000A0, "Member 'InteractiveGrassManager_BP_C_PopulateMapWithGrass::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_PopulateMapWithGrass, CallFunc_BreakVector_Y) == 0x0000A4, "Member 'InteractiveGrassManager_BP_C_PopulateMapWithGrass::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_PopulateMapWithGrass, CallFunc_BreakVector_Z) == 0x0000A8, "Member 'InteractiveGrassManager_BP_C_PopulateMapWithGrass::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_PopulateMapWithGrass, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000AC, "Member 'InteractiveGrassManager_BP_C_PopulateMapWithGrass::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(InteractiveGrassManager_BP_C_PopulateMapWithGrass, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0000B0, "Member 'InteractiveGrassManager_BP_C_PopulateMapWithGrass::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");

}

