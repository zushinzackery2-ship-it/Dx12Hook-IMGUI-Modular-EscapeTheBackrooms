#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Lobby_GS

#include "Basic.hpp"

#include "S_ConnectedPlayer_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "ST_UI_Mission_structs.hpp"
#include "UMG_structs.hpp"
#include "AdvancedSessions_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Lobby_GS.Lobby_GS_C
// 0x00F8 (0x0388 - 0x0290)
class ALobby_GS_C final : public AGameState
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FText                                   CurrentGameMode;                                   // 0x02A0(0x0018)(Edit, BlueprintVisible, Net, DisableEditOnInstance)
	TArray<struct FS_ConnectedPlayer>             PlayersConnected;                                  // 0x02B8(0x0010)(Edit, BlueprintVisible, Net, DisableEditOnInstance, RepNotify, ContainsInstancedReference)
	class FText                                   ServerName;                                        // 0x02C8(0x0018)(Edit, BlueprintVisible, Net, DisableEditOnInstance, RepNotify)
	bool                                          ReadyForLaunch_;                                   // 0x02E0(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	bool                                          Launching_;                                        // 0x02E1(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	uint8                                         Pad_2E2[0x2];                                      // 0x02E2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CurrentLevel;                                      // 0x02E4(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2EC[0x4];                                      // 0x02EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_UI_Mission                         CurrentMissionData;                                // 0x02F0(0x0098)(Edit, BlueprintVisible, Net, DisableEditOnInstance, RepNotify, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Lobby_GS(int32 EntryPoint);
	void UpdateCanJoin(bool CanJoin);
	void OnSuccess_311C34B5477FF004435A3FB2EB96F2B7();
	void OnFailure_311C34B5477FF004435A3FB2EB96F2B7();
	void OnSuccess_BAB015064C915C7C1CCCA3AAB0A02F3B();
	void OnFailure_BAB015064C915C7C1CCCA3AAB0A02F3B();
	void Update_ConnectedPlayers_Array();
	void OnRep_PlayersConnected();
	void Update_ServerName();
	void OnRep_ServerName();
	void Check_EveryoneReady_(bool* CanStart);
	void OnRep_Launching_();
	void OnRep_ReadyForLaunch_();
	void Update_Lobby_StatusIndicator(ESlateVisibility CircularThrobber_Visibility, const class FText& LobbyStatus_Text);
	void Update_Host_ReadyUpButton(const class FText& Text, bool WarningState_);
	void Update_Lobby_PlayerList();
	void Reset_Player_ReadyStatus();
	void UpdateLobbyFromGS();
	void OnRep_Current_GameMode();
	void Set_CurrentMap();
	void Update_Lobby_Launchevent(bool LaunchingGame_);
	void Update_Lobby_VoiceChat(bool CanTalk);
	void OnRep_CurrentMissionData();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Lobby_GS_C">();
	}
	static class ALobby_GS_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ALobby_GS_C>();
	}
};
static_assert(alignof(ALobby_GS_C) == 0x000008, "Wrong alignment on ALobby_GS_C");
static_assert(sizeof(ALobby_GS_C) == 0x000388, "Wrong size on ALobby_GS_C");
static_assert(offsetof(ALobby_GS_C, UberGraphFrame) == 0x000290, "Member 'ALobby_GS_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ALobby_GS_C, DefaultSceneRoot) == 0x000298, "Member 'ALobby_GS_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ALobby_GS_C, CurrentGameMode) == 0x0002A0, "Member 'ALobby_GS_C::CurrentGameMode' has a wrong offset!");
static_assert(offsetof(ALobby_GS_C, PlayersConnected) == 0x0002B8, "Member 'ALobby_GS_C::PlayersConnected' has a wrong offset!");
static_assert(offsetof(ALobby_GS_C, ServerName) == 0x0002C8, "Member 'ALobby_GS_C::ServerName' has a wrong offset!");
static_assert(offsetof(ALobby_GS_C, ReadyForLaunch_) == 0x0002E0, "Member 'ALobby_GS_C::ReadyForLaunch_' has a wrong offset!");
static_assert(offsetof(ALobby_GS_C, Launching_) == 0x0002E1, "Member 'ALobby_GS_C::Launching_' has a wrong offset!");
static_assert(offsetof(ALobby_GS_C, CurrentLevel) == 0x0002E4, "Member 'ALobby_GS_C::CurrentLevel' has a wrong offset!");
static_assert(offsetof(ALobby_GS_C, CurrentMissionData) == 0x0002F0, "Member 'ALobby_GS_C::CurrentMissionData' has a wrong offset!");

}

