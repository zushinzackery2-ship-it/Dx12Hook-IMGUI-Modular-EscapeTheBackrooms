#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MP_PS

#include "Basic.hpp"

#include "MP_PS_classes.hpp"
#include "MP_PS_parameters.hpp"


namespace SDK
{

// Function MP_PS.MP_PS_C.ExecuteUbergraph_MP_PS
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMP_PS_C::ExecuteUbergraph_MP_PS(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MP_PS_C", "ExecuteUbergraph_MP_PS");

	Params::MP_PS_C_ExecuteUbergraph_MP_PS Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MP_PS.MP_PS_C.InvSwap
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index1                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Index2                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMP_PS_C::InvSwap(int32 Index1, int32 Index2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MP_PS_C", "InvSwap");

	Params::MP_PS_C_InvSwap Parms{};

	Parms.Index1 = Index1;
	Parms.Index2 = Index2;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MP_PS.MP_PS_C.UpdateIsTalking
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsTalking_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMP_PS_C::UpdateIsTalking(bool IsTalking_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MP_PS_C", "UpdateIsTalking");

	Params::MP_PS_C_UpdateIsTalking Parms{};

	Parms.IsTalking_0 = IsTalking_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MP_PS.MP_PS_C.UpdateLevel
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Level_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMP_PS_C::UpdateLevel(int32 Level_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MP_PS_C", "UpdateLevel");

	Params::MP_PS_C_UpdateLevel Parms{};

	Parms.Level_0 = Level_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MP_PS.MP_PS_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AMP_PS_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MP_PS_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MP_PS.MP_PS_C.ClearInventory
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void AMP_PS_C::ClearInventory()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MP_PS_C", "ClearInventory");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MP_PS.MP_PS_C.SRV_SetHeadsetType
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_HeadsetType                           HeadsetType_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMP_PS_C::SRV_SetHeadsetType(E_HeadsetType HeadsetType_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MP_PS_C", "SRV_SetHeadsetType");

	Params::MP_PS_C_SRV_SetHeadsetType Parms{};

	Parms.HeadsetType_0 = HeadsetType_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MP_PS.MP_PS_C.RefreshPlayer
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void AMP_PS_C::RefreshPlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MP_PS_C", "RefreshPlayer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MP_PS.MP_PS_C.SRV_AddSanity
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Amount                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMP_PS_C::SRV_AddSanity(float Amount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MP_PS_C", "SRV_AddSanity");

	Params::MP_PS_C_SRV_AddSanity Parms{};

	Parms.Amount = Amount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MP_PS.MP_PS_C.SaveInventory
// (Net, NetReliable, NetServer, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TArray<class FName>&              Inventory                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void AMP_PS_C::SaveInventory(const TArray<class FName>& Inventory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MP_PS_C", "SaveInventory");

	Params::MP_PS_C_SaveInventory Parms{};

	Parms.Inventory = std::move(Inventory);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MP_PS.MP_PS_C.SetInventoryItem
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             Name_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMP_PS_C::SetInventoryItem(int32 Index_0, class FName Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MP_PS_C", "SetInventoryItem");

	Params::MP_PS_C_SetInventoryItem Parms{};

	Parms.Index_0 = Index_0;
	Parms.Name_0 = Name_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MP_PS.MP_PS_C.OnKillPlayer
// (Event, Public, BlueprintEvent)

void AMP_PS_C::OnKillPlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MP_PS_C", "OnKillPlayer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MP_PS.MP_PS_C.LoadPlayerStats
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void AMP_PS_C::LoadPlayerStats()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MP_PS_C", "LoadPlayerStats");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MP_PS.MP_PS_C.SavePlayerStats
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void AMP_PS_C::SavePlayerStats()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MP_PS_C", "SavePlayerStats");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MP_PS.MP_PS_C.ReceiveCopyProperties
// (Event, Protected, BlueprintEvent)
// Parameters:
// class APlayerState*                     NewPlayerState                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMP_PS_C::ReceiveCopyProperties(class APlayerState* NewPlayerState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MP_PS_C", "ReceiveCopyProperties");

	Params::MP_PS_C_ReceiveCopyProperties Parms{};

	Parms.NewPlayerState = NewPlayerState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MP_PS.MP_PS_C.SR_Update_Player_UserProfile
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FS_UserProfile&            Player_UserProfile                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash)

void AMP_PS_C::SR_Update_Player_UserProfile(const struct FS_UserProfile& Player_UserProfile)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MP_PS_C", "SR_Update_Player_UserProfile");

	Params::MP_PS_C_SR_Update_Player_UserProfile Parms{};

	Parms.Player_UserProfile = std::move(Player_UserProfile);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MP_PS.MP_PS_C.SR_Update_Player_ConnectionInfo
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FS_PlayerConnectionInfo&   Player_ConnectionInfo                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMP_PS_C::SR_Update_Player_ConnectionInfo(const struct FS_PlayerConnectionInfo& Player_ConnectionInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MP_PS_C", "SR_Update_Player_ConnectionInfo");

	Params::MP_PS_C_SR_Update_Player_ConnectionInfo Parms{};

	Parms.Player_ConnectionInfo = std::move(Player_ConnectionInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MP_PS.MP_PS_C.OnRep_Kills
// (BlueprintCallable, BlueprintEvent)

void AMP_PS_C::OnRep_Kills()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MP_PS_C", "OnRep_Kills");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MP_PS.MP_PS_C.OnRep_Points
// (BlueprintCallable, BlueprintEvent)

void AMP_PS_C::OnRep_Points()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MP_PS_C", "OnRep_Points");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MP_PS.MP_PS_C.OnRep_PlayerConnection
// (BlueprintCallable, BlueprintEvent)

void AMP_PS_C::OnRep_PlayerConnection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MP_PS_C", "OnRep_PlayerConnection");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MP_PS.MP_PS_C.OnRep_Player_ConnectionInfo_OR
// (Public, BlueprintCallable, BlueprintEvent)

void AMP_PS_C::OnRep_Player_ConnectionInfo_OR()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MP_PS_C", "OnRep_Player_ConnectionInfo_OR");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MP_PS.MP_PS_C.OnRep_Player_UserProfile_OR
// (Public, BlueprintCallable, BlueprintEvent)

void AMP_PS_C::OnRep_Player_UserProfile_OR()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MP_PS_C", "OnRep_Player_UserProfile_OR");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MP_PS.MP_PS_C.OnRep_UserInfo
// (BlueprintCallable, BlueprintEvent)

void AMP_PS_C::OnRep_UserInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MP_PS_C", "OnRep_UserInfo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MP_PS.MP_PS_C.Load_Player_UserProfile
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AMP_PS_C::Load_Player_UserProfile()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MP_PS_C", "Load_Player_UserProfile");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MP_PS.MP_PS_C.Load_Player_ConnectionInfo
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Client_ReadyStatus                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMP_PS_C::Load_Player_ConnectionInfo(bool Client_ReadyStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MP_PS_C", "Load_Player_ConnectionInfo");

	Params::MP_PS_C_Load_Player_ConnectionInfo Parms{};

	Parms.Client_ReadyStatus = Client_ReadyStatus;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MP_PS.MP_PS_C.SavePlayer
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ForceSave                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMP_PS_C::SavePlayer(bool ForceSave)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MP_PS_C", "SavePlayer");

	Params::MP_PS_C_SavePlayer Parms{};

	Parms.ForceSave = ForceSave;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MP_PS.MP_PS_C.LoadPlayer
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AMP_PS_C::LoadPlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MP_PS_C", "LoadPlayer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MP_PS.MP_PS_C.OnRep_Level
// (BlueprintCallable, BlueprintEvent)

void AMP_PS_C::OnRep_Level()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MP_PS_C", "OnRep_Level");

	UObject::ProcessEvent(Func, nullptr);
}

}

