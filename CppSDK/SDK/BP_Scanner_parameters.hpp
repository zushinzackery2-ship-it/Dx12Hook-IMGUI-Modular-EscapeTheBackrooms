#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Scanner

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Backrooms_structs.hpp"


namespace SDK::Params
{

// Function BP_Scanner.BP_Scanner_C.ExecuteUbergraph_BP_Scanner
// 0x0560 (0x0560 - 0x0000)
struct BP_Scanner_C_ExecuteUbergraph_BP_Scanner final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABPCharacter_Demo_C*                    K2Node_DynamicCast_AsBPCharacter_Demo;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_Enable;                         // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bEnable_1;                      // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bEnable;                        // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FTargetsStruct>                 K2Node_ComponentBoundEvent_OutTargets;             // 0x0020(0x0010)(ReferenceParm, ContainsInstancedReference)
	struct FTelemetryStruct                       K2Node_ComponentBoundEvent_OutTelemetry;           // 0x0030(0x0008)(NoDestructor)
	float                                         K2Node_CustomEvent_NewDistance;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0040(0x0018)()
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0060(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00A0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x00B0(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00C8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00E0(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0120(0x0010)(ReferenceParm)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0138(0x0018)()
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue_1;           // 0x0150(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0168(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x01A8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x01B8(0x0018)()
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x01D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue_2;           // 0x01E0(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x01F8(0x0040)(HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23C[0x4];                                      // 0x023C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_3;                          // 0x0240(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_3;                     // 0x0250(0x0018)()
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array_4;                          // 0x0278(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_ScannerTraceCalc_TraceStart;              // 0x0288(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ScannerTraceCalc_TraceEnd;                // 0x0294(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_BeamStart;                      // 0x02A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_BeamEnd;                        // 0x02AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B9[0x3];                                      // 0x02B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_UpdateMinDistance_ReturnValue;            // 0x02BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x02C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C9[0x3];                                      // 0x02C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x02CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array_5;                          // 0x02D8(0x0010)(ConstParm, ReferenceParm)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x02E8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_371[0x3];                                      // 0x0371(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_Vector2DToVector_ReturnValue;        // 0x0374(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_FindCollisionUVSkeletalMesh_UV;           // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindCollisionUVSkeletalMesh_ReturnValue;  // 0x0388(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_389[0x3];                                      // 0x0389(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x038C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x039C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x039D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39E[0x2];                                      // 0x039E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x03A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x03A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x03A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x03B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x03C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x03CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x03D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x03E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x03E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x03F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x03FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0400(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0404(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0410(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_FindCollisionUV_UV;                       // 0x041C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindCollisionUV_ReturnValue;              // 0x0424(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_425[0x3];                                      // 0x0425(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FixUVStretching_FixedSize;                // 0x0428(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_FixUVStretching_FixedStretch;             // 0x042C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue_1;   // 0x0438(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0448(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0449(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x044A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44B[0x1];                                      // 0x044B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_3;          // 0x044C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0450(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_451[0x3];                                      // 0x0451(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0454(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_464[0x4];                                      // 0x0464(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0468(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0470(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0474(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_475[0x3];                                      // 0x0475(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureRenderTarget2D*                 CallFunc_CheckForExistingRT_RenderTarget;          // 0x0478(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0480(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_481[0x3];                                      // 0x0481(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0484(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_ColorToLinearColor_ReturnValue;      // 0x0488(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_ColorToLinearColor_ReturnValue_1;    // 0x0498(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x04A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x04AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAttached_ReturnValue;          // 0x04B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue;           // 0x04B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_CustomEvent_HitResult;                      // 0x04C0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FColor                                 K2Node_CustomEvent_Color;                          // 0x0548(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54C[0x4];                                      // 0x054C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ScannerDirector_C*                  CallFunc_GetActorOfClass_ReturnValue;              // 0x0550(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_ScannerDirector_C*                  CallFunc_GetActorOfClass_ReturnValue_1;            // 0x0558(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Scanner_C_ExecuteUbergraph_BP_Scanner) == 0x000008, "Wrong alignment on BP_Scanner_C_ExecuteUbergraph_BP_Scanner");
static_assert(sizeof(BP_Scanner_C_ExecuteUbergraph_BP_Scanner) == 0x000560, "Wrong size on BP_Scanner_C_ExecuteUbergraph_BP_Scanner");
static_assert(offsetof(BP_Scanner_C_ExecuteUbergraph_BP_Scanner, EntryPoint) == 0x000000, "Member 'BP_Scanner_C_ExecuteUbergraph_BP_Scanner::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ExecuteUbergraph_BP_Scanner, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_Scanner_C_ExecuteUbergraph_BP_Scanner::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ExecuteUbergraph_BP_Scanner, K2Node_DynamicCast_AsBPCharacter_Demo) == 0x000010, "Member 'BP_Scanner_C_ExecuteUbergraph_BP_Scanner::K2Node_DynamicCast_AsBPCharacter_Demo' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ExecuteUbergraph_BP_Scanner, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_Scanner_C_ExecuteUbergraph_BP_Scanner::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ExecuteUbergraph_BP_Scanner, K2Node_CustomEvent_Enable) == 0x000019, "Member 'BP_Scanner_C_ExecuteUbergraph_BP_Scanner::K2Node_CustomEvent_Enable' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ExecuteUbergraph_BP_Scanner, K2Node_CustomEvent_bEnable_1) == 0x00001A, "Member 'BP_Scanner_C_ExecuteUbergraph_BP_Scanner::K2Node_CustomEvent_bEnable_1' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ExecuteUbergraph_BP_Scanner, K2Node_CustomEvent_bEnable) == 0x00001B, "Member 'BP_Scanner_C_ExecuteUbergraph_BP_Scanner::K2Node_CustomEvent_bEnable' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ExecuteUbergraph_BP_Scanner, CallFunc_BooleanAND_ReturnValue) == 0x00001C, "Member 'BP_Scanner_C_ExecuteUbergraph_BP_Scanner::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ExecuteUbergraph_BP_Scanner, K2Node_ComponentBoundEvent_OutTargets) == 0x000020, "Member 'BP_Scanner_C_ExecuteUbergraph_BP_Scanner::K2Node_ComponentBoundEvent_OutTargets' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ExecuteUbergraph_BP_Scanner, K2Node_ComponentBoundEvent_OutTelemetry) == 0x000030, "Member 'BP_Scanner_C_ExecuteUbergraph_BP_Scanner::K2Node_ComponentBoundEvent_OutTelemetry' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ExecuteUbergraph_BP_Scanner, K2Node_CustomEvent_NewDistance) == 0x000038, "Member 'BP_Scanner_C_ExecuteUbergraph_BP_Scanner::K2Node_CustomEvent_NewDistance' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ExecuteUbergraph_BP_Scanner, CallFunc_FClamp_ReturnValue) == 0x00003C, "Member 'BP_Scanner_C_ExecuteUbergraph_BP_Scanner::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ExecuteUbergraph_BP_Scanner, CallFunc_Conv_IntToText_ReturnValue) == 0x000040, "Member 'BP_Scanner_C_ExecuteUbergraph_BP_Scanner::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ExecuteUbergraph_BP_Scanner, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000058, "Member 'BP_Scanner_C_ExecuteUbergraph_BP_Scanner::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ExecuteUbergraph_BP_Scanner, K2Node_MakeStruct_FormatArgumentData) == 0x000060, "Member 'BP_Scanner_C_ExecuteUbergraph_BP_Scanner::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ExecuteUbergraph_BP_Scanner, K2Node_MakeArray_Array) == 0x0000A0, "Member 'BP_Scanner_C_ExecuteUbergraph_BP_Scanner::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ExecuteUbergraph_BP_Scanner, CallFunc_Conv_FloatToText_ReturnValue) == 0x0000B0, "Member 'BP_Scanner_C_ExecuteUbergraph_BP_Scanner::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ExecuteUbergraph_BP_Scanner, CallFunc_Format_ReturnValue) == 0x0000C8, "Member 'BP_Scanner_C_ExecuteUbergraph_BP_Scanner::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ExecuteUbergraph_BP_Scanner, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000E0, "Member 'BP_Scanner_C_ExecuteUbergraph_BP_Scanner::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ExecuteUbergraph_BP_Scanner, K2Node_MakeArray_Array_1) == 0x000120, "Member 'BP_Scanner_C_ExecuteUbergraph_BP_Scanner::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ExecuteUbergraph_BP_Scanner, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000130, "Member 'BP_Scanner_C_ExecuteUbergraph_BP_Scanner::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ExecuteUbergraph_BP_Scanner, CallFunc_Format_ReturnValue_1) == 0x000138, "Member 'BP_Scanner_C_ExecuteUbergraph_BP_Scanner::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ExecuteUbergraph_BP_Scanner, CallFunc_Conv_FloatToText_ReturnValue_1) == 0x000150, "Member 'BP_Scanner_C_ExecuteUbergraph_BP_Scanner::CallFunc_Conv_FloatToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ExecuteUbergraph_BP_Scanner, K2Node_MakeStruct_FormatArgumentData_2) == 0x000168, "Member 'BP_Scanner_C_ExecuteUbergraph_BP_Scanner::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ExecuteUbergraph_BP_Scanner, K2Node_MakeArray_Array_2) == 0x0001A8, "Member 'BP_Scanner_C_ExecuteUbergraph_BP_Scanner::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ExecuteUbergraph_BP_Scanner, CallFunc_Format_ReturnValue_2) == 0x0001B8, "Member 'BP_Scanner_C_ExecuteUbergraph_BP_Scanner::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ExecuteUbergraph_BP_Scanner, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0001D0, "Member 'BP_Scanner_C_ExecuteUbergraph_BP_Scanner::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ExecuteUbergraph_BP_Scanner, CallFunc_VSize_ReturnValue) == 0x0001DC, "Member 'BP_Scanner_C_ExecuteUbergraph_BP_Scanner::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ExecuteUbergraph_BP_Scanner, CallFunc_Conv_FloatToText_ReturnValue_2) == 0x0001E0, "Member 'BP_Scanner_C_ExecuteUbergraph_BP_Scanner::CallFunc_Conv_FloatToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ExecuteUbergraph_BP_Scanner, K2Node_MakeStruct_FormatArgumentData_3) == 0x0001F8, "Member 'BP_Scanner_C_ExecuteUbergraph_BP_Scanner::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ExecuteUbergraph_BP_Scanner, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x000238, "Member 'BP_Scanner_C_ExecuteUbergraph_BP_Scanner::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ExecuteUbergraph_BP_Scanner, K2Node_MakeArray_Array_3) == 0x000240, "Member 'BP_Scanner_C_ExecuteUbergraph_BP_Scanner::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ExecuteUbergraph_BP_Scanner, CallFunc_Format_ReturnValue_3) == 0x000250, "Member 'BP_Scanner_C_ExecuteUbergraph_BP_Scanner::CallFunc_Format_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ExecuteUbergraph_BP_Scanner, CallFunc_GetMaterial_ReturnValue) == 0x000268, "Member 'BP_Scanner_C_ExecuteUbergraph_BP_Scanner::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ExecuteUbergraph_BP_Scanner, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000270, "Member 'BP_Scanner_C_ExecuteUbergraph_BP_Scanner::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ExecuteUbergraph_BP_Scanner, K2Node_MakeArray_Array_4) == 0x000278, "Member 'BP_Scanner_C_ExecuteUbergraph_BP_Scanner::K2Node_MakeArray_Array_4' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ExecuteUbergraph_BP_Scanner, CallFunc_ScannerTraceCalc_TraceStart) == 0x000288, "Member 'BP_Scanner_C_ExecuteUbergraph_BP_Scanner::CallFunc_ScannerTraceCalc_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ExecuteUbergraph_BP_Scanner, CallFunc_ScannerTraceCalc_TraceEnd) == 0x000294, "Member 'BP_Scanner_C_ExecuteUbergraph_BP_Scanner::CallFunc_ScannerTraceCalc_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ExecuteUbergraph_BP_Scanner, K2Node_CustomEvent_BeamStart) == 0x0002A0, "Member 'BP_Scanner_C_ExecuteUbergraph_BP_Scanner::K2Node_CustomEvent_BeamStart' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ExecuteUbergraph_BP_Scanner, K2Node_CustomEvent_BeamEnd) == 0x0002AC, "Member 'BP_Scanner_C_ExecuteUbergraph_BP_Scanner::K2Node_CustomEvent_BeamEnd' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ExecuteUbergraph_BP_Scanner, CallFunc_HasAuthority_ReturnValue) == 0x0002B8, "Member 'BP_Scanner_C_ExecuteUbergraph_BP_Scanner::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ExecuteUbergraph_BP_Scanner, CallFunc_UpdateMinDistance_ReturnValue) == 0x0002BC, "Member 'BP_Scanner_C_ExecuteUbergraph_BP_Scanner::CallFunc_UpdateMinDistance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ExecuteUbergraph_BP_Scanner, Temp_int_Variable) == 0x0002C0, "Member 'BP_Scanner_C_ExecuteUbergraph_BP_Scanner::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ExecuteUbergraph_BP_Scanner, CallFunc_Percent_IntInt_ReturnValue) == 0x0002C4, "Member 'BP_Scanner_C_ExecuteUbergraph_BP_Scanner::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ExecuteUbergraph_BP_Scanner, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0002C8, "Member 'BP_Scanner_C_ExecuteUbergraph_BP_Scanner::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ExecuteUbergraph_BP_Scanner, K2Node_Event_DeltaSeconds) == 0x0002CC, "Member 'BP_Scanner_C_ExecuteUbergraph_BP_Scanner::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ExecuteUbergraph_BP_Scanner, CallFunc_GetOwner_ReturnValue_1) == 0x0002D0, "Member 'BP_Scanner_C_ExecuteUbergraph_BP_Scanner::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ExecuteUbergraph_BP_Scanner, K2Node_MakeArray_Array_5) == 0x0002D8, "Member 'BP_Scanner_C_ExecuteUbergraph_BP_Scanner::K2Node_MakeArray_Array_5' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ExecuteUbergraph_BP_Scanner, CallFunc_LineTraceSingleForObjects_OutHit) == 0x0002E8, "Member 'BP_Scanner_C_ExecuteUbergraph_BP_Scanner::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ExecuteUbergraph_BP_Scanner, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x000370, "Member 'BP_Scanner_C_ExecuteUbergraph_BP_Scanner::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ExecuteUbergraph_BP_Scanner, CallFunc_Conv_Vector2DToVector_ReturnValue) == 0x000374, "Member 'BP_Scanner_C_ExecuteUbergraph_BP_Scanner::CallFunc_Conv_Vector2DToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ExecuteUbergraph_BP_Scanner, CallFunc_FindCollisionUVSkeletalMesh_UV) == 0x000380, "Member 'BP_Scanner_C_ExecuteUbergraph_BP_Scanner::CallFunc_FindCollisionUVSkeletalMesh_UV' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ExecuteUbergraph_BP_Scanner, CallFunc_FindCollisionUVSkeletalMesh_ReturnValue) == 0x000388, "Member 'BP_Scanner_C_ExecuteUbergraph_BP_Scanner::CallFunc_FindCollisionUVSkeletalMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ExecuteUbergraph_BP_Scanner, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x00038C, "Member 'BP_Scanner_C_ExecuteUbergraph_BP_Scanner::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ExecuteUbergraph_BP_Scanner, CallFunc_BreakHitResult_bBlockingHit) == 0x00039C, "Member 'BP_Scanner_C_ExecuteUbergraph_BP_Scanner::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ExecuteUbergraph_BP_Scanner, CallFunc_BreakHitResult_bInitialOverlap) == 0x00039D, "Member 'BP_Scanner_C_ExecuteUbergraph_BP_Scanner::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ExecuteUbergraph_BP_Scanner, CallFunc_BreakHitResult_Time) == 0x0003A0, "Member 'BP_Scanner_C_ExecuteUbergraph_BP_Scanner::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ExecuteUbergraph_BP_Scanner, CallFunc_BreakHitResult_Distance) == 0x0003A4, "Member 'BP_Scanner_C_ExecuteUbergraph_BP_Scanner::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ExecuteUbergraph_BP_Scanner, CallFunc_BreakHitResult_Location) == 0x0003A8, "Member 'BP_Scanner_C_ExecuteUbergraph_BP_Scanner::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ExecuteUbergraph_BP_Scanner, CallFunc_BreakHitResult_ImpactPoint) == 0x0003B4, "Member 'BP_Scanner_C_ExecuteUbergraph_BP_Scanner::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ExecuteUbergraph_BP_Scanner, CallFunc_BreakHitResult_Normal) == 0x0003C0, "Member 'BP_Scanner_C_ExecuteUbergraph_BP_Scanner::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ExecuteUbergraph_BP_Scanner, CallFunc_BreakHitResult_ImpactNormal) == 0x0003CC, "Member 'BP_Scanner_C_ExecuteUbergraph_BP_Scanner::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ExecuteUbergraph_BP_Scanner, CallFunc_BreakHitResult_PhysMat) == 0x0003D8, "Member 'BP_Scanner_C_ExecuteUbergraph_BP_Scanner::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ExecuteUbergraph_BP_Scanner, CallFunc_BreakHitResult_HitActor) == 0x0003E0, "Member 'BP_Scanner_C_ExecuteUbergraph_BP_Scanner::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ExecuteUbergraph_BP_Scanner, CallFunc_BreakHitResult_HitComponent) == 0x0003E8, "Member 'BP_Scanner_C_ExecuteUbergraph_BP_Scanner::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ExecuteUbergraph_BP_Scanner, CallFunc_BreakHitResult_HitBoneName) == 0x0003F0, "Member 'BP_Scanner_C_ExecuteUbergraph_BP_Scanner::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ExecuteUbergraph_BP_Scanner, CallFunc_BreakHitResult_HitItem) == 0x0003F8, "Member 'BP_Scanner_C_ExecuteUbergraph_BP_Scanner::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ExecuteUbergraph_BP_Scanner, CallFunc_BreakHitResult_ElementIndex) == 0x0003FC, "Member 'BP_Scanner_C_ExecuteUbergraph_BP_Scanner::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ExecuteUbergraph_BP_Scanner, CallFunc_BreakHitResult_FaceIndex) == 0x000400, "Member 'BP_Scanner_C_ExecuteUbergraph_BP_Scanner::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ExecuteUbergraph_BP_Scanner, CallFunc_BreakHitResult_TraceStart) == 0x000404, "Member 'BP_Scanner_C_ExecuteUbergraph_BP_Scanner::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ExecuteUbergraph_BP_Scanner, CallFunc_BreakHitResult_TraceEnd) == 0x000410, "Member 'BP_Scanner_C_ExecuteUbergraph_BP_Scanner::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ExecuteUbergraph_BP_Scanner, CallFunc_FindCollisionUV_UV) == 0x00041C, "Member 'BP_Scanner_C_ExecuteUbergraph_BP_Scanner::CallFunc_FindCollisionUV_UV' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ExecuteUbergraph_BP_Scanner, CallFunc_FindCollisionUV_ReturnValue) == 0x000424, "Member 'BP_Scanner_C_ExecuteUbergraph_BP_Scanner::CallFunc_FindCollisionUV_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ExecuteUbergraph_BP_Scanner, CallFunc_FixUVStretching_FixedSize) == 0x000428, "Member 'BP_Scanner_C_ExecuteUbergraph_BP_Scanner::CallFunc_FixUVStretching_FixedSize' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ExecuteUbergraph_BP_Scanner, CallFunc_FixUVStretching_FixedStretch) == 0x00042C, "Member 'BP_Scanner_C_ExecuteUbergraph_BP_Scanner::CallFunc_FixUVStretching_FixedStretch' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ExecuteUbergraph_BP_Scanner, CallFunc_Conv_VectorToLinearColor_ReturnValue_1) == 0x000438, "Member 'BP_Scanner_C_ExecuteUbergraph_BP_Scanner::CallFunc_Conv_VectorToLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ExecuteUbergraph_BP_Scanner, CallFunc_IsValid_ReturnValue) == 0x000448, "Member 'BP_Scanner_C_ExecuteUbergraph_BP_Scanner::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ExecuteUbergraph_BP_Scanner, CallFunc_IsValid_ReturnValue_1) == 0x000449, "Member 'BP_Scanner_C_ExecuteUbergraph_BP_Scanner::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ExecuteUbergraph_BP_Scanner, Temp_bool_IsClosed_Variable) == 0x00044A, "Member 'BP_Scanner_C_ExecuteUbergraph_BP_Scanner::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ExecuteUbergraph_BP_Scanner, CallFunc_Divide_FloatFloat_ReturnValue_3) == 0x00044C, "Member 'BP_Scanner_C_ExecuteUbergraph_BP_Scanner::CallFunc_Divide_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ExecuteUbergraph_BP_Scanner, Temp_bool_Has_Been_Initd_Variable) == 0x000450, "Member 'BP_Scanner_C_ExecuteUbergraph_BP_Scanner::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ExecuteUbergraph_BP_Scanner, K2Node_CreateDelegate_OutputDelegate) == 0x000454, "Member 'BP_Scanner_C_ExecuteUbergraph_BP_Scanner::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ExecuteUbergraph_BP_Scanner, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000468, "Member 'BP_Scanner_C_ExecuteUbergraph_BP_Scanner::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ExecuteUbergraph_BP_Scanner, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000470, "Member 'BP_Scanner_C_ExecuteUbergraph_BP_Scanner::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ExecuteUbergraph_BP_Scanner, Temp_bool_Variable) == 0x000474, "Member 'BP_Scanner_C_ExecuteUbergraph_BP_Scanner::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ExecuteUbergraph_BP_Scanner, CallFunc_CheckForExistingRT_RenderTarget) == 0x000478, "Member 'BP_Scanner_C_ExecuteUbergraph_BP_Scanner::CallFunc_CheckForExistingRT_RenderTarget' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ExecuteUbergraph_BP_Scanner, CallFunc_IsValid_ReturnValue_2) == 0x000480, "Member 'BP_Scanner_C_ExecuteUbergraph_BP_Scanner::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ExecuteUbergraph_BP_Scanner, CallFunc_Add_IntInt_ReturnValue) == 0x000484, "Member 'BP_Scanner_C_ExecuteUbergraph_BP_Scanner::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ExecuteUbergraph_BP_Scanner, CallFunc_Conv_ColorToLinearColor_ReturnValue) == 0x000488, "Member 'BP_Scanner_C_ExecuteUbergraph_BP_Scanner::CallFunc_Conv_ColorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ExecuteUbergraph_BP_Scanner, CallFunc_Conv_ColorToLinearColor_ReturnValue_1) == 0x000498, "Member 'BP_Scanner_C_ExecuteUbergraph_BP_Scanner::CallFunc_Conv_ColorToLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ExecuteUbergraph_BP_Scanner, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0004A8, "Member 'BP_Scanner_C_ExecuteUbergraph_BP_Scanner::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ExecuteUbergraph_BP_Scanner, K2Node_Select_Default) == 0x0004AC, "Member 'BP_Scanner_C_ExecuteUbergraph_BP_Scanner::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ExecuteUbergraph_BP_Scanner, CallFunc_SpawnSystemAttached_ReturnValue) == 0x0004B0, "Member 'BP_Scanner_C_ExecuteUbergraph_BP_Scanner::CallFunc_SpawnSystemAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ExecuteUbergraph_BP_Scanner, CallFunc_SpawnSoundAttached_ReturnValue) == 0x0004B8, "Member 'BP_Scanner_C_ExecuteUbergraph_BP_Scanner::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ExecuteUbergraph_BP_Scanner, K2Node_CustomEvent_HitResult) == 0x0004C0, "Member 'BP_Scanner_C_ExecuteUbergraph_BP_Scanner::K2Node_CustomEvent_HitResult' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ExecuteUbergraph_BP_Scanner, K2Node_CustomEvent_Color) == 0x000548, "Member 'BP_Scanner_C_ExecuteUbergraph_BP_Scanner::K2Node_CustomEvent_Color' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ExecuteUbergraph_BP_Scanner, CallFunc_GetActorOfClass_ReturnValue) == 0x000550, "Member 'BP_Scanner_C_ExecuteUbergraph_BP_Scanner::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ExecuteUbergraph_BP_Scanner, CallFunc_GetActorOfClass_ReturnValue_1) == 0x000558, "Member 'BP_Scanner_C_ExecuteUbergraph_BP_Scanner::CallFunc_GetActorOfClass_ReturnValue_1' has a wrong offset!");

// Function BP_Scanner.BP_Scanner_C.SRV_Lidar
// 0x008C (0x008C - 0x0000)
struct BP_Scanner_C_SRV_Lidar final
{
public:
	struct FHitResult                             HitResult;                                         // 0x0000(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FColor                                 Color;                                             // 0x0088(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Scanner_C_SRV_Lidar) == 0x000004, "Wrong alignment on BP_Scanner_C_SRV_Lidar");
static_assert(sizeof(BP_Scanner_C_SRV_Lidar) == 0x00008C, "Wrong size on BP_Scanner_C_SRV_Lidar");
static_assert(offsetof(BP_Scanner_C_SRV_Lidar, HitResult) == 0x000000, "Member 'BP_Scanner_C_SRV_Lidar::HitResult' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_SRV_Lidar, Color) == 0x000088, "Member 'BP_Scanner_C_SRV_Lidar::Color' has a wrong offset!");

// Function BP_Scanner.BP_Scanner_C.SpawnScannerBeam
// 0x0018 (0x0018 - 0x0000)
struct BP_Scanner_C_SpawnScannerBeam final
{
public:
	struct FVector                                BeamStart;                                         // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BeamEnd;                                           // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Scanner_C_SpawnScannerBeam) == 0x000004, "Wrong alignment on BP_Scanner_C_SpawnScannerBeam");
static_assert(sizeof(BP_Scanner_C_SpawnScannerBeam) == 0x000018, "Wrong size on BP_Scanner_C_SpawnScannerBeam");
static_assert(offsetof(BP_Scanner_C_SpawnScannerBeam, BeamStart) == 0x000000, "Member 'BP_Scanner_C_SpawnScannerBeam::BeamStart' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_SpawnScannerBeam, BeamEnd) == 0x00000C, "Member 'BP_Scanner_C_SpawnScannerBeam::BeamEnd' has a wrong offset!");

// Function BP_Scanner.BP_Scanner_C.SetScanDistance
// 0x0004 (0x0004 - 0x0000)
struct BP_Scanner_C_SetScanDistance final
{
public:
	float                                         NewDistance;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Scanner_C_SetScanDistance) == 0x000004, "Wrong alignment on BP_Scanner_C_SetScanDistance");
static_assert(sizeof(BP_Scanner_C_SetScanDistance) == 0x000004, "Wrong size on BP_Scanner_C_SetScanDistance");
static_assert(offsetof(BP_Scanner_C_SetScanDistance, NewDistance) == 0x000000, "Member 'BP_Scanner_C_SetScanDistance::NewDistance' has a wrong offset!");

// Function BP_Scanner.BP_Scanner_C.BndEvt__BP_Scanner_BP_ScannerComponent_K2Node_ComponentBoundEvent_1_ScannerWaveUpdateDelegate__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct BP_Scanner_C_BndEvt__BP_Scanner_BP_ScannerComponent_K2Node_ComponentBoundEvent_1_ScannerWaveUpdateDelegate__DelegateSignature final
{
public:
	TArray<struct FTargetsStruct>                 OutTargets;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	struct FTelemetryStruct                       OutTelemetry;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(BP_Scanner_C_BndEvt__BP_Scanner_BP_ScannerComponent_K2Node_ComponentBoundEvent_1_ScannerWaveUpdateDelegate__DelegateSignature) == 0x000008, "Wrong alignment on BP_Scanner_C_BndEvt__BP_Scanner_BP_ScannerComponent_K2Node_ComponentBoundEvent_1_ScannerWaveUpdateDelegate__DelegateSignature");
static_assert(sizeof(BP_Scanner_C_BndEvt__BP_Scanner_BP_ScannerComponent_K2Node_ComponentBoundEvent_1_ScannerWaveUpdateDelegate__DelegateSignature) == 0x000018, "Wrong size on BP_Scanner_C_BndEvt__BP_Scanner_BP_ScannerComponent_K2Node_ComponentBoundEvent_1_ScannerWaveUpdateDelegate__DelegateSignature");
static_assert(offsetof(BP_Scanner_C_BndEvt__BP_Scanner_BP_ScannerComponent_K2Node_ComponentBoundEvent_1_ScannerWaveUpdateDelegate__DelegateSignature, OutTargets) == 0x000000, "Member 'BP_Scanner_C_BndEvt__BP_Scanner_BP_ScannerComponent_K2Node_ComponentBoundEvent_1_ScannerWaveUpdateDelegate__DelegateSignature::OutTargets' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_BndEvt__BP_Scanner_BP_ScannerComponent_K2Node_ComponentBoundEvent_1_ScannerWaveUpdateDelegate__DelegateSignature, OutTelemetry) == 0x000010, "Member 'BP_Scanner_C_BndEvt__BP_Scanner_BP_ScannerComponent_K2Node_ComponentBoundEvent_1_ScannerWaveUpdateDelegate__DelegateSignature::OutTelemetry' has a wrong offset!");

// Function BP_Scanner.BP_Scanner_C.SetEnableMotionScanner
// 0x0001 (0x0001 - 0x0000)
struct BP_Scanner_C_SetEnableMotionScanner final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Scanner_C_SetEnableMotionScanner) == 0x000001, "Wrong alignment on BP_Scanner_C_SetEnableMotionScanner");
static_assert(sizeof(BP_Scanner_C_SetEnableMotionScanner) == 0x000001, "Wrong size on BP_Scanner_C_SetEnableMotionScanner");
static_assert(offsetof(BP_Scanner_C_SetEnableMotionScanner, bEnable) == 0x000000, "Member 'BP_Scanner_C_SetEnableMotionScanner::bEnable' has a wrong offset!");

// Function BP_Scanner.BP_Scanner_C.SetEnableWaveScan
// 0x0001 (0x0001 - 0x0000)
struct BP_Scanner_C_SetEnableWaveScan final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Scanner_C_SetEnableWaveScan) == 0x000001, "Wrong alignment on BP_Scanner_C_SetEnableWaveScan");
static_assert(sizeof(BP_Scanner_C_SetEnableWaveScan) == 0x000001, "Wrong size on BP_Scanner_C_SetEnableWaveScan");
static_assert(offsetof(BP_Scanner_C_SetEnableWaveScan, bEnable) == 0x000000, "Member 'BP_Scanner_C_SetEnableWaveScan::bEnable' has a wrong offset!");

// Function BP_Scanner.BP_Scanner_C.SetEnableLiDAR
// 0x0001 (0x0001 - 0x0000)
struct BP_Scanner_C_SetEnableLiDAR final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Scanner_C_SetEnableLiDAR) == 0x000001, "Wrong alignment on BP_Scanner_C_SetEnableLiDAR");
static_assert(sizeof(BP_Scanner_C_SetEnableLiDAR) == 0x000001, "Wrong size on BP_Scanner_C_SetEnableLiDAR");
static_assert(offsetof(BP_Scanner_C_SetEnableLiDAR, Enable) == 0x000000, "Member 'BP_Scanner_C_SetEnableLiDAR::Enable' has a wrong offset!");

// Function BP_Scanner.BP_Scanner_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_Scanner_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Scanner_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_Scanner_C_ReceiveTick");
static_assert(sizeof(BP_Scanner_C_ReceiveTick) == 0x000004, "Wrong size on BP_Scanner_C_ReceiveTick");
static_assert(offsetof(BP_Scanner_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_Scanner_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_Scanner.BP_Scanner_C.SetStartEnableMotionScanner
// 0x0008 (0x0008 - 0x0000)
struct BP_Scanner_C_SetStartEnableMotionScanner final
{
public:
	bool                                          Activate;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Scanner_C_SetStartEnableMotionScanner) == 0x000004, "Wrong alignment on BP_Scanner_C_SetStartEnableMotionScanner");
static_assert(sizeof(BP_Scanner_C_SetStartEnableMotionScanner) == 0x000008, "Wrong size on BP_Scanner_C_SetStartEnableMotionScanner");
static_assert(offsetof(BP_Scanner_C_SetStartEnableMotionScanner, Activate) == 0x000000, "Member 'BP_Scanner_C_SetStartEnableMotionScanner::Activate' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_SetStartEnableMotionScanner, CallFunc_SelectFloat_ReturnValue) == 0x000004, "Member 'BP_Scanner_C_SetStartEnableMotionScanner::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");

// Function BP_Scanner.BP_Scanner_C.SoundChangeDistance
// 0x0030 (0x0030 - 0x0000)
struct BP_Scanner_C_SoundChangeDistance final
{
public:
	float                                         NewDistance;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAtLocation_ReturnValue;         // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAtLocation_ReturnValue_1;       // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Scanner_C_SoundChangeDistance) == 0x000008, "Wrong alignment on BP_Scanner_C_SoundChangeDistance");
static_assert(sizeof(BP_Scanner_C_SoundChangeDistance) == 0x000030, "Wrong size on BP_Scanner_C_SoundChangeDistance");
static_assert(offsetof(BP_Scanner_C_SoundChangeDistance, NewDistance) == 0x000000, "Member 'BP_Scanner_C_SoundChangeDistance::NewDistance' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_SoundChangeDistance, CallFunc_Add_FloatFloat_ReturnValue) == 0x000004, "Member 'BP_Scanner_C_SoundChangeDistance::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_SoundChangeDistance, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000008, "Member 'BP_Scanner_C_SoundChangeDistance::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_SoundChangeDistance, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00000C, "Member 'BP_Scanner_C_SoundChangeDistance::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_SoundChangeDistance, CallFunc_SpawnSoundAtLocation_ReturnValue) == 0x000018, "Member 'BP_Scanner_C_SoundChangeDistance::CallFunc_SpawnSoundAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_SoundChangeDistance, CallFunc_SpawnSoundAtLocation_ReturnValue_1) == 0x000020, "Member 'BP_Scanner_C_SoundChangeDistance::CallFunc_SpawnSoundAtLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_SoundChangeDistance, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x000028, "Member 'BP_Scanner_C_SoundChangeDistance::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_SoundChangeDistance, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000029, "Member 'BP_Scanner_C_SoundChangeDistance::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_Scanner.BP_Scanner_C.OnRep_bIsMotionScannerEnable
// 0x0058 (0x0058 - 0x0000)
struct BP_Scanner_C_OnRep_bIsMotionScannerEnable final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABPCharacter_Demo_C*                    K2Node_DynamicCast_AsBPCharacter_Demo;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAtLocation_ReturnValue;         // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Scanner_C_OnRep_bIsMotionScannerEnable) == 0x000008, "Wrong alignment on BP_Scanner_C_OnRep_bIsMotionScannerEnable");
static_assert(sizeof(BP_Scanner_C_OnRep_bIsMotionScannerEnable) == 0x000058, "Wrong size on BP_Scanner_C_OnRep_bIsMotionScannerEnable");
static_assert(offsetof(BP_Scanner_C_OnRep_bIsMotionScannerEnable, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_Scanner_C_OnRep_bIsMotionScannerEnable::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_OnRep_bIsMotionScannerEnable, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_Scanner_C_OnRep_bIsMotionScannerEnable::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_OnRep_bIsMotionScannerEnable, K2Node_DynamicCast_AsBPCharacter_Demo) == 0x000010, "Member 'BP_Scanner_C_OnRep_bIsMotionScannerEnable::K2Node_DynamicCast_AsBPCharacter_Demo' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_OnRep_bIsMotionScannerEnable, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_Scanner_C_OnRep_bIsMotionScannerEnable::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_OnRep_bIsMotionScannerEnable, CallFunc_IsLocallyControlled_ReturnValue) == 0x000019, "Member 'BP_Scanner_C_OnRep_bIsMotionScannerEnable::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_OnRep_bIsMotionScannerEnable, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00001C, "Member 'BP_Scanner_C_OnRep_bIsMotionScannerEnable::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_OnRep_bIsMotionScannerEnable, CallFunc_SpawnSoundAtLocation_ReturnValue) == 0x000028, "Member 'BP_Scanner_C_OnRep_bIsMotionScannerEnable::CallFunc_SpawnSoundAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_OnRep_bIsMotionScannerEnable, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'BP_Scanner_C_OnRep_bIsMotionScannerEnable::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_OnRep_bIsMotionScannerEnable, CallFunc_Subtract_IntInt_ReturnValue) == 0x000034, "Member 'BP_Scanner_C_OnRep_bIsMotionScannerEnable::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_OnRep_bIsMotionScannerEnable, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000038, "Member 'BP_Scanner_C_OnRep_bIsMotionScannerEnable::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_OnRep_bIsMotionScannerEnable, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_Scanner_C_OnRep_bIsMotionScannerEnable::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_OnRep_bIsMotionScannerEnable, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'BP_Scanner_C_OnRep_bIsMotionScannerEnable::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_OnRep_bIsMotionScannerEnable, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x00004C, "Member 'BP_Scanner_C_OnRep_bIsMotionScannerEnable::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_OnRep_bIsMotionScannerEnable, CallFunc_Max_ReturnValue) == 0x000050, "Member 'BP_Scanner_C_OnRep_bIsMotionScannerEnable::CallFunc_Max_ReturnValue' has a wrong offset!");

// Function BP_Scanner.BP_Scanner_C.OnRep_bIsWaveScannerEnbale
// 0x01D0 (0x01D0 - 0x0000)
struct BP_Scanner_C_OnRep_bIsWaveScannerEnbale final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSoundAtLocation_ReturnValue;         // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAtLocation_ReturnValue_1;       // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x0030(0x0018)()
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0050(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0090(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00A0(0x0018)()
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item;                           // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x00C8(0x0018)()
	int32                                         CallFunc_Max_ReturnValue;                          // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00E8(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0128(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0138(0x0018)()
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue_1;           // 0x0150(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0168(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x01A8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x01B8(0x0018)()
};
static_assert(alignof(BP_Scanner_C_OnRep_bIsWaveScannerEnbale) == 0x000008, "Wrong alignment on BP_Scanner_C_OnRep_bIsWaveScannerEnbale");
static_assert(sizeof(BP_Scanner_C_OnRep_bIsWaveScannerEnbale) == 0x0001D0, "Wrong size on BP_Scanner_C_OnRep_bIsWaveScannerEnbale");
static_assert(offsetof(BP_Scanner_C_OnRep_bIsWaveScannerEnbale, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'BP_Scanner_C_OnRep_bIsWaveScannerEnbale::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_OnRep_bIsWaveScannerEnbale, CallFunc_Subtract_IntInt_ReturnValue) == 0x000004, "Member 'BP_Scanner_C_OnRep_bIsWaveScannerEnbale::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_OnRep_bIsWaveScannerEnbale, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000008, "Member 'BP_Scanner_C_OnRep_bIsWaveScannerEnbale::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_OnRep_bIsWaveScannerEnbale, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_Scanner_C_OnRep_bIsWaveScannerEnbale::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_OnRep_bIsWaveScannerEnbale, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000010, "Member 'BP_Scanner_C_OnRep_bIsWaveScannerEnbale::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_OnRep_bIsWaveScannerEnbale, CallFunc_SpawnSoundAtLocation_ReturnValue) == 0x000020, "Member 'BP_Scanner_C_OnRep_bIsWaveScannerEnbale::CallFunc_SpawnSoundAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_OnRep_bIsWaveScannerEnbale, CallFunc_SpawnSoundAtLocation_ReturnValue_1) == 0x000028, "Member 'BP_Scanner_C_OnRep_bIsWaveScannerEnbale::CallFunc_SpawnSoundAtLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_OnRep_bIsWaveScannerEnbale, CallFunc_Conv_FloatToText_ReturnValue) == 0x000030, "Member 'BP_Scanner_C_OnRep_bIsWaveScannerEnbale::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_OnRep_bIsWaveScannerEnbale, CallFunc_BooleanAND_ReturnValue) == 0x000048, "Member 'BP_Scanner_C_OnRep_bIsWaveScannerEnbale::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_OnRep_bIsWaveScannerEnbale, K2Node_MakeStruct_FormatArgumentData) == 0x000050, "Member 'BP_Scanner_C_OnRep_bIsWaveScannerEnbale::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_OnRep_bIsWaveScannerEnbale, K2Node_MakeArray_Array) == 0x000090, "Member 'BP_Scanner_C_OnRep_bIsWaveScannerEnbale::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_OnRep_bIsWaveScannerEnbale, CallFunc_Format_ReturnValue) == 0x0000A0, "Member 'BP_Scanner_C_OnRep_bIsWaveScannerEnbale::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_OnRep_bIsWaveScannerEnbale, CallFunc_Array_Get_Item) == 0x0000B8, "Member 'BP_Scanner_C_OnRep_bIsWaveScannerEnbale::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_OnRep_bIsWaveScannerEnbale, CallFunc_Array_Length_ReturnValue) == 0x0000C0, "Member 'BP_Scanner_C_OnRep_bIsWaveScannerEnbale::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_OnRep_bIsWaveScannerEnbale, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0000C4, "Member 'BP_Scanner_C_OnRep_bIsWaveScannerEnbale::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_OnRep_bIsWaveScannerEnbale, CallFunc_Conv_IntToText_ReturnValue) == 0x0000C8, "Member 'BP_Scanner_C_OnRep_bIsWaveScannerEnbale::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_OnRep_bIsWaveScannerEnbale, CallFunc_Max_ReturnValue) == 0x0000E0, "Member 'BP_Scanner_C_OnRep_bIsWaveScannerEnbale::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_OnRep_bIsWaveScannerEnbale, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000E8, "Member 'BP_Scanner_C_OnRep_bIsWaveScannerEnbale::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_OnRep_bIsWaveScannerEnbale, K2Node_MakeArray_Array_1) == 0x000128, "Member 'BP_Scanner_C_OnRep_bIsWaveScannerEnbale::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_OnRep_bIsWaveScannerEnbale, CallFunc_Format_ReturnValue_1) == 0x000138, "Member 'BP_Scanner_C_OnRep_bIsWaveScannerEnbale::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_OnRep_bIsWaveScannerEnbale, CallFunc_Conv_FloatToText_ReturnValue_1) == 0x000150, "Member 'BP_Scanner_C_OnRep_bIsWaveScannerEnbale::CallFunc_Conv_FloatToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_OnRep_bIsWaveScannerEnbale, K2Node_MakeStruct_FormatArgumentData_2) == 0x000168, "Member 'BP_Scanner_C_OnRep_bIsWaveScannerEnbale::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_OnRep_bIsWaveScannerEnbale, K2Node_MakeArray_Array_2) == 0x0001A8, "Member 'BP_Scanner_C_OnRep_bIsWaveScannerEnbale::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_OnRep_bIsWaveScannerEnbale, CallFunc_Format_ReturnValue_2) == 0x0001B8, "Member 'BP_Scanner_C_OnRep_bIsWaveScannerEnbale::CallFunc_Format_ReturnValue_2' has a wrong offset!");

// Function BP_Scanner.BP_Scanner_C.OnRep_bIsLiDAREnable
// 0x0030 (0x0030 - 0x0000)
struct BP_Scanner_C_OnRep_bIsLiDAREnable final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABPCharacter_Demo_C*                    K2Node_DynamicCast_AsBPCharacter_Demo;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAtLocation_ReturnValue;         // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Scanner_C_OnRep_bIsLiDAREnable) == 0x000008, "Wrong alignment on BP_Scanner_C_OnRep_bIsLiDAREnable");
static_assert(sizeof(BP_Scanner_C_OnRep_bIsLiDAREnable) == 0x000030, "Wrong size on BP_Scanner_C_OnRep_bIsLiDAREnable");
static_assert(offsetof(BP_Scanner_C_OnRep_bIsLiDAREnable, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'BP_Scanner_C_OnRep_bIsLiDAREnable::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_OnRep_bIsLiDAREnable, K2Node_DynamicCast_AsBPCharacter_Demo) == 0x000008, "Member 'BP_Scanner_C_OnRep_bIsLiDAREnable::K2Node_DynamicCast_AsBPCharacter_Demo' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_OnRep_bIsLiDAREnable, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_Scanner_C_OnRep_bIsLiDAREnable::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_OnRep_bIsLiDAREnable, CallFunc_IsLocallyControlled_ReturnValue) == 0x000011, "Member 'BP_Scanner_C_OnRep_bIsLiDAREnable::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_OnRep_bIsLiDAREnable, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000014, "Member 'BP_Scanner_C_OnRep_bIsLiDAREnable::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_OnRep_bIsLiDAREnable, CallFunc_SpawnSoundAtLocation_ReturnValue) == 0x000020, "Member 'BP_Scanner_C_OnRep_bIsLiDAREnable::CallFunc_SpawnSoundAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_OnRep_bIsLiDAREnable, CallFunc_Not_PreBool_ReturnValue) == 0x000028, "Member 'BP_Scanner_C_OnRep_bIsLiDAREnable::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_OnRep_bIsLiDAREnable, CallFunc_SelectFloat_ReturnValue) == 0x00002C, "Member 'BP_Scanner_C_OnRep_bIsLiDAREnable::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");

// Function BP_Scanner.BP_Scanner_C.SetNewPositionTarget
// 0x00B0 (0x00B0 - 0x0000)
struct BP_Scanner_C_SetNewPositionTarget final
{
public:
	struct FVector                                SecondLocation;                                    // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ReturnPosition;                                    // 0x000C(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_NormalizedDeltaRotator_ReturnValue;       // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SignOfFloat_ReturnValue;                  // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue_1;                        // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SignOfFloat_ReturnValue_1;                // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Scanner_C_SetNewPositionTarget) == 0x000004, "Wrong alignment on BP_Scanner_C_SetNewPositionTarget");
static_assert(sizeof(BP_Scanner_C_SetNewPositionTarget) == 0x0000B0, "Wrong size on BP_Scanner_C_SetNewPositionTarget");
static_assert(offsetof(BP_Scanner_C_SetNewPositionTarget, SecondLocation) == 0x000000, "Member 'BP_Scanner_C_SetNewPositionTarget::SecondLocation' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_SetNewPositionTarget, ReturnPosition) == 0x00000C, "Member 'BP_Scanner_C_SetNewPositionTarget::ReturnPosition' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_SetNewPositionTarget, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000018, "Member 'BP_Scanner_C_SetNewPositionTarget::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_SetNewPositionTarget, CallFunc_BreakRotator_Roll) == 0x000024, "Member 'BP_Scanner_C_SetNewPositionTarget::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_SetNewPositionTarget, CallFunc_BreakRotator_Pitch) == 0x000028, "Member 'BP_Scanner_C_SetNewPositionTarget::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_SetNewPositionTarget, CallFunc_BreakRotator_Yaw) == 0x00002C, "Member 'BP_Scanner_C_SetNewPositionTarget::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_SetNewPositionTarget, CallFunc_MakeRotator_ReturnValue) == 0x000030, "Member 'BP_Scanner_C_SetNewPositionTarget::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_SetNewPositionTarget, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00003C, "Member 'BP_Scanner_C_SetNewPositionTarget::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_SetNewPositionTarget, CallFunc_NormalizedDeltaRotator_ReturnValue) == 0x000048, "Member 'BP_Scanner_C_SetNewPositionTarget::CallFunc_NormalizedDeltaRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_SetNewPositionTarget, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000054, "Member 'BP_Scanner_C_SetNewPositionTarget::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_SetNewPositionTarget, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000060, "Member 'BP_Scanner_C_SetNewPositionTarget::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_SetNewPositionTarget, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x00006C, "Member 'BP_Scanner_C_SetNewPositionTarget::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_SetNewPositionTarget, CallFunc_BreakVector_X) == 0x000078, "Member 'BP_Scanner_C_SetNewPositionTarget::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_SetNewPositionTarget, CallFunc_BreakVector_Y) == 0x00007C, "Member 'BP_Scanner_C_SetNewPositionTarget::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_SetNewPositionTarget, CallFunc_BreakVector_Z) == 0x000080, "Member 'BP_Scanner_C_SetNewPositionTarget::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_SetNewPositionTarget, CallFunc_Abs_ReturnValue) == 0x000084, "Member 'BP_Scanner_C_SetNewPositionTarget::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_SetNewPositionTarget, CallFunc_SignOfFloat_ReturnValue) == 0x000088, "Member 'BP_Scanner_C_SetNewPositionTarget::CallFunc_SignOfFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_SetNewPositionTarget, CallFunc_MapRangeClamped_ReturnValue) == 0x00008C, "Member 'BP_Scanner_C_SetNewPositionTarget::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_SetNewPositionTarget, CallFunc_Abs_ReturnValue_1) == 0x000090, "Member 'BP_Scanner_C_SetNewPositionTarget::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_SetNewPositionTarget, CallFunc_SignOfFloat_ReturnValue_1) == 0x000094, "Member 'BP_Scanner_C_SetNewPositionTarget::CallFunc_SignOfFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_SetNewPositionTarget, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000098, "Member 'BP_Scanner_C_SetNewPositionTarget::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_SetNewPositionTarget, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00009C, "Member 'BP_Scanner_C_SetNewPositionTarget::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_SetNewPositionTarget, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0000A0, "Member 'BP_Scanner_C_SetNewPositionTarget::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_SetNewPositionTarget, CallFunc_MakeVector_ReturnValue) == 0x0000A4, "Member 'BP_Scanner_C_SetNewPositionTarget::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function BP_Scanner.BP_Scanner_C.SetTargets
// 0x00D0 (0x00D0 - 0x0000)
struct BP_Scanner_C_SetTargets final
{
public:
	bool                                          bIsEqual;                                          // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_2;        // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTargetsStruct                         CallFunc_Array_Get_Item;                           // 0x0038(0x0018)(NoDestructor, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item_1;                         // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7B[0x5];                                       // 0x007B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTargetsStruct                         CallFunc_Array_Get_Item_2;                         // 0x0080(0x0018)(NoDestructor, ContainsInstancedReference)
	struct FTargetsStruct                         CallFunc_Array_Get_Item_3;                         // 0x0098(0x0018)(NoDestructor, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B5[0x3];                                       // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_4;            // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue_1;                        // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_5;            // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue_2;                        // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Scanner_C_SetTargets) == 0x000008, "Wrong alignment on BP_Scanner_C_SetTargets");
static_assert(sizeof(BP_Scanner_C_SetTargets) == 0x0000D0, "Wrong size on BP_Scanner_C_SetTargets");
static_assert(offsetof(BP_Scanner_C_SetTargets, bIsEqual) == 0x000000, "Member 'BP_Scanner_C_SetTargets::bIsEqual' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_SetTargets, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_Scanner_C_SetTargets::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_SetTargets, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_Scanner_C_SetTargets::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_SetTargets, CallFunc_Subtract_IntInt_ReturnValue) == 0x00000C, "Member 'BP_Scanner_C_SetTargets::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_SetTargets, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000010, "Member 'BP_Scanner_C_SetTargets::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_SetTargets, Temp_int_Array_Index_Variable_1) == 0x000014, "Member 'BP_Scanner_C_SetTargets::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_SetTargets, Temp_int_Loop_Counter_Variable_1) == 0x000018, "Member 'BP_Scanner_C_SetTargets::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_SetTargets, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x00001C, "Member 'BP_Scanner_C_SetTargets::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_SetTargets, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x000020, "Member 'BP_Scanner_C_SetTargets::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_SetTargets, Temp_int_Array_Index_Variable_2) == 0x000024, "Member 'BP_Scanner_C_SetTargets::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_SetTargets, Temp_int_Loop_Counter_Variable_2) == 0x000028, "Member 'BP_Scanner_C_SetTargets::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_SetTargets, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x00002C, "Member 'BP_Scanner_C_SetTargets::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_SetTargets, CallFunc_GreaterEqual_IntInt_ReturnValue_2) == 0x000030, "Member 'BP_Scanner_C_SetTargets::CallFunc_GreaterEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_SetTargets, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_Scanner_C_SetTargets::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_SetTargets, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'BP_Scanner_C_SetTargets::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_SetTargets, CallFunc_Array_Contains_ReturnValue) == 0x000054, "Member 'BP_Scanner_C_SetTargets::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_SetTargets, CallFunc_Array_Length_ReturnValue_1) == 0x000058, "Member 'BP_Scanner_C_SetTargets::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_SetTargets, CallFunc_Not_PreBool_ReturnValue) == 0x00005C, "Member 'BP_Scanner_C_SetTargets::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_SetTargets, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x000060, "Member 'BP_Scanner_C_SetTargets::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_SetTargets, CallFunc_Max_ReturnValue) == 0x000064, "Member 'BP_Scanner_C_SetTargets::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_SetTargets, CallFunc_Array_Length_ReturnValue_2) == 0x000068, "Member 'BP_Scanner_C_SetTargets::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_SetTargets, CallFunc_Greater_IntInt_ReturnValue) == 0x00006C, "Member 'BP_Scanner_C_SetTargets::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_SetTargets, CallFunc_Array_Get_Item_1) == 0x000070, "Member 'BP_Scanner_C_SetTargets::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_SetTargets, CallFunc_IsValid_ReturnValue) == 0x000078, "Member 'BP_Scanner_C_SetTargets::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_SetTargets, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000079, "Member 'BP_Scanner_C_SetTargets::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_SetTargets, CallFunc_Not_PreBool_ReturnValue_1) == 0x00007A, "Member 'BP_Scanner_C_SetTargets::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_SetTargets, CallFunc_Array_Get_Item_2) == 0x000080, "Member 'BP_Scanner_C_SetTargets::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_SetTargets, CallFunc_Array_Get_Item_3) == 0x000098, "Member 'BP_Scanner_C_SetTargets::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_SetTargets, CallFunc_Array_Length_ReturnValue_3) == 0x0000B0, "Member 'BP_Scanner_C_SetTargets::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_SetTargets, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0000B4, "Member 'BP_Scanner_C_SetTargets::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_SetTargets, CallFunc_Subtract_IntInt_ReturnValue_4) == 0x0000B8, "Member 'BP_Scanner_C_SetTargets::CallFunc_Subtract_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_SetTargets, CallFunc_Max_ReturnValue_1) == 0x0000BC, "Member 'BP_Scanner_C_SetTargets::CallFunc_Max_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_SetTargets, CallFunc_Array_Length_ReturnValue_4) == 0x0000C0, "Member 'BP_Scanner_C_SetTargets::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_SetTargets, CallFunc_Subtract_IntInt_ReturnValue_5) == 0x0000C4, "Member 'BP_Scanner_C_SetTargets::CallFunc_Subtract_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_SetTargets, CallFunc_Max_ReturnValue_2) == 0x0000C8, "Member 'BP_Scanner_C_SetTargets::CallFunc_Max_ReturnValue_2' has a wrong offset!");

// Function BP_Scanner.BP_Scanner_C.AddTarget
// 0x01B0 (0x01B0 - 0x0000)
struct BP_Scanner_C_AddTarget final
{
public:
	struct FTargetsStruct                         TargetsStruct;                                     // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_GetMaterial_Adjusted;                     // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0050(0x0030)(IsPlainOldData, NoDestructor)
	class UStaticMeshComponent*                   CallFunc_AddComponent_ReturnValue;                 // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x008C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0114(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x019C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19D[0x3];                                      // 0x019D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Scanner_C_AddTarget) == 0x000010, "Wrong alignment on BP_Scanner_C_AddTarget");
static_assert(sizeof(BP_Scanner_C_AddTarget) == 0x0001B0, "Wrong size on BP_Scanner_C_AddTarget");
static_assert(offsetof(BP_Scanner_C_AddTarget, TargetsStruct) == 0x000000, "Member 'BP_Scanner_C_AddTarget::TargetsStruct' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_AddTarget, CallFunc_Array_Add_ReturnValue) == 0x000018, "Member 'BP_Scanner_C_AddTarget::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_AddTarget, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x00001C, "Member 'BP_Scanner_C_AddTarget::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_AddTarget, CallFunc_MakeVector_ReturnValue) == 0x000028, "Member 'BP_Scanner_C_AddTarget::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_AddTarget, CallFunc_GetMaterial_Adjusted) == 0x000038, "Member 'BP_Scanner_C_AddTarget::CallFunc_GetMaterial_Adjusted' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_AddTarget, CallFunc_Array_Add_ReturnValue_1) == 0x000040, "Member 'BP_Scanner_C_AddTarget::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_AddTarget, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000044, "Member 'BP_Scanner_C_AddTarget::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_AddTarget, CallFunc_MakeTransform_ReturnValue) == 0x000050, "Member 'BP_Scanner_C_AddTarget::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_AddTarget, CallFunc_AddComponent_ReturnValue) == 0x000080, "Member 'BP_Scanner_C_AddTarget::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_AddTarget, CallFunc_SetStaticMesh_ReturnValue) == 0x000088, "Member 'BP_Scanner_C_AddTarget::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_AddTarget, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x00008C, "Member 'BP_Scanner_C_AddTarget::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_AddTarget, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000114, "Member 'BP_Scanner_C_AddTarget::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_AddTarget, CallFunc_K2_AttachToComponent_ReturnValue) == 0x00019C, "Member 'BP_Scanner_C_AddTarget::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_AddTarget, CallFunc_Array_Add_ReturnValue_2) == 0x0001A0, "Member 'BP_Scanner_C_AddTarget::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");

// Function BP_Scanner.BP_Scanner_C.UpdateTargetSound
// 0x0014 (0x0014 - 0x0000)
struct BP_Scanner_C_UpdateTargetSound final
{
public:
	float                                         InFloat;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnable;                                           // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Scanner_C_UpdateTargetSound) == 0x000004, "Wrong alignment on BP_Scanner_C_UpdateTargetSound");
static_assert(sizeof(BP_Scanner_C_UpdateTargetSound) == 0x000014, "Wrong size on BP_Scanner_C_UpdateTargetSound");
static_assert(offsetof(BP_Scanner_C_UpdateTargetSound, InFloat) == 0x000000, "Member 'BP_Scanner_C_UpdateTargetSound::InFloat' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_UpdateTargetSound, bEnable) == 0x000004, "Member 'BP_Scanner_C_UpdateTargetSound::bEnable' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_UpdateTargetSound, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000005, "Member 'BP_Scanner_C_UpdateTargetSound::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_UpdateTargetSound, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_Scanner_C_UpdateTargetSound::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_UpdateTargetSound, CallFunc_MapRangeClamped_ReturnValue) == 0x00000C, "Member 'BP_Scanner_C_UpdateTargetSound::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_UpdateTargetSound, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000010, "Member 'BP_Scanner_C_UpdateTargetSound::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");

// Function BP_Scanner.BP_Scanner_C.UpdateMinDistance
// 0x0118 (0x0118 - 0x0000)
struct BP_Scanner_C_UpdateMinDistance final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 DistancesLocal;                                    // 0x0008(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MinOfFloatArray_IndexOfMinValue;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MinOfFloatArray_MinValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x0038(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0050(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0090(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00B0(0x0018)()
	struct FTargetsStruct                         CallFunc_Array_Get_Item;                           // 0x00C8(0x0018)(NoDestructor, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E5[0x3];                                       // 0x00E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0104(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Scanner_C_UpdateMinDistance) == 0x000008, "Wrong alignment on BP_Scanner_C_UpdateMinDistance");
static_assert(sizeof(BP_Scanner_C_UpdateMinDistance) == 0x000118, "Wrong size on BP_Scanner_C_UpdateMinDistance");
static_assert(offsetof(BP_Scanner_C_UpdateMinDistance, ReturnValue) == 0x000000, "Member 'BP_Scanner_C_UpdateMinDistance::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_UpdateMinDistance, DistancesLocal) == 0x000008, "Member 'BP_Scanner_C_UpdateMinDistance::DistancesLocal' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_UpdateMinDistance, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_Scanner_C_UpdateMinDistance::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_UpdateMinDistance, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BP_Scanner_C_UpdateMinDistance::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_UpdateMinDistance, CallFunc_Subtract_IntInt_ReturnValue) == 0x000020, "Member 'BP_Scanner_C_UpdateMinDistance::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_UpdateMinDistance, CallFunc_MinOfFloatArray_IndexOfMinValue) == 0x000024, "Member 'BP_Scanner_C_UpdateMinDistance::CallFunc_MinOfFloatArray_IndexOfMinValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_UpdateMinDistance, CallFunc_MinOfFloatArray_MinValue) == 0x000028, "Member 'BP_Scanner_C_UpdateMinDistance::CallFunc_MinOfFloatArray_MinValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_UpdateMinDistance, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00002C, "Member 'BP_Scanner_C_UpdateMinDistance::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_UpdateMinDistance, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000030, "Member 'BP_Scanner_C_UpdateMinDistance::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_UpdateMinDistance, CallFunc_Conv_FloatToText_ReturnValue) == 0x000038, "Member 'BP_Scanner_C_UpdateMinDistance::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_UpdateMinDistance, K2Node_MakeStruct_FormatArgumentData) == 0x000050, "Member 'BP_Scanner_C_UpdateMinDistance::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_UpdateMinDistance, K2Node_MakeArray_Array) == 0x000090, "Member 'BP_Scanner_C_UpdateMinDistance::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_UpdateMinDistance, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000A0, "Member 'BP_Scanner_C_UpdateMinDistance::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_UpdateMinDistance, CallFunc_Format_ReturnValue) == 0x0000B0, "Member 'BP_Scanner_C_UpdateMinDistance::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_UpdateMinDistance, CallFunc_Array_Get_Item) == 0x0000C8, "Member 'BP_Scanner_C_UpdateMinDistance::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_UpdateMinDistance, CallFunc_Array_Length_ReturnValue) == 0x0000E0, "Member 'BP_Scanner_C_UpdateMinDistance::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_UpdateMinDistance, CallFunc_Not_PreBool_ReturnValue) == 0x0000E4, "Member 'BP_Scanner_C_UpdateMinDistance::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_UpdateMinDistance, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0000E8, "Member 'BP_Scanner_C_UpdateMinDistance::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_UpdateMinDistance, CallFunc_Max_ReturnValue) == 0x0000EC, "Member 'BP_Scanner_C_UpdateMinDistance::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_UpdateMinDistance, CallFunc_GetOwner_ReturnValue) == 0x0000F0, "Member 'BP_Scanner_C_UpdateMinDistance::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_UpdateMinDistance, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0000F8, "Member 'BP_Scanner_C_UpdateMinDistance::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_UpdateMinDistance, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000104, "Member 'BP_Scanner_C_UpdateMinDistance::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_UpdateMinDistance, CallFunc_VSize_ReturnValue) == 0x000110, "Member 'BP_Scanner_C_UpdateMinDistance::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_UpdateMinDistance, CallFunc_Array_Add_ReturnValue) == 0x000114, "Member 'BP_Scanner_C_UpdateMinDistance::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_Scanner.BP_Scanner_C.UpdateScanPercent
// 0x0088 (0x0088 - 0x0000)
struct BP_Scanner_C_UpdateScanPercent final
{
public:
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x0008(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0020(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0060(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0070(0x0018)()
};
static_assert(alignof(BP_Scanner_C_UpdateScanPercent) == 0x000008, "Wrong alignment on BP_Scanner_C_UpdateScanPercent");
static_assert(sizeof(BP_Scanner_C_UpdateScanPercent) == 0x000088, "Wrong size on BP_Scanner_C_UpdateScanPercent");
static_assert(offsetof(BP_Scanner_C_UpdateScanPercent, CallFunc_MapRangeClamped_ReturnValue) == 0x000000, "Member 'BP_Scanner_C_UpdateScanPercent::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_UpdateScanPercent, CallFunc_Conv_FloatToText_ReturnValue) == 0x000008, "Member 'BP_Scanner_C_UpdateScanPercent::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_UpdateScanPercent, K2Node_MakeStruct_FormatArgumentData) == 0x000020, "Member 'BP_Scanner_C_UpdateScanPercent::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_UpdateScanPercent, K2Node_MakeArray_Array) == 0x000060, "Member 'BP_Scanner_C_UpdateScanPercent::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_UpdateScanPercent, CallFunc_Format_ReturnValue) == 0x000070, "Member 'BP_Scanner_C_UpdateScanPercent::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function BP_Scanner.BP_Scanner_C.SetTargetPosition
// 0x01C8 (0x01C8 - 0x0000)
struct BP_Scanner_C_SetTargetPosition final
{
public:
	bool                                          OneTarget;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMotionScannerComponent*                SetMotionScanner;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SetNpcMesh;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OneTargetLocal;                                    // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   NpcMeshLocal;                                      // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMotionScannerComponent*                ScannerLocal;                                      // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MakeLiteralFloat_ReturnValue;             // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeLiteralFloat_ReturnValue_1;           // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0078(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMotionScannerComponent*                CallFunc_Array_Get_Item;                           // 0x0110(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0118(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SetNewPositionTarget_ReturnPosition;      // 0x0124(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0130(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item_1;                         // 0x01B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Scanner_C_SetTargetPosition) == 0x000008, "Wrong alignment on BP_Scanner_C_SetTargetPosition");
static_assert(sizeof(BP_Scanner_C_SetTargetPosition) == 0x0001C8, "Wrong size on BP_Scanner_C_SetTargetPosition");
static_assert(offsetof(BP_Scanner_C_SetTargetPosition, OneTarget) == 0x000000, "Member 'BP_Scanner_C_SetTargetPosition::OneTarget' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_SetTargetPosition, SetMotionScanner) == 0x000008, "Member 'BP_Scanner_C_SetTargetPosition::SetMotionScanner' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_SetTargetPosition, SetNpcMesh) == 0x000010, "Member 'BP_Scanner_C_SetTargetPosition::SetNpcMesh' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_SetTargetPosition, OneTargetLocal) == 0x000018, "Member 'BP_Scanner_C_SetTargetPosition::OneTargetLocal' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_SetTargetPosition, NpcMeshLocal) == 0x000020, "Member 'BP_Scanner_C_SetTargetPosition::NpcMeshLocal' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_SetTargetPosition, ScannerLocal) == 0x000028, "Member 'BP_Scanner_C_SetTargetPosition::ScannerLocal' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_SetTargetPosition, Temp_int_Array_Index_Variable) == 0x000030, "Member 'BP_Scanner_C_SetTargetPosition::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_SetTargetPosition, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'BP_Scanner_C_SetTargetPosition::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_SetTargetPosition, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'BP_Scanner_C_SetTargetPosition::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_SetTargetPosition, CallFunc_Not_PreBool_ReturnValue) == 0x00003C, "Member 'BP_Scanner_C_SetTargetPosition::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_SetTargetPosition, CallFunc_MakeLiteralFloat_ReturnValue) == 0x000040, "Member 'BP_Scanner_C_SetTargetPosition::CallFunc_MakeLiteralFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_SetTargetPosition, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000044, "Member 'BP_Scanner_C_SetTargetPosition::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_SetTargetPosition, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000048, "Member 'BP_Scanner_C_SetTargetPosition::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_SetTargetPosition, CallFunc_BreakVector_X) == 0x00004C, "Member 'BP_Scanner_C_SetTargetPosition::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_SetTargetPosition, CallFunc_BreakVector_Y) == 0x000050, "Member 'BP_Scanner_C_SetTargetPosition::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_SetTargetPosition, CallFunc_BreakVector_Z) == 0x000054, "Member 'BP_Scanner_C_SetTargetPosition::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_SetTargetPosition, CallFunc_Not_PreBool_ReturnValue_1) == 0x000058, "Member 'BP_Scanner_C_SetTargetPosition::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_SetTargetPosition, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00005C, "Member 'BP_Scanner_C_SetTargetPosition::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_SetTargetPosition, CallFunc_FMax_ReturnValue) == 0x000060, "Member 'BP_Scanner_C_SetTargetPosition::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_SetTargetPosition, CallFunc_MakeLiteralFloat_ReturnValue_1) == 0x000064, "Member 'BP_Scanner_C_SetTargetPosition::CallFunc_MakeLiteralFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_SetTargetPosition, CallFunc_IsValid_ReturnValue) == 0x000068, "Member 'BP_Scanner_C_SetTargetPosition::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_SetTargetPosition, CallFunc_MakeVector_ReturnValue) == 0x00006C, "Member 'BP_Scanner_C_SetTargetPosition::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_SetTargetPosition, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000078, "Member 'BP_Scanner_C_SetTargetPosition::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_SetTargetPosition, CallFunc_IsValid_ReturnValue_1) == 0x000100, "Member 'BP_Scanner_C_SetTargetPosition::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_SetTargetPosition, CallFunc_GetOwner_ReturnValue) == 0x000108, "Member 'BP_Scanner_C_SetTargetPosition::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_SetTargetPosition, CallFunc_Array_Get_Item) == 0x000110, "Member 'BP_Scanner_C_SetTargetPosition::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_SetTargetPosition, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000118, "Member 'BP_Scanner_C_SetTargetPosition::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_SetTargetPosition, CallFunc_SetNewPositionTarget_ReturnPosition) == 0x000124, "Member 'BP_Scanner_C_SetTargetPosition::CallFunc_SetNewPositionTarget_ReturnPosition' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_SetTargetPosition, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000130, "Member 'BP_Scanner_C_SetTargetPosition::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_SetTargetPosition, CallFunc_Array_Get_Item_1) == 0x0001B8, "Member 'BP_Scanner_C_SetTargetPosition::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_SetTargetPosition, CallFunc_Array_Length_ReturnValue) == 0x0001C0, "Member 'BP_Scanner_C_SetTargetPosition::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_SetTargetPosition, CallFunc_Less_IntInt_ReturnValue) == 0x0001C4, "Member 'BP_Scanner_C_SetTargetPosition::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_Scanner.BP_Scanner_C.ScannerTraceCalc
// 0x0090 (0x0090 - 0x0000)
struct BP_Scanner_C_ScannerTraceCalc final
{
public:
	struct FVector                                TraceStart;                                        // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TraceEnd;                                          // 0x000C(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TEnd;                                              // 0x0018(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TStart;                                            // 0x0024(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SDirection;                                        // 0x0030(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABPCharacter_Demo_C*                    K2Node_DynamicCast_AsBPCharacter_Demo;             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A[0x2];                                       // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RandomUnitVectorInConeInDegrees_ReturnValue; // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Scanner_C_ScannerTraceCalc) == 0x000008, "Wrong alignment on BP_Scanner_C_ScannerTraceCalc");
static_assert(sizeof(BP_Scanner_C_ScannerTraceCalc) == 0x000090, "Wrong size on BP_Scanner_C_ScannerTraceCalc");
static_assert(offsetof(BP_Scanner_C_ScannerTraceCalc, TraceStart) == 0x000000, "Member 'BP_Scanner_C_ScannerTraceCalc::TraceStart' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ScannerTraceCalc, TraceEnd) == 0x00000C, "Member 'BP_Scanner_C_ScannerTraceCalc::TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ScannerTraceCalc, TEnd) == 0x000018, "Member 'BP_Scanner_C_ScannerTraceCalc::TEnd' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ScannerTraceCalc, TStart) == 0x000024, "Member 'BP_Scanner_C_ScannerTraceCalc::TStart' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ScannerTraceCalc, SDirection) == 0x000030, "Member 'BP_Scanner_C_ScannerTraceCalc::SDirection' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ScannerTraceCalc, CallFunc_GetSocketLocation_ReturnValue) == 0x00003C, "Member 'BP_Scanner_C_ScannerTraceCalc::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ScannerTraceCalc, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000048, "Member 'BP_Scanner_C_ScannerTraceCalc::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ScannerTraceCalc, K2Node_DynamicCast_AsBPCharacter_Demo) == 0x000050, "Member 'BP_Scanner_C_ScannerTraceCalc::K2Node_DynamicCast_AsBPCharacter_Demo' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ScannerTraceCalc, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'BP_Scanner_C_ScannerTraceCalc::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ScannerTraceCalc, CallFunc_IsValid_ReturnValue) == 0x000059, "Member 'BP_Scanner_C_ScannerTraceCalc::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ScannerTraceCalc, CallFunc_GetForwardVector_ReturnValue) == 0x00005C, "Member 'BP_Scanner_C_ScannerTraceCalc::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ScannerTraceCalc, CallFunc_RandomUnitVectorInConeInDegrees_ReturnValue) == 0x000068, "Member 'BP_Scanner_C_ScannerTraceCalc::CallFunc_RandomUnitVectorInConeInDegrees_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ScannerTraceCalc, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000074, "Member 'BP_Scanner_C_ScannerTraceCalc::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_ScannerTraceCalc, CallFunc_Add_VectorVector_ReturnValue) == 0x000080, "Member 'BP_Scanner_C_ScannerTraceCalc::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function BP_Scanner.BP_Scanner_C.FixUVStretching
// 0x01F0 (0x01F0 - 0x0000)
struct BP_Scanner_C_FixUVStretching final
{
public:
	struct FVector                                HitLocation;                                       // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal;                                         // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FaceIndex;                                         // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              HitUVLocation;                                     // 0x0024(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FixedSize;                                         // 0x002C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FixedStretch;                                      // 0x0030(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRandomStream                          CallFunc_MakeRandomStream_ReturnValue;             // 0x003C(0x0008)(ZeroConstructor, NoDestructor)
	struct FVector                                CallFunc_RandomUnitVectorFromStream_ReturnValue;   // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue_1;         // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_MakeHitResult_ReturnValue;                // 0x008C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0114(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_FindCollisionUV_UV;                       // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindCollisionUV_ReturnValue;              // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_129[0x3];                                      // 0x0129(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_MakeHitResult_ReturnValue_1;              // 0x012C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x01B4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_FindCollisionUV_UV_1;                     // 0x01BC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindCollisionUV_ReturnValue_1;            // 0x01C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C5[0x3];                                      // 0x01C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_DotProduct2D_ReturnValue;                 // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue_1;  // 0x01CC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x01D4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DotProduct2D_ReturnValue_1;               // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize2D_ReturnValue;                      // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x01E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Scanner_C_FixUVStretching) == 0x000008, "Wrong alignment on BP_Scanner_C_FixUVStretching");
static_assert(sizeof(BP_Scanner_C_FixUVStretching) == 0x0001F0, "Wrong size on BP_Scanner_C_FixUVStretching");
static_assert(offsetof(BP_Scanner_C_FixUVStretching, HitLocation) == 0x000000, "Member 'BP_Scanner_C_FixUVStretching::HitLocation' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_FixUVStretching, HitNormal) == 0x00000C, "Member 'BP_Scanner_C_FixUVStretching::HitNormal' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_FixUVStretching, HitComponent) == 0x000018, "Member 'BP_Scanner_C_FixUVStretching::HitComponent' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_FixUVStretching, FaceIndex) == 0x000020, "Member 'BP_Scanner_C_FixUVStretching::FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_FixUVStretching, HitUVLocation) == 0x000024, "Member 'BP_Scanner_C_FixUVStretching::HitUVLocation' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_FixUVStretching, FixedSize) == 0x00002C, "Member 'BP_Scanner_C_FixUVStretching::FixedSize' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_FixUVStretching, FixedStretch) == 0x000030, "Member 'BP_Scanner_C_FixUVStretching::FixedStretch' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_FixUVStretching, CallFunc_MakeRandomStream_ReturnValue) == 0x00003C, "Member 'BP_Scanner_C_FixUVStretching::CallFunc_MakeRandomStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_FixUVStretching, CallFunc_RandomUnitVectorFromStream_ReturnValue) == 0x000044, "Member 'BP_Scanner_C_FixUVStretching::CallFunc_RandomUnitVectorFromStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_FixUVStretching, CallFunc_Cross_VectorVector_ReturnValue) == 0x000050, "Member 'BP_Scanner_C_FixUVStretching::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_FixUVStretching, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00005C, "Member 'BP_Scanner_C_FixUVStretching::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_FixUVStretching, CallFunc_Cross_VectorVector_ReturnValue_1) == 0x000068, "Member 'BP_Scanner_C_FixUVStretching::CallFunc_Cross_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_FixUVStretching, CallFunc_Add_VectorVector_ReturnValue) == 0x000074, "Member 'BP_Scanner_C_FixUVStretching::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_FixUVStretching, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000080, "Member 'BP_Scanner_C_FixUVStretching::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_FixUVStretching, CallFunc_MakeHitResult_ReturnValue) == 0x00008C, "Member 'BP_Scanner_C_FixUVStretching::CallFunc_MakeHitResult_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_FixUVStretching, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000114, "Member 'BP_Scanner_C_FixUVStretching::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_FixUVStretching, CallFunc_FindCollisionUV_UV) == 0x000120, "Member 'BP_Scanner_C_FixUVStretching::CallFunc_FindCollisionUV_UV' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_FixUVStretching, CallFunc_FindCollisionUV_ReturnValue) == 0x000128, "Member 'BP_Scanner_C_FixUVStretching::CallFunc_FindCollisionUV_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_FixUVStretching, CallFunc_MakeHitResult_ReturnValue_1) == 0x00012C, "Member 'BP_Scanner_C_FixUVStretching::CallFunc_MakeHitResult_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_FixUVStretching, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x0001B4, "Member 'BP_Scanner_C_FixUVStretching::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_FixUVStretching, CallFunc_FindCollisionUV_UV_1) == 0x0001BC, "Member 'BP_Scanner_C_FixUVStretching::CallFunc_FindCollisionUV_UV_1' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_FixUVStretching, CallFunc_FindCollisionUV_ReturnValue_1) == 0x0001C4, "Member 'BP_Scanner_C_FixUVStretching::CallFunc_FindCollisionUV_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_FixUVStretching, CallFunc_DotProduct2D_ReturnValue) == 0x0001C8, "Member 'BP_Scanner_C_FixUVStretching::CallFunc_DotProduct2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_FixUVStretching, CallFunc_Subtract_Vector2DVector2D_ReturnValue_1) == 0x0001CC, "Member 'BP_Scanner_C_FixUVStretching::CallFunc_Subtract_Vector2DVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_FixUVStretching, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x0001D4, "Member 'BP_Scanner_C_FixUVStretching::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_FixUVStretching, CallFunc_DotProduct2D_ReturnValue_1) == 0x0001DC, "Member 'BP_Scanner_C_FixUVStretching::CallFunc_DotProduct2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_FixUVStretching, CallFunc_VSize2D_ReturnValue) == 0x0001E0, "Member 'BP_Scanner_C_FixUVStretching::CallFunc_VSize2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_FixUVStretching, CallFunc_MakeVector_ReturnValue) == 0x0001E4, "Member 'BP_Scanner_C_FixUVStretching::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function BP_Scanner.BP_Scanner_C.InitializeMaterials
// 0x0018 (0x0018 - 0x0000)
struct BP_Scanner_C_InitializeMaterials final
{
public:
	struct FLinearColor                           CallFunc_Conv_ColorToLinearColor_ReturnValue;      // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Scanner_C_InitializeMaterials) == 0x000008, "Wrong alignment on BP_Scanner_C_InitializeMaterials");
static_assert(sizeof(BP_Scanner_C_InitializeMaterials) == 0x000018, "Wrong size on BP_Scanner_C_InitializeMaterials");
static_assert(offsetof(BP_Scanner_C_InitializeMaterials, CallFunc_Conv_ColorToLinearColor_ReturnValue) == 0x000000, "Member 'BP_Scanner_C_InitializeMaterials::CallFunc_Conv_ColorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_InitializeMaterials, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000010, "Member 'BP_Scanner_C_InitializeMaterials::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");

// Function BP_Scanner.BP_Scanner_C.InitializeColors
// 0x0030 (0x0030 - 0x0000)
struct BP_Scanner_C_InitializeColors final
{
public:
	TArray<class FString>                         K2Node_MakeArray_Array;                            // 0x0000(0x0010)(ConstParm, ReferenceParm)
	class FString                                 CallFunc_Array_Random_OutItem;                     // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Random_OutIndex;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 CallFunc_Map_Find_Value;                           // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FColor                                 K2Node_MakeStruct_Color;                           // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Scanner_C_InitializeColors) == 0x000008, "Wrong alignment on BP_Scanner_C_InitializeColors");
static_assert(sizeof(BP_Scanner_C_InitializeColors) == 0x000030, "Wrong size on BP_Scanner_C_InitializeColors");
static_assert(offsetof(BP_Scanner_C_InitializeColors, K2Node_MakeArray_Array) == 0x000000, "Member 'BP_Scanner_C_InitializeColors::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_InitializeColors, CallFunc_Array_Random_OutItem) == 0x000010, "Member 'BP_Scanner_C_InitializeColors::CallFunc_Array_Random_OutItem' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_InitializeColors, CallFunc_Array_Random_OutIndex) == 0x000020, "Member 'BP_Scanner_C_InitializeColors::CallFunc_Array_Random_OutIndex' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_InitializeColors, CallFunc_Map_Find_Value) == 0x000024, "Member 'BP_Scanner_C_InitializeColors::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_InitializeColors, CallFunc_Map_Find_ReturnValue) == 0x000028, "Member 'BP_Scanner_C_InitializeColors::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_InitializeColors, K2Node_MakeStruct_Color) == 0x00002C, "Member 'BP_Scanner_C_InitializeColors::K2Node_MakeStruct_Color' has a wrong offset!");

// Function BP_Scanner.BP_Scanner_C.LiDAR
// 0x0038 (0x0038 - 0x0000)
struct BP_Scanner_C_LiDAR final
{
public:
	float                                         Delta;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 ParentActor;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NewSizeTarget;                                     // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TargetIndex;                                       // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetParentActor_ReturnValue;               // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Scanner_C_LiDAR) == 0x000008, "Wrong alignment on BP_Scanner_C_LiDAR");
static_assert(sizeof(BP_Scanner_C_LiDAR) == 0x000038, "Wrong size on BP_Scanner_C_LiDAR");
static_assert(offsetof(BP_Scanner_C_LiDAR, Delta) == 0x000000, "Member 'BP_Scanner_C_LiDAR::Delta' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_LiDAR, ParentActor) == 0x000008, "Member 'BP_Scanner_C_LiDAR::ParentActor' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_LiDAR, NewSizeTarget) == 0x000010, "Member 'BP_Scanner_C_LiDAR::NewSizeTarget' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_LiDAR, TargetIndex) == 0x000014, "Member 'BP_Scanner_C_LiDAR::TargetIndex' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_LiDAR, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000018, "Member 'BP_Scanner_C_LiDAR::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_LiDAR, CallFunc_MapRangeClamped_ReturnValue) == 0x00001C, "Member 'BP_Scanner_C_LiDAR::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_LiDAR, CallFunc_GetParentActor_ReturnValue) == 0x000020, "Member 'BP_Scanner_C_LiDAR::CallFunc_GetParentActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_LiDAR, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_Scanner_C_LiDAR::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_LiDAR, CallFunc_Add_FloatFloat_ReturnValue) == 0x00002C, "Member 'BP_Scanner_C_LiDAR::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_LiDAR, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000030, "Member 'BP_Scanner_C_LiDAR::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_Scanner.BP_Scanner_C.GetMaterial
// 0x0018 (0x0018 - 0x0000)
struct BP_Scanner_C_GetMaterial final
{
public:
	class UMaterialInterface*                     Material_0;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Adjusted;                                          // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Scanner_C_GetMaterial) == 0x000008, "Wrong alignment on BP_Scanner_C_GetMaterial");
static_assert(sizeof(BP_Scanner_C_GetMaterial) == 0x000018, "Wrong size on BP_Scanner_C_GetMaterial");
static_assert(offsetof(BP_Scanner_C_GetMaterial, Material_0) == 0x000000, "Member 'BP_Scanner_C_GetMaterial::Material_0' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_GetMaterial, Adjusted) == 0x000008, "Member 'BP_Scanner_C_GetMaterial::Adjusted' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_GetMaterial, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000010, "Member 'BP_Scanner_C_GetMaterial::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scanner_C_GetMaterial, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000011, "Member 'BP_Scanner_C_GetMaterial::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");

// Function BP_Scanner.BP_Scanner_C.SetMaterial
// 0x0001 (0x0001 - 0x0000)
struct BP_Scanner_C_SetMaterial final
{
public:
	bool                                          EnabledFOV;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Scanner_C_SetMaterial) == 0x000001, "Wrong alignment on BP_Scanner_C_SetMaterial");
static_assert(sizeof(BP_Scanner_C_SetMaterial) == 0x000001, "Wrong size on BP_Scanner_C_SetMaterial");
static_assert(offsetof(BP_Scanner_C_SetMaterial, EnabledFOV) == 0x000000, "Member 'BP_Scanner_C_SetMaterial::EnabledFOV' has a wrong offset!");

}

