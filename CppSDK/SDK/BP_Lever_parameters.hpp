#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Lever

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_Lever.BP_Lever_C.ExecuteUbergraph_BP_Lever
// 0x0018 (0x0018 - 0x0000)
struct BP_Lever_C_ExecuteUbergraph_BP_Lever final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             K2Node_Event_Character;                            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Lever_C_ExecuteUbergraph_BP_Lever) == 0x000008, "Wrong alignment on BP_Lever_C_ExecuteUbergraph_BP_Lever");
static_assert(sizeof(BP_Lever_C_ExecuteUbergraph_BP_Lever) == 0x000018, "Wrong size on BP_Lever_C_ExecuteUbergraph_BP_Lever");
static_assert(offsetof(BP_Lever_C_ExecuteUbergraph_BP_Lever, EntryPoint) == 0x000000, "Member 'BP_Lever_C_ExecuteUbergraph_BP_Lever::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Lever_C_ExecuteUbergraph_BP_Lever, K2Node_Event_Character) == 0x000008, "Member 'BP_Lever_C_ExecuteUbergraph_BP_Lever::K2Node_Event_Character' has a wrong offset!");
static_assert(offsetof(BP_Lever_C_ExecuteUbergraph_BP_Lever, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_Lever_C_ExecuteUbergraph_BP_Lever::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lever_C_ExecuteUbergraph_BP_Lever, CallFunc_Greater_IntInt_ReturnValue) == 0x000014, "Member 'BP_Lever_C_ExecuteUbergraph_BP_Lever::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_Lever.BP_Lever_C.OnActorUsed
// 0x0008 (0x0008 - 0x0000)
struct BP_Lever_C_OnActorUsed final
{
public:
	class ACharacter*                             Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Lever_C_OnActorUsed) == 0x000008, "Wrong alignment on BP_Lever_C_OnActorUsed");
static_assert(sizeof(BP_Lever_C_OnActorUsed) == 0x000008, "Wrong size on BP_Lever_C_OnActorUsed");
static_assert(offsetof(BP_Lever_C_OnActorUsed, Character) == 0x000000, "Member 'BP_Lever_C_OnActorUsed::Character' has a wrong offset!");

// Function BP_Lever.BP_Lever_C.ToggleElevator
// 0x0001 (0x0001 - 0x0000)
struct BP_Lever_C_ToggleElevator final
{
public:
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Lever_C_ToggleElevator) == 0x000001, "Wrong alignment on BP_Lever_C_ToggleElevator");
static_assert(sizeof(BP_Lever_C_ToggleElevator) == 0x000001, "Wrong size on BP_Lever_C_ToggleElevator");
static_assert(offsetof(BP_Lever_C_ToggleElevator, K2Node_SwitchInteger_CmpSuccess) == 0x000000, "Member 'BP_Lever_C_ToggleElevator::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

}

