#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: JumpFlood_Component2D

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass JumpFlood_Component2D.JumpFlood_Component2D_C
// 0x0060 (0x0110 - 0x00B0)
class UJumpFlood_Component2D_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UMaterialInstanceDynamic*               JumpStepMID;                                       // 0x00B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               FindEdgesMID;                                      // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               BlurEdgesMID;                                      // 0x00C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               FixBandMID;                                        // 0x00D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Resolution;                                        // 0x00D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RequiredPasses;                                    // 0x00DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CompletedPasses;                                   // 0x00E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              TextureSize;                                       // 0x00E4(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureRenderTarget2D*                 RTA;                                               // 0x00F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 RTB;                                               // 0x00F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseBlur;                                           // 0x0100(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x3];                                      // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         BlurPasses;                                        // 0x0104(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CompletedBlurPasses;                               // 0x0108(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PingPongOffset;                                    // 0x010C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_JumpFlood_Component2D(int32 EntryPoint);
	void Assign_RenderTargets(class UTextureRenderTarget2D* RTA_0, class UTextureRenderTarget2D* RTB_0);
	void JumpFlood(class UTextureRenderTarget2D* SeedRT, float SceneCaptureZ, const struct FLinearColor& Curl, bool UseDepth, float Z_Location);
	void SingleJumpStep(class UTextureRenderTarget2D** Result_RT);
	void FindEdges(class UTextureRenderTarget2D* SeedRT, float CaptureZ, const struct FLinearColor& Curl, bool UseDepth, float Z_Location, class UTextureRenderTarget2D** Result_RT);
	void FindEdges_Debug(class UTextureRenderTarget2D* SeedRT, float CaptureZ, const struct FLinearColor& Curl, class UTextureRenderTarget2D* DestRT, float ZOffset);
	void SingleBlurStep(class UTextureRenderTarget2D** Result_RT);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"JumpFlood_Component2D_C">();
	}
	static class UJumpFlood_Component2D_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UJumpFlood_Component2D_C>();
	}
};
static_assert(alignof(UJumpFlood_Component2D_C) == 0x000008, "Wrong alignment on UJumpFlood_Component2D_C");
static_assert(sizeof(UJumpFlood_Component2D_C) == 0x000110, "Wrong size on UJumpFlood_Component2D_C");
static_assert(offsetof(UJumpFlood_Component2D_C, UberGraphFrame) == 0x0000B0, "Member 'UJumpFlood_Component2D_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UJumpFlood_Component2D_C, JumpStepMID) == 0x0000B8, "Member 'UJumpFlood_Component2D_C::JumpStepMID' has a wrong offset!");
static_assert(offsetof(UJumpFlood_Component2D_C, FindEdgesMID) == 0x0000C0, "Member 'UJumpFlood_Component2D_C::FindEdgesMID' has a wrong offset!");
static_assert(offsetof(UJumpFlood_Component2D_C, BlurEdgesMID) == 0x0000C8, "Member 'UJumpFlood_Component2D_C::BlurEdgesMID' has a wrong offset!");
static_assert(offsetof(UJumpFlood_Component2D_C, FixBandMID) == 0x0000D0, "Member 'UJumpFlood_Component2D_C::FixBandMID' has a wrong offset!");
static_assert(offsetof(UJumpFlood_Component2D_C, Resolution) == 0x0000D8, "Member 'UJumpFlood_Component2D_C::Resolution' has a wrong offset!");
static_assert(offsetof(UJumpFlood_Component2D_C, RequiredPasses) == 0x0000DC, "Member 'UJumpFlood_Component2D_C::RequiredPasses' has a wrong offset!");
static_assert(offsetof(UJumpFlood_Component2D_C, CompletedPasses) == 0x0000E0, "Member 'UJumpFlood_Component2D_C::CompletedPasses' has a wrong offset!");
static_assert(offsetof(UJumpFlood_Component2D_C, TextureSize) == 0x0000E4, "Member 'UJumpFlood_Component2D_C::TextureSize' has a wrong offset!");
static_assert(offsetof(UJumpFlood_Component2D_C, RTA) == 0x0000F0, "Member 'UJumpFlood_Component2D_C::RTA' has a wrong offset!");
static_assert(offsetof(UJumpFlood_Component2D_C, RTB) == 0x0000F8, "Member 'UJumpFlood_Component2D_C::RTB' has a wrong offset!");
static_assert(offsetof(UJumpFlood_Component2D_C, UseBlur) == 0x000100, "Member 'UJumpFlood_Component2D_C::UseBlur' has a wrong offset!");
static_assert(offsetof(UJumpFlood_Component2D_C, BlurPasses) == 0x000104, "Member 'UJumpFlood_Component2D_C::BlurPasses' has a wrong offset!");
static_assert(offsetof(UJumpFlood_Component2D_C, CompletedBlurPasses) == 0x000108, "Member 'UJumpFlood_Component2D_C::CompletedBlurPasses' has a wrong offset!");
static_assert(offsetof(UJumpFlood_Component2D_C, PingPongOffset) == 0x00010C, "Member 'UJumpFlood_Component2D_C::PingPongOffset' has a wrong offset!");

}

