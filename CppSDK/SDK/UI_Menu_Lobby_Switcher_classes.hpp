#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_Menu_Lobby_Switcher

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_Menu_Lobby_Switcher.UI_Menu_Lobby_Switcher_C
// 0x0058 (0x02B8 - 0x0260)
class UUI_Menu_Lobby_Switcher_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 Background;                                        // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_Menu_Lobby_Switcher_Button_C*       Btn_Left;                                          // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_Menu_Lobby_Switcher_Button_C*       Btn_Right;                                         // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Txt_Name;                                          // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<class FText>                           ModeNames;                                         // 0x0288(0x0010)(Edit, BlueprintVisible)
	int32                                         CurrentModeIndex;                                  // 0x0298(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29C[0x4];                                      // 0x029C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(int32 SelectedOption)> OnSwitched;                                 // 0x02A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          HideDifficulty;                                    // 0x02B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_UI_Menu_Lobby_Switcher(int32 EntryPoint);
	void ToggleEnabled(bool IsEnabled);
	void UpdateButtonVisibilityOnly();
	void ManualRight();
	void ManualLeft();
	void ToggleFocus(bool IsFocused);
	void ToggleHover(bool IsHovered_0);
	void PreConstruct(bool IsDesignTime);
	void Construct();
	void UpdateButtons();
	void BndEvt__UI_Menu_Lobby_Switcher_Btn_Right_K2Node_ComponentBoundEvent_1_OnClick__DelegateSignature();
	void BndEvt__UI_Menu_Lobby_Switcher_Btn_Left_K2Node_ComponentBoundEvent_0_OnClick__DelegateSignature();
	void GetCurrentMode(class FText* ModeName);
	struct FEventReply OnPreviewKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_Menu_Lobby_Switcher_C">();
	}
	static class UUI_Menu_Lobby_Switcher_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_Menu_Lobby_Switcher_C>();
	}
};
static_assert(alignof(UUI_Menu_Lobby_Switcher_C) == 0x000008, "Wrong alignment on UUI_Menu_Lobby_Switcher_C");
static_assert(sizeof(UUI_Menu_Lobby_Switcher_C) == 0x0002B8, "Wrong size on UUI_Menu_Lobby_Switcher_C");
static_assert(offsetof(UUI_Menu_Lobby_Switcher_C, UberGraphFrame) == 0x000260, "Member 'UUI_Menu_Lobby_Switcher_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_Menu_Lobby_Switcher_C, Background) == 0x000268, "Member 'UUI_Menu_Lobby_Switcher_C::Background' has a wrong offset!");
static_assert(offsetof(UUI_Menu_Lobby_Switcher_C, Btn_Left) == 0x000270, "Member 'UUI_Menu_Lobby_Switcher_C::Btn_Left' has a wrong offset!");
static_assert(offsetof(UUI_Menu_Lobby_Switcher_C, Btn_Right) == 0x000278, "Member 'UUI_Menu_Lobby_Switcher_C::Btn_Right' has a wrong offset!");
static_assert(offsetof(UUI_Menu_Lobby_Switcher_C, Txt_Name) == 0x000280, "Member 'UUI_Menu_Lobby_Switcher_C::Txt_Name' has a wrong offset!");
static_assert(offsetof(UUI_Menu_Lobby_Switcher_C, ModeNames) == 0x000288, "Member 'UUI_Menu_Lobby_Switcher_C::ModeNames' has a wrong offset!");
static_assert(offsetof(UUI_Menu_Lobby_Switcher_C, CurrentModeIndex) == 0x000298, "Member 'UUI_Menu_Lobby_Switcher_C::CurrentModeIndex' has a wrong offset!");
static_assert(offsetof(UUI_Menu_Lobby_Switcher_C, OnSwitched) == 0x0002A0, "Member 'UUI_Menu_Lobby_Switcher_C::OnSwitched' has a wrong offset!");
static_assert(offsetof(UUI_Menu_Lobby_Switcher_C, HideDifficulty) == 0x0002B0, "Member 'UUI_Menu_Lobby_Switcher_C::HideDifficulty' has a wrong offset!");

}

