#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_Menu_ModeSelection_Element

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "E_GameMode_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_Menu_ModeSelection_Element.UI_Menu_ModeSelection_Element_C
// 0x0060 (0x02C0 - 0x0260)
class UUI_Menu_ModeSelection_Element_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 Img_BG;                                            // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Bg_Hovered;                                    // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Txt_Lock;                                          // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Txt_Name;                                          // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   Name_0;                                            // 0x0288(0x0018)(Edit, BlueprintVisible)
	bool                                          bEnable;                                           // 0x02A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A1[0x7];                                      // 0x02A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnClicked;                                         // 0x02A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	E_GameMode                                    Mode;                                              // 0x02B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_UI_Menu_ModeSelection_Element(int32 EntryPoint);
	void Construct();
	void ToggleFocus(bool IsFocused);
	void OnMouseLeave(const struct FPointerEvent& MouseEvent);
	void OnMouseEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void SetButtonEnable(bool bEnable_0);
	void PreConstruct(bool IsDesignTime);
	void ToggleEnabled(bool IsEnabled);
	void ToggleHover(bool IsHovered_0);
	struct FEventReply OnMouseButtonDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	struct FEventReply OnKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_Menu_ModeSelection_Element_C">();
	}
	static class UUI_Menu_ModeSelection_Element_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_Menu_ModeSelection_Element_C>();
	}
};
static_assert(alignof(UUI_Menu_ModeSelection_Element_C) == 0x000008, "Wrong alignment on UUI_Menu_ModeSelection_Element_C");
static_assert(sizeof(UUI_Menu_ModeSelection_Element_C) == 0x0002C0, "Wrong size on UUI_Menu_ModeSelection_Element_C");
static_assert(offsetof(UUI_Menu_ModeSelection_Element_C, UberGraphFrame) == 0x000260, "Member 'UUI_Menu_ModeSelection_Element_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_Menu_ModeSelection_Element_C, Img_BG) == 0x000268, "Member 'UUI_Menu_ModeSelection_Element_C::Img_BG' has a wrong offset!");
static_assert(offsetof(UUI_Menu_ModeSelection_Element_C, Img_Bg_Hovered) == 0x000270, "Member 'UUI_Menu_ModeSelection_Element_C::Img_Bg_Hovered' has a wrong offset!");
static_assert(offsetof(UUI_Menu_ModeSelection_Element_C, Txt_Lock) == 0x000278, "Member 'UUI_Menu_ModeSelection_Element_C::Txt_Lock' has a wrong offset!");
static_assert(offsetof(UUI_Menu_ModeSelection_Element_C, Txt_Name) == 0x000280, "Member 'UUI_Menu_ModeSelection_Element_C::Txt_Name' has a wrong offset!");
static_assert(offsetof(UUI_Menu_ModeSelection_Element_C, Name_0) == 0x000288, "Member 'UUI_Menu_ModeSelection_Element_C::Name_0' has a wrong offset!");
static_assert(offsetof(UUI_Menu_ModeSelection_Element_C, bEnable) == 0x0002A0, "Member 'UUI_Menu_ModeSelection_Element_C::bEnable' has a wrong offset!");
static_assert(offsetof(UUI_Menu_ModeSelection_Element_C, OnClicked) == 0x0002A8, "Member 'UUI_Menu_ModeSelection_Element_C::OnClicked' has a wrong offset!");
static_assert(offsetof(UUI_Menu_ModeSelection_Element_C, Mode) == 0x0002B8, "Member 'UUI_Menu_ModeSelection_Element_C::Mode' has a wrong offset!");

}

