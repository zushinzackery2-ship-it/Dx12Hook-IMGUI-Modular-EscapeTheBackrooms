#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FlashlightVolume

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_FlashlightVolume.BP_FlashlightVolume_C.ExecuteUbergraph_BP_FlashlightVolume
// 0x0130 (0x0130 - 0x0000)
struct BP_FlashlightVolume_C_ExecuteUbergraph_BP_FlashlightVolume final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0028(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPCharacter_Demo_C*                    K2Node_DynamicCast_AsBPCharacter_Demo;             // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPCharacter_Demo_C*                    K2Node_DynamicCast_AsBPCharacter_Demo_1;           // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors;   // 0x00F0(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x3];                                      // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Item_Flashlight_C*                  K2Node_DynamicCast_AsBP_Item_Flashlight;           // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x011A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11B[0x5];                                      // 0x011B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Item_Flashlight_C*                  K2Node_DynamicCast_AsBP_Item_Flashlight_1;         // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_1;        // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FlashlightVolume_C_ExecuteUbergraph_BP_FlashlightVolume) == 0x000008, "Wrong alignment on BP_FlashlightVolume_C_ExecuteUbergraph_BP_FlashlightVolume");
static_assert(sizeof(BP_FlashlightVolume_C_ExecuteUbergraph_BP_FlashlightVolume) == 0x000130, "Wrong size on BP_FlashlightVolume_C_ExecuteUbergraph_BP_FlashlightVolume");
static_assert(offsetof(BP_FlashlightVolume_C_ExecuteUbergraph_BP_FlashlightVolume, EntryPoint) == 0x000000, "Member 'BP_FlashlightVolume_C_ExecuteUbergraph_BP_FlashlightVolume::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_FlashlightVolume_C_ExecuteUbergraph_BP_FlashlightVolume, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x000008, "Member 'BP_FlashlightVolume_C_ExecuteUbergraph_BP_FlashlightVolume::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(BP_FlashlightVolume_C_ExecuteUbergraph_BP_FlashlightVolume, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000010, "Member 'BP_FlashlightVolume_C_ExecuteUbergraph_BP_FlashlightVolume::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(BP_FlashlightVolume_C_ExecuteUbergraph_BP_FlashlightVolume, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000018, "Member 'BP_FlashlightVolume_C_ExecuteUbergraph_BP_FlashlightVolume::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(BP_FlashlightVolume_C_ExecuteUbergraph_BP_FlashlightVolume, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x000020, "Member 'BP_FlashlightVolume_C_ExecuteUbergraph_BP_FlashlightVolume::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(BP_FlashlightVolume_C_ExecuteUbergraph_BP_FlashlightVolume, K2Node_ComponentBoundEvent_bFromSweep) == 0x000024, "Member 'BP_FlashlightVolume_C_ExecuteUbergraph_BP_FlashlightVolume::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_FlashlightVolume_C_ExecuteUbergraph_BP_FlashlightVolume, K2Node_ComponentBoundEvent_SweepResult) == 0x000028, "Member 'BP_FlashlightVolume_C_ExecuteUbergraph_BP_FlashlightVolume::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_FlashlightVolume_C_ExecuteUbergraph_BP_FlashlightVolume, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x0000B0, "Member 'BP_FlashlightVolume_C_ExecuteUbergraph_BP_FlashlightVolume::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_FlashlightVolume_C_ExecuteUbergraph_BP_FlashlightVolume, K2Node_ComponentBoundEvent_OtherActor) == 0x0000B8, "Member 'BP_FlashlightVolume_C_ExecuteUbergraph_BP_FlashlightVolume::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_FlashlightVolume_C_ExecuteUbergraph_BP_FlashlightVolume, K2Node_ComponentBoundEvent_OtherComp) == 0x0000C0, "Member 'BP_FlashlightVolume_C_ExecuteUbergraph_BP_FlashlightVolume::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_FlashlightVolume_C_ExecuteUbergraph_BP_FlashlightVolume, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x0000C8, "Member 'BP_FlashlightVolume_C_ExecuteUbergraph_BP_FlashlightVolume::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_FlashlightVolume_C_ExecuteUbergraph_BP_FlashlightVolume, K2Node_DynamicCast_AsBPCharacter_Demo) == 0x0000D0, "Member 'BP_FlashlightVolume_C_ExecuteUbergraph_BP_FlashlightVolume::K2Node_DynamicCast_AsBPCharacter_Demo' has a wrong offset!");
static_assert(offsetof(BP_FlashlightVolume_C_ExecuteUbergraph_BP_FlashlightVolume, K2Node_DynamicCast_bSuccess) == 0x0000D8, "Member 'BP_FlashlightVolume_C_ExecuteUbergraph_BP_FlashlightVolume::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FlashlightVolume_C_ExecuteUbergraph_BP_FlashlightVolume, K2Node_DynamicCast_AsBPCharacter_Demo_1) == 0x0000E0, "Member 'BP_FlashlightVolume_C_ExecuteUbergraph_BP_FlashlightVolume::K2Node_DynamicCast_AsBPCharacter_Demo_1' has a wrong offset!");
static_assert(offsetof(BP_FlashlightVolume_C_ExecuteUbergraph_BP_FlashlightVolume, K2Node_DynamicCast_bSuccess_1) == 0x0000E8, "Member 'BP_FlashlightVolume_C_ExecuteUbergraph_BP_FlashlightVolume::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_FlashlightVolume_C_ExecuteUbergraph_BP_FlashlightVolume, CallFunc_GetOverlappingActors_OverlappingActors) == 0x0000F0, "Member 'BP_FlashlightVolume_C_ExecuteUbergraph_BP_FlashlightVolume::CallFunc_GetOverlappingActors_OverlappingActors' has a wrong offset!");
static_assert(offsetof(BP_FlashlightVolume_C_ExecuteUbergraph_BP_FlashlightVolume, CallFunc_IsValid_ReturnValue) == 0x000100, "Member 'BP_FlashlightVolume_C_ExecuteUbergraph_BP_FlashlightVolume::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlashlightVolume_C_ExecuteUbergraph_BP_FlashlightVolume, CallFunc_Array_Length_ReturnValue) == 0x000104, "Member 'BP_FlashlightVolume_C_ExecuteUbergraph_BP_FlashlightVolume::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlashlightVolume_C_ExecuteUbergraph_BP_FlashlightVolume, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000108, "Member 'BP_FlashlightVolume_C_ExecuteUbergraph_BP_FlashlightVolume::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlashlightVolume_C_ExecuteUbergraph_BP_FlashlightVolume, K2Node_DynamicCast_AsBP_Item_Flashlight) == 0x000110, "Member 'BP_FlashlightVolume_C_ExecuteUbergraph_BP_FlashlightVolume::K2Node_DynamicCast_AsBP_Item_Flashlight' has a wrong offset!");
static_assert(offsetof(BP_FlashlightVolume_C_ExecuteUbergraph_BP_FlashlightVolume, K2Node_DynamicCast_bSuccess_2) == 0x000118, "Member 'BP_FlashlightVolume_C_ExecuteUbergraph_BP_FlashlightVolume::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_FlashlightVolume_C_ExecuteUbergraph_BP_FlashlightVolume, CallFunc_IsLocallyControlled_ReturnValue) == 0x000119, "Member 'BP_FlashlightVolume_C_ExecuteUbergraph_BP_FlashlightVolume::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlashlightVolume_C_ExecuteUbergraph_BP_FlashlightVolume, CallFunc_IsValid_ReturnValue_1) == 0x00011A, "Member 'BP_FlashlightVolume_C_ExecuteUbergraph_BP_FlashlightVolume::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlashlightVolume_C_ExecuteUbergraph_BP_FlashlightVolume, K2Node_DynamicCast_AsBP_Item_Flashlight_1) == 0x000120, "Member 'BP_FlashlightVolume_C_ExecuteUbergraph_BP_FlashlightVolume::K2Node_DynamicCast_AsBP_Item_Flashlight_1' has a wrong offset!");
static_assert(offsetof(BP_FlashlightVolume_C_ExecuteUbergraph_BP_FlashlightVolume, K2Node_DynamicCast_bSuccess_3) == 0x000128, "Member 'BP_FlashlightVolume_C_ExecuteUbergraph_BP_FlashlightVolume::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_FlashlightVolume_C_ExecuteUbergraph_BP_FlashlightVolume, CallFunc_IsLocallyControlled_ReturnValue_1) == 0x000129, "Member 'BP_FlashlightVolume_C_ExecuteUbergraph_BP_FlashlightVolume::CallFunc_IsLocallyControlled_ReturnValue_1' has a wrong offset!");

// Function BP_FlashlightVolume.BP_FlashlightVolume_C.BndEvt__BP_FlashlightVolume_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_FlashlightVolume_C_BndEvt__BP_FlashlightVolume_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlashlightVolume_C_BndEvt__BP_FlashlightVolume_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_FlashlightVolume_C_BndEvt__BP_FlashlightVolume_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_FlashlightVolume_C_BndEvt__BP_FlashlightVolume_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on BP_FlashlightVolume_C_BndEvt__BP_FlashlightVolume_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_FlashlightVolume_C_BndEvt__BP_FlashlightVolume_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_FlashlightVolume_C_BndEvt__BP_FlashlightVolume_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_FlashlightVolume_C_BndEvt__BP_FlashlightVolume_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_FlashlightVolume_C_BndEvt__BP_FlashlightVolume_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_FlashlightVolume_C_BndEvt__BP_FlashlightVolume_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_FlashlightVolume_C_BndEvt__BP_FlashlightVolume_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_FlashlightVolume_C_BndEvt__BP_FlashlightVolume_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_FlashlightVolume_C_BndEvt__BP_FlashlightVolume_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function BP_FlashlightVolume.BP_FlashlightVolume_C.BndEvt__BP_FlashlightVolume_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct BP_FlashlightVolume_C_BndEvt__BP_FlashlightVolume_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_FlashlightVolume_C_BndEvt__BP_FlashlightVolume_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_FlashlightVolume_C_BndEvt__BP_FlashlightVolume_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_FlashlightVolume_C_BndEvt__BP_FlashlightVolume_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on BP_FlashlightVolume_C_BndEvt__BP_FlashlightVolume_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_FlashlightVolume_C_BndEvt__BP_FlashlightVolume_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_FlashlightVolume_C_BndEvt__BP_FlashlightVolume_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_FlashlightVolume_C_BndEvt__BP_FlashlightVolume_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_FlashlightVolume_C_BndEvt__BP_FlashlightVolume_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_FlashlightVolume_C_BndEvt__BP_FlashlightVolume_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_FlashlightVolume_C_BndEvt__BP_FlashlightVolume_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_FlashlightVolume_C_BndEvt__BP_FlashlightVolume_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_FlashlightVolume_C_BndEvt__BP_FlashlightVolume_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_FlashlightVolume_C_BndEvt__BP_FlashlightVolume_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_FlashlightVolume_C_BndEvt__BP_FlashlightVolume_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_FlashlightVolume_C_BndEvt__BP_FlashlightVolume_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_FlashlightVolume_C_BndEvt__BP_FlashlightVolume_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

}

