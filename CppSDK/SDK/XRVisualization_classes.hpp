#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: XRVisualization

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// Class XRVisualization.XRVisualizationLoadHelper
// 0x0020 (0x0048 - 0x0028)
class UXRVisualizationLoadHelper final : public UObject
{
public:
	class UStaticMesh*                            GenericHMD;                                        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                            OculusControllerMesh;                              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                            ViveControllerMesh;                                // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                            STEMControllerMesh;                                // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"XRVisualizationLoadHelper">();
	}
	static class UXRVisualizationLoadHelper* GetDefaultObj()
	{
		return GetDefaultObjImpl<UXRVisualizationLoadHelper>();
	}
};
static_assert(alignof(UXRVisualizationLoadHelper) == 0x000008, "Wrong alignment on UXRVisualizationLoadHelper");
static_assert(sizeof(UXRVisualizationLoadHelper) == 0x000048, "Wrong size on UXRVisualizationLoadHelper");
static_assert(offsetof(UXRVisualizationLoadHelper, GenericHMD) == 0x000028, "Member 'UXRVisualizationLoadHelper::GenericHMD' has a wrong offset!");
static_assert(offsetof(UXRVisualizationLoadHelper, OculusControllerMesh) == 0x000030, "Member 'UXRVisualizationLoadHelper::OculusControllerMesh' has a wrong offset!");
static_assert(offsetof(UXRVisualizationLoadHelper, ViveControllerMesh) == 0x000038, "Member 'UXRVisualizationLoadHelper::ViveControllerMesh' has a wrong offset!");
static_assert(offsetof(UXRVisualizationLoadHelper, STEMControllerMesh) == 0x000040, "Member 'UXRVisualizationLoadHelper::STEMControllerMesh' has a wrong offset!");

// Class XRVisualization.XRVisualizationFunctionLibrary
// 0x0008 (0x0030 - 0x0028)
class UXRVisualizationFunctionLibrary final : public UBlueprintFunctionLibrary
{
public:
	class UXRVisualizationLoadHelper*             LoadHelper;                                        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static void RenderHMD(const struct FXRHMDData& XRHMDData);
	static void RenderMotionController(const struct FXRMotionControllerData& XRControllerData, bool bRight);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"XRVisualizationFunctionLibrary">();
	}
	static class UXRVisualizationFunctionLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UXRVisualizationFunctionLibrary>();
	}
};
static_assert(alignof(UXRVisualizationFunctionLibrary) == 0x000008, "Wrong alignment on UXRVisualizationFunctionLibrary");
static_assert(sizeof(UXRVisualizationFunctionLibrary) == 0x000030, "Wrong size on UXRVisualizationFunctionLibrary");
static_assert(offsetof(UXRVisualizationFunctionLibrary, LoadHelper) == 0x000028, "Member 'UXRVisualizationFunctionLibrary::LoadHelper' has a wrong offset!");

}

