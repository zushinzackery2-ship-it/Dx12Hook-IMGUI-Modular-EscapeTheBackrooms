#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Item_AlmondWater

#include "Basic.hpp"

#include "Backrooms_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_Item_AlmondWater.BP_Item_AlmondWater_C.ExecuteUbergraph_BP_Item_AlmondWater
// 0x0280 (0x0280 - 0x0000)
struct BP_Item_AlmondWater_C_ExecuteUbergraph_BP_Item_AlmondWater final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_4;                   // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_3;                   // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_1;            // 0x0024(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_2;                   // 0x0034(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_2;            // 0x003C(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_1;                   // 0x004C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_3;            // 0x0054(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName;                     // 0x0064(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_4;            // 0x006C(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   Temp_name_Variable;                                // 0x007C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_1;                       // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A4[0xC];                                       // 0x00A4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00B0(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_GetAttachParentActor_ReturnValue;         // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABPCharacter_Demo_C*                    K2Node_DynamicCast_AsBPCharacter_Demo;             // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F2[0x6];                                       // 0x00F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue; // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Target;                         // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFancyCharacter*                        K2Node_CustomEvent_Character;                      // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_Breakable_C>       K2Node_DynamicCast_AsBP_Breakable;                 // 0x0118(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABPCharacter_Demo_C*                    K2Node_DynamicCast_AsBPCharacter_Demo_1;           // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue;           // 0x0148(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMP_PS_C*                               K2Node_DynamicCast_AsMP_PS;                        // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_Enable;                               // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EEventType                                    K2Node_Event_EventType;                            // 0x015A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15B[0x1];                                      // 0x015B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x015C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_1;  // 0x01E4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_26C[0x4];                                      // 0x026C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue_1;         // 0x0270(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Item_AlmondWater_C_ExecuteUbergraph_BP_Item_AlmondWater) == 0x000010, "Wrong alignment on BP_Item_AlmondWater_C_ExecuteUbergraph_BP_Item_AlmondWater");
static_assert(sizeof(BP_Item_AlmondWater_C_ExecuteUbergraph_BP_Item_AlmondWater) == 0x000280, "Wrong size on BP_Item_AlmondWater_C_ExecuteUbergraph_BP_Item_AlmondWater");
static_assert(offsetof(BP_Item_AlmondWater_C_ExecuteUbergraph_BP_Item_AlmondWater, EntryPoint) == 0x000000, "Member 'BP_Item_AlmondWater_C_ExecuteUbergraph_BP_Item_AlmondWater::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Item_AlmondWater_C_ExecuteUbergraph_BP_Item_AlmondWater, K2Node_CustomEvent_NotifyName_4) == 0x000004, "Member 'BP_Item_AlmondWater_C_ExecuteUbergraph_BP_Item_AlmondWater::K2Node_CustomEvent_NotifyName_4' has a wrong offset!");
static_assert(offsetof(BP_Item_AlmondWater_C_ExecuteUbergraph_BP_Item_AlmondWater, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'BP_Item_AlmondWater_C_ExecuteUbergraph_BP_Item_AlmondWater::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_Item_AlmondWater_C_ExecuteUbergraph_BP_Item_AlmondWater, K2Node_CustomEvent_NotifyName_3) == 0x00001C, "Member 'BP_Item_AlmondWater_C_ExecuteUbergraph_BP_Item_AlmondWater::K2Node_CustomEvent_NotifyName_3' has a wrong offset!");
static_assert(offsetof(BP_Item_AlmondWater_C_ExecuteUbergraph_BP_Item_AlmondWater, K2Node_CreateDelegate_OutputDelegate_1) == 0x000024, "Member 'BP_Item_AlmondWater_C_ExecuteUbergraph_BP_Item_AlmondWater::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_Item_AlmondWater_C_ExecuteUbergraph_BP_Item_AlmondWater, K2Node_CustomEvent_NotifyName_2) == 0x000034, "Member 'BP_Item_AlmondWater_C_ExecuteUbergraph_BP_Item_AlmondWater::K2Node_CustomEvent_NotifyName_2' has a wrong offset!");
static_assert(offsetof(BP_Item_AlmondWater_C_ExecuteUbergraph_BP_Item_AlmondWater, K2Node_CreateDelegate_OutputDelegate_2) == 0x00003C, "Member 'BP_Item_AlmondWater_C_ExecuteUbergraph_BP_Item_AlmondWater::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_Item_AlmondWater_C_ExecuteUbergraph_BP_Item_AlmondWater, K2Node_CustomEvent_NotifyName_1) == 0x00004C, "Member 'BP_Item_AlmondWater_C_ExecuteUbergraph_BP_Item_AlmondWater::K2Node_CustomEvent_NotifyName_1' has a wrong offset!");
static_assert(offsetof(BP_Item_AlmondWater_C_ExecuteUbergraph_BP_Item_AlmondWater, K2Node_CreateDelegate_OutputDelegate_3) == 0x000054, "Member 'BP_Item_AlmondWater_C_ExecuteUbergraph_BP_Item_AlmondWater::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_Item_AlmondWater_C_ExecuteUbergraph_BP_Item_AlmondWater, K2Node_CustomEvent_NotifyName) == 0x000064, "Member 'BP_Item_AlmondWater_C_ExecuteUbergraph_BP_Item_AlmondWater::K2Node_CustomEvent_NotifyName' has a wrong offset!");
static_assert(offsetof(BP_Item_AlmondWater_C_ExecuteUbergraph_BP_Item_AlmondWater, K2Node_CreateDelegate_OutputDelegate_4) == 0x00006C, "Member 'BP_Item_AlmondWater_C_ExecuteUbergraph_BP_Item_AlmondWater::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_Item_AlmondWater_C_ExecuteUbergraph_BP_Item_AlmondWater, Temp_name_Variable) == 0x00007C, "Member 'BP_Item_AlmondWater_C_ExecuteUbergraph_BP_Item_AlmondWater::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_Item_AlmondWater_C_ExecuteUbergraph_BP_Item_AlmondWater, CallFunc_Lerp_ReturnValue) == 0x000084, "Member 'BP_Item_AlmondWater_C_ExecuteUbergraph_BP_Item_AlmondWater::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Item_AlmondWater_C_ExecuteUbergraph_BP_Item_AlmondWater, CallFunc_Lerp_ReturnValue_1) == 0x000088, "Member 'BP_Item_AlmondWater_C_ExecuteUbergraph_BP_Item_AlmondWater::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Item_AlmondWater_C_ExecuteUbergraph_BP_Item_AlmondWater, CallFunc_MakeRotator_ReturnValue) == 0x00008C, "Member 'BP_Item_AlmondWater_C_ExecuteUbergraph_BP_Item_AlmondWater::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Item_AlmondWater_C_ExecuteUbergraph_BP_Item_AlmondWater, CallFunc_MakeRotator_ReturnValue_1) == 0x000098, "Member 'BP_Item_AlmondWater_C_ExecuteUbergraph_BP_Item_AlmondWater::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Item_AlmondWater_C_ExecuteUbergraph_BP_Item_AlmondWater, CallFunc_MakeTransform_ReturnValue) == 0x0000B0, "Member 'BP_Item_AlmondWater_C_ExecuteUbergraph_BP_Item_AlmondWater::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Item_AlmondWater_C_ExecuteUbergraph_BP_Item_AlmondWater, CallFunc_GetAttachParentActor_ReturnValue) == 0x0000E0, "Member 'BP_Item_AlmondWater_C_ExecuteUbergraph_BP_Item_AlmondWater::CallFunc_GetAttachParentActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Item_AlmondWater_C_ExecuteUbergraph_BP_Item_AlmondWater, K2Node_DynamicCast_AsBPCharacter_Demo) == 0x0000E8, "Member 'BP_Item_AlmondWater_C_ExecuteUbergraph_BP_Item_AlmondWater::K2Node_DynamicCast_AsBPCharacter_Demo' has a wrong offset!");
static_assert(offsetof(BP_Item_AlmondWater_C_ExecuteUbergraph_BP_Item_AlmondWater, K2Node_DynamicCast_bSuccess) == 0x0000F0, "Member 'BP_Item_AlmondWater_C_ExecuteUbergraph_BP_Item_AlmondWater::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Item_AlmondWater_C_ExecuteUbergraph_BP_Item_AlmondWater, CallFunc_IsLocallyControlled_ReturnValue) == 0x0000F1, "Member 'BP_Item_AlmondWater_C_ExecuteUbergraph_BP_Item_AlmondWater::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Item_AlmondWater_C_ExecuteUbergraph_BP_Item_AlmondWater, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue) == 0x0000F8, "Member 'BP_Item_AlmondWater_C_ExecuteUbergraph_BP_Item_AlmondWater::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Item_AlmondWater_C_ExecuteUbergraph_BP_Item_AlmondWater, CallFunc_IsValid_ReturnValue) == 0x000100, "Member 'BP_Item_AlmondWater_C_ExecuteUbergraph_BP_Item_AlmondWater::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Item_AlmondWater_C_ExecuteUbergraph_BP_Item_AlmondWater, K2Node_CustomEvent_Target) == 0x000108, "Member 'BP_Item_AlmondWater_C_ExecuteUbergraph_BP_Item_AlmondWater::K2Node_CustomEvent_Target' has a wrong offset!");
static_assert(offsetof(BP_Item_AlmondWater_C_ExecuteUbergraph_BP_Item_AlmondWater, K2Node_CustomEvent_Character) == 0x000110, "Member 'BP_Item_AlmondWater_C_ExecuteUbergraph_BP_Item_AlmondWater::K2Node_CustomEvent_Character' has a wrong offset!");
static_assert(offsetof(BP_Item_AlmondWater_C_ExecuteUbergraph_BP_Item_AlmondWater, K2Node_DynamicCast_AsBP_Breakable) == 0x000118, "Member 'BP_Item_AlmondWater_C_ExecuteUbergraph_BP_Item_AlmondWater::K2Node_DynamicCast_AsBP_Breakable' has a wrong offset!");
static_assert(offsetof(BP_Item_AlmondWater_C_ExecuteUbergraph_BP_Item_AlmondWater, K2Node_DynamicCast_bSuccess_1) == 0x000128, "Member 'BP_Item_AlmondWater_C_ExecuteUbergraph_BP_Item_AlmondWater::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Item_AlmondWater_C_ExecuteUbergraph_BP_Item_AlmondWater, CallFunc_GetOwner_ReturnValue) == 0x000130, "Member 'BP_Item_AlmondWater_C_ExecuteUbergraph_BP_Item_AlmondWater::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Item_AlmondWater_C_ExecuteUbergraph_BP_Item_AlmondWater, K2Node_DynamicCast_AsBPCharacter_Demo_1) == 0x000138, "Member 'BP_Item_AlmondWater_C_ExecuteUbergraph_BP_Item_AlmondWater::K2Node_DynamicCast_AsBPCharacter_Demo_1' has a wrong offset!");
static_assert(offsetof(BP_Item_AlmondWater_C_ExecuteUbergraph_BP_Item_AlmondWater, K2Node_DynamicCast_bSuccess_2) == 0x000140, "Member 'BP_Item_AlmondWater_C_ExecuteUbergraph_BP_Item_AlmondWater::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_Item_AlmondWater_C_ExecuteUbergraph_BP_Item_AlmondWater, CallFunc_SpawnSoundAttached_ReturnValue) == 0x000148, "Member 'BP_Item_AlmondWater_C_ExecuteUbergraph_BP_Item_AlmondWater::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Item_AlmondWater_C_ExecuteUbergraph_BP_Item_AlmondWater, K2Node_DynamicCast_AsMP_PS) == 0x000150, "Member 'BP_Item_AlmondWater_C_ExecuteUbergraph_BP_Item_AlmondWater::K2Node_DynamicCast_AsMP_PS' has a wrong offset!");
static_assert(offsetof(BP_Item_AlmondWater_C_ExecuteUbergraph_BP_Item_AlmondWater, K2Node_DynamicCast_bSuccess_3) == 0x000158, "Member 'BP_Item_AlmondWater_C_ExecuteUbergraph_BP_Item_AlmondWater::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_Item_AlmondWater_C_ExecuteUbergraph_BP_Item_AlmondWater, K2Node_Event_Enable) == 0x000159, "Member 'BP_Item_AlmondWater_C_ExecuteUbergraph_BP_Item_AlmondWater::K2Node_Event_Enable' has a wrong offset!");
static_assert(offsetof(BP_Item_AlmondWater_C_ExecuteUbergraph_BP_Item_AlmondWater, K2Node_Event_EventType) == 0x00015A, "Member 'BP_Item_AlmondWater_C_ExecuteUbergraph_BP_Item_AlmondWater::K2Node_Event_EventType' has a wrong offset!");
static_assert(offsetof(BP_Item_AlmondWater_C_ExecuteUbergraph_BP_Item_AlmondWater, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x00015C, "Member 'BP_Item_AlmondWater_C_ExecuteUbergraph_BP_Item_AlmondWater::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_Item_AlmondWater_C_ExecuteUbergraph_BP_Item_AlmondWater, CallFunc_K2_SetRelativeRotation_SweepHitResult_1) == 0x0001E4, "Member 'BP_Item_AlmondWater_C_ExecuteUbergraph_BP_Item_AlmondWater::CallFunc_K2_SetRelativeRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_Item_AlmondWater_C_ExecuteUbergraph_BP_Item_AlmondWater, CallFunc_SpawnSoundAttached_ReturnValue_1) == 0x000270, "Member 'BP_Item_AlmondWater_C_ExecuteUbergraph_BP_Item_AlmondWater::CallFunc_SpawnSoundAttached_ReturnValue_1' has a wrong offset!");

// Function BP_Item_AlmondWater.BP_Item_AlmondWater_C.Damage_SERVER
// 0x0010 (0x0010 - 0x0000)
struct BP_Item_AlmondWater_C_Damage_SERVER final
{
public:
	class UObject*                                Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFancyCharacter*                        Character;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Item_AlmondWater_C_Damage_SERVER) == 0x000008, "Wrong alignment on BP_Item_AlmondWater_C_Damage_SERVER");
static_assert(sizeof(BP_Item_AlmondWater_C_Damage_SERVER) == 0x000010, "Wrong size on BP_Item_AlmondWater_C_Damage_SERVER");
static_assert(offsetof(BP_Item_AlmondWater_C_Damage_SERVER, Target) == 0x000000, "Member 'BP_Item_AlmondWater_C_Damage_SERVER::Target' has a wrong offset!");
static_assert(offsetof(BP_Item_AlmondWater_C_Damage_SERVER, Character) == 0x000008, "Member 'BP_Item_AlmondWater_C_Damage_SERVER::Character' has a wrong offset!");

// Function BP_Item_AlmondWater.BP_Item_AlmondWater_C.OnCompleted_3881A8424F905F4C29433AB5756CB3DA
// 0x0008 (0x0008 - 0x0000)
struct BP_Item_AlmondWater_C_OnCompleted_3881A8424F905F4C29433AB5756CB3DA final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Item_AlmondWater_C_OnCompleted_3881A8424F905F4C29433AB5756CB3DA) == 0x000004, "Wrong alignment on BP_Item_AlmondWater_C_OnCompleted_3881A8424F905F4C29433AB5756CB3DA");
static_assert(sizeof(BP_Item_AlmondWater_C_OnCompleted_3881A8424F905F4C29433AB5756CB3DA) == 0x000008, "Wrong size on BP_Item_AlmondWater_C_OnCompleted_3881A8424F905F4C29433AB5756CB3DA");
static_assert(offsetof(BP_Item_AlmondWater_C_OnCompleted_3881A8424F905F4C29433AB5756CB3DA, NotifyName) == 0x000000, "Member 'BP_Item_AlmondWater_C_OnCompleted_3881A8424F905F4C29433AB5756CB3DA::NotifyName' has a wrong offset!");

// Function BP_Item_AlmondWater.BP_Item_AlmondWater_C.OnBlendOut_3881A8424F905F4C29433AB5756CB3DA
// 0x0008 (0x0008 - 0x0000)
struct BP_Item_AlmondWater_C_OnBlendOut_3881A8424F905F4C29433AB5756CB3DA final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Item_AlmondWater_C_OnBlendOut_3881A8424F905F4C29433AB5756CB3DA) == 0x000004, "Wrong alignment on BP_Item_AlmondWater_C_OnBlendOut_3881A8424F905F4C29433AB5756CB3DA");
static_assert(sizeof(BP_Item_AlmondWater_C_OnBlendOut_3881A8424F905F4C29433AB5756CB3DA) == 0x000008, "Wrong size on BP_Item_AlmondWater_C_OnBlendOut_3881A8424F905F4C29433AB5756CB3DA");
static_assert(offsetof(BP_Item_AlmondWater_C_OnBlendOut_3881A8424F905F4C29433AB5756CB3DA, NotifyName) == 0x000000, "Member 'BP_Item_AlmondWater_C_OnBlendOut_3881A8424F905F4C29433AB5756CB3DA::NotifyName' has a wrong offset!");

// Function BP_Item_AlmondWater.BP_Item_AlmondWater_C.OnInterrupted_3881A8424F905F4C29433AB5756CB3DA
// 0x0008 (0x0008 - 0x0000)
struct BP_Item_AlmondWater_C_OnInterrupted_3881A8424F905F4C29433AB5756CB3DA final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Item_AlmondWater_C_OnInterrupted_3881A8424F905F4C29433AB5756CB3DA) == 0x000004, "Wrong alignment on BP_Item_AlmondWater_C_OnInterrupted_3881A8424F905F4C29433AB5756CB3DA");
static_assert(sizeof(BP_Item_AlmondWater_C_OnInterrupted_3881A8424F905F4C29433AB5756CB3DA) == 0x000008, "Wrong size on BP_Item_AlmondWater_C_OnInterrupted_3881A8424F905F4C29433AB5756CB3DA");
static_assert(offsetof(BP_Item_AlmondWater_C_OnInterrupted_3881A8424F905F4C29433AB5756CB3DA, NotifyName) == 0x000000, "Member 'BP_Item_AlmondWater_C_OnInterrupted_3881A8424F905F4C29433AB5756CB3DA::NotifyName' has a wrong offset!");

// Function BP_Item_AlmondWater.BP_Item_AlmondWater_C.OnNotifyBegin_3881A8424F905F4C29433AB5756CB3DA
// 0x0008 (0x0008 - 0x0000)
struct BP_Item_AlmondWater_C_OnNotifyBegin_3881A8424F905F4C29433AB5756CB3DA final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Item_AlmondWater_C_OnNotifyBegin_3881A8424F905F4C29433AB5756CB3DA) == 0x000004, "Wrong alignment on BP_Item_AlmondWater_C_OnNotifyBegin_3881A8424F905F4C29433AB5756CB3DA");
static_assert(sizeof(BP_Item_AlmondWater_C_OnNotifyBegin_3881A8424F905F4C29433AB5756CB3DA) == 0x000008, "Wrong size on BP_Item_AlmondWater_C_OnNotifyBegin_3881A8424F905F4C29433AB5756CB3DA");
static_assert(offsetof(BP_Item_AlmondWater_C_OnNotifyBegin_3881A8424F905F4C29433AB5756CB3DA, NotifyName) == 0x000000, "Member 'BP_Item_AlmondWater_C_OnNotifyBegin_3881A8424F905F4C29433AB5756CB3DA::NotifyName' has a wrong offset!");

// Function BP_Item_AlmondWater.BP_Item_AlmondWater_C.OnNotifyEnd_3881A8424F905F4C29433AB5756CB3DA
// 0x0008 (0x0008 - 0x0000)
struct BP_Item_AlmondWater_C_OnNotifyEnd_3881A8424F905F4C29433AB5756CB3DA final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Item_AlmondWater_C_OnNotifyEnd_3881A8424F905F4C29433AB5756CB3DA) == 0x000004, "Wrong alignment on BP_Item_AlmondWater_C_OnNotifyEnd_3881A8424F905F4C29433AB5756CB3DA");
static_assert(sizeof(BP_Item_AlmondWater_C_OnNotifyEnd_3881A8424F905F4C29433AB5756CB3DA) == 0x000008, "Wrong size on BP_Item_AlmondWater_C_OnNotifyEnd_3881A8424F905F4C29433AB5756CB3DA");
static_assert(offsetof(BP_Item_AlmondWater_C_OnNotifyEnd_3881A8424F905F4C29433AB5756CB3DA, NotifyName) == 0x000000, "Member 'BP_Item_AlmondWater_C_OnNotifyEnd_3881A8424F905F4C29433AB5756CB3DA::NotifyName' has a wrong offset!");

// Function BP_Item_AlmondWater.BP_Item_AlmondWater_C.OnEventLoaded
// 0x0001 (0x0001 - 0x0000)
struct BP_Item_AlmondWater_C_OnEventLoaded final
{
public:
	EEventType                                    EventType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Item_AlmondWater_C_OnEventLoaded) == 0x000001, "Wrong alignment on BP_Item_AlmondWater_C_OnEventLoaded");
static_assert(sizeof(BP_Item_AlmondWater_C_OnEventLoaded) == 0x000001, "Wrong size on BP_Item_AlmondWater_C_OnEventLoaded");
static_assert(offsetof(BP_Item_AlmondWater_C_OnEventLoaded, EventType) == 0x000000, "Member 'BP_Item_AlmondWater_C_OnEventLoaded::EventType' has a wrong offset!");

// Function BP_Item_AlmondWater.BP_Item_AlmondWater_C.ToggleEvent
// 0x0001 (0x0001 - 0x0000)
struct BP_Item_AlmondWater_C_ToggleEvent final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Item_AlmondWater_C_ToggleEvent) == 0x000001, "Wrong alignment on BP_Item_AlmondWater_C_ToggleEvent");
static_assert(sizeof(BP_Item_AlmondWater_C_ToggleEvent) == 0x000001, "Wrong size on BP_Item_AlmondWater_C_ToggleEvent");
static_assert(offsetof(BP_Item_AlmondWater_C_ToggleEvent, Enable) == 0x000000, "Member 'BP_Item_AlmondWater_C_ToggleEvent::Enable' has a wrong offset!");

// Function BP_Item_AlmondWater.BP_Item_AlmondWater_C.SetMaterial
// 0x0002 (0x0002 - 0x0000)
struct BP_Item_AlmondWater_C_SetMaterial final
{
public:
	bool                                          EnabledFOV_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Item_AlmondWater_C_SetMaterial) == 0x000001, "Wrong alignment on BP_Item_AlmondWater_C_SetMaterial");
static_assert(sizeof(BP_Item_AlmondWater_C_SetMaterial) == 0x000002, "Wrong size on BP_Item_AlmondWater_C_SetMaterial");
static_assert(offsetof(BP_Item_AlmondWater_C_SetMaterial, EnabledFOV_0) == 0x000000, "Member 'BP_Item_AlmondWater_C_SetMaterial::EnabledFOV_0' has a wrong offset!");
static_assert(offsetof(BP_Item_AlmondWater_C_SetMaterial, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'BP_Item_AlmondWater_C_SetMaterial::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

}

