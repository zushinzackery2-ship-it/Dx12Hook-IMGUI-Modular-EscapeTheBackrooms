#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_KeyRemap_Theme2

#include "Basic.hpp"

#include "Slate_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WB_KeyRemap_Theme2.WB_KeyRemap_Theme2_C.ExecuteUbergraph_WB_KeyRemap_Theme2
// 0x00C8 (0x00C8 - 0x0000)
struct WB_KeyRemap_Theme2_C_ExecuteUbergraph_WB_KeyRemap_Theme2 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInputSettings*                         CallFunc_GetInputSettings_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FInputChord                            K2Node_ComponentBoundEvent_SelectedKey;            // 0x0018(0x0020)(HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsEnabled;                            // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UInputSettings*                         CallFunc_GetInputSettings_ReturnValue_1;           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FInputActionKeyMapping>         CallFunc_GetActionMappingByName_OutMappings;       // 0x0048(0x0010)(ReferenceParm)
	struct FInputActionKeyMapping                 K2Node_MakeStruct_InputActionKeyMapping;           // 0x0058(0x0028)()
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FInputActionKeyMapping>         CallFunc_GetActionMappingByName_OutMappings_1;     // 0x0088(0x0010)(ReferenceParm)
	bool                                          K2Node_Event_IsHovered;                            // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A[0x6];                                       // 0x009A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputChord                            K2Node_MakeStruct_InputChord;                      // 0x00A0(0x0020)(HasGetValueTypeHash)
	bool                                          K2Node_Event_IsFocused;                            // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_KeyRemap_Theme2_C_ExecuteUbergraph_WB_KeyRemap_Theme2) == 0x000008, "Wrong alignment on WB_KeyRemap_Theme2_C_ExecuteUbergraph_WB_KeyRemap_Theme2");
static_assert(sizeof(WB_KeyRemap_Theme2_C_ExecuteUbergraph_WB_KeyRemap_Theme2) == 0x0000C8, "Wrong size on WB_KeyRemap_Theme2_C_ExecuteUbergraph_WB_KeyRemap_Theme2");
static_assert(offsetof(WB_KeyRemap_Theme2_C_ExecuteUbergraph_WB_KeyRemap_Theme2, EntryPoint) == 0x000000, "Member 'WB_KeyRemap_Theme2_C_ExecuteUbergraph_WB_KeyRemap_Theme2::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_KeyRemap_Theme2_C_ExecuteUbergraph_WB_KeyRemap_Theme2, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'WB_KeyRemap_Theme2_C_ExecuteUbergraph_WB_KeyRemap_Theme2::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_KeyRemap_Theme2_C_ExecuteUbergraph_WB_KeyRemap_Theme2, CallFunc_GetInputSettings_ReturnValue) == 0x000010, "Member 'WB_KeyRemap_Theme2_C_ExecuteUbergraph_WB_KeyRemap_Theme2::CallFunc_GetInputSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_KeyRemap_Theme2_C_ExecuteUbergraph_WB_KeyRemap_Theme2, K2Node_ComponentBoundEvent_SelectedKey) == 0x000018, "Member 'WB_KeyRemap_Theme2_C_ExecuteUbergraph_WB_KeyRemap_Theme2::K2Node_ComponentBoundEvent_SelectedKey' has a wrong offset!");
static_assert(offsetof(WB_KeyRemap_Theme2_C_ExecuteUbergraph_WB_KeyRemap_Theme2, K2Node_Event_IsDesignTime) == 0x000038, "Member 'WB_KeyRemap_Theme2_C_ExecuteUbergraph_WB_KeyRemap_Theme2::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WB_KeyRemap_Theme2_C_ExecuteUbergraph_WB_KeyRemap_Theme2, K2Node_Event_IsEnabled) == 0x000039, "Member 'WB_KeyRemap_Theme2_C_ExecuteUbergraph_WB_KeyRemap_Theme2::K2Node_Event_IsEnabled' has a wrong offset!");
static_assert(offsetof(WB_KeyRemap_Theme2_C_ExecuteUbergraph_WB_KeyRemap_Theme2, CallFunc_GetInputSettings_ReturnValue_1) == 0x000040, "Member 'WB_KeyRemap_Theme2_C_ExecuteUbergraph_WB_KeyRemap_Theme2::CallFunc_GetInputSettings_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_KeyRemap_Theme2_C_ExecuteUbergraph_WB_KeyRemap_Theme2, CallFunc_GetActionMappingByName_OutMappings) == 0x000048, "Member 'WB_KeyRemap_Theme2_C_ExecuteUbergraph_WB_KeyRemap_Theme2::CallFunc_GetActionMappingByName_OutMappings' has a wrong offset!");
static_assert(offsetof(WB_KeyRemap_Theme2_C_ExecuteUbergraph_WB_KeyRemap_Theme2, K2Node_MakeStruct_InputActionKeyMapping) == 0x000058, "Member 'WB_KeyRemap_Theme2_C_ExecuteUbergraph_WB_KeyRemap_Theme2::K2Node_MakeStruct_InputActionKeyMapping' has a wrong offset!");
static_assert(offsetof(WB_KeyRemap_Theme2_C_ExecuteUbergraph_WB_KeyRemap_Theme2, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000080, "Member 'WB_KeyRemap_Theme2_C_ExecuteUbergraph_WB_KeyRemap_Theme2::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_KeyRemap_Theme2_C_ExecuteUbergraph_WB_KeyRemap_Theme2, CallFunc_GetActionMappingByName_OutMappings_1) == 0x000088, "Member 'WB_KeyRemap_Theme2_C_ExecuteUbergraph_WB_KeyRemap_Theme2::CallFunc_GetActionMappingByName_OutMappings_1' has a wrong offset!");
static_assert(offsetof(WB_KeyRemap_Theme2_C_ExecuteUbergraph_WB_KeyRemap_Theme2, K2Node_Event_IsHovered) == 0x000098, "Member 'WB_KeyRemap_Theme2_C_ExecuteUbergraph_WB_KeyRemap_Theme2::K2Node_Event_IsHovered' has a wrong offset!");
static_assert(offsetof(WB_KeyRemap_Theme2_C_ExecuteUbergraph_WB_KeyRemap_Theme2, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x000099, "Member 'WB_KeyRemap_Theme2_C_ExecuteUbergraph_WB_KeyRemap_Theme2::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_KeyRemap_Theme2_C_ExecuteUbergraph_WB_KeyRemap_Theme2, K2Node_MakeStruct_InputChord) == 0x0000A0, "Member 'WB_KeyRemap_Theme2_C_ExecuteUbergraph_WB_KeyRemap_Theme2::K2Node_MakeStruct_InputChord' has a wrong offset!");
static_assert(offsetof(WB_KeyRemap_Theme2_C_ExecuteUbergraph_WB_KeyRemap_Theme2, K2Node_Event_IsFocused) == 0x0000C0, "Member 'WB_KeyRemap_Theme2_C_ExecuteUbergraph_WB_KeyRemap_Theme2::K2Node_Event_IsFocused' has a wrong offset!");

// Function WB_KeyRemap_Theme2.WB_KeyRemap_Theme2_C.ToggleFocus
// 0x0001 (0x0001 - 0x0000)
struct WB_KeyRemap_Theme2_C_ToggleFocus final
{
public:
	bool                                          IsFocused;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_KeyRemap_Theme2_C_ToggleFocus) == 0x000001, "Wrong alignment on WB_KeyRemap_Theme2_C_ToggleFocus");
static_assert(sizeof(WB_KeyRemap_Theme2_C_ToggleFocus) == 0x000001, "Wrong size on WB_KeyRemap_Theme2_C_ToggleFocus");
static_assert(offsetof(WB_KeyRemap_Theme2_C_ToggleFocus, IsFocused) == 0x000000, "Member 'WB_KeyRemap_Theme2_C_ToggleFocus::IsFocused' has a wrong offset!");

// Function WB_KeyRemap_Theme2.WB_KeyRemap_Theme2_C.ToggleHover
// 0x0001 (0x0001 - 0x0000)
struct WB_KeyRemap_Theme2_C_ToggleHover final
{
public:
	bool                                          IsHovered_0;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_KeyRemap_Theme2_C_ToggleHover) == 0x000001, "Wrong alignment on WB_KeyRemap_Theme2_C_ToggleHover");
static_assert(sizeof(WB_KeyRemap_Theme2_C_ToggleHover) == 0x000001, "Wrong size on WB_KeyRemap_Theme2_C_ToggleHover");
static_assert(offsetof(WB_KeyRemap_Theme2_C_ToggleHover, IsHovered_0) == 0x000000, "Member 'WB_KeyRemap_Theme2_C_ToggleHover::IsHovered_0' has a wrong offset!");

// Function WB_KeyRemap_Theme2.WB_KeyRemap_Theme2_C.ToggleEnabled
// 0x0001 (0x0001 - 0x0000)
struct WB_KeyRemap_Theme2_C_ToggleEnabled final
{
public:
	bool                                          IsEnabled;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_KeyRemap_Theme2_C_ToggleEnabled) == 0x000001, "Wrong alignment on WB_KeyRemap_Theme2_C_ToggleEnabled");
static_assert(sizeof(WB_KeyRemap_Theme2_C_ToggleEnabled) == 0x000001, "Wrong size on WB_KeyRemap_Theme2_C_ToggleEnabled");
static_assert(offsetof(WB_KeyRemap_Theme2_C_ToggleEnabled, IsEnabled) == 0x000000, "Member 'WB_KeyRemap_Theme2_C_ToggleEnabled::IsEnabled' has a wrong offset!");

// Function WB_KeyRemap_Theme2.WB_KeyRemap_Theme2_C.BndEvt__WB_KeyRemap_InputKeySelector_K2Node_ComponentBoundEvent_0_OnKeySelected__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct WB_KeyRemap_Theme2_C_BndEvt__WB_KeyRemap_InputKeySelector_K2Node_ComponentBoundEvent_0_OnKeySelected__DelegateSignature final
{
public:
	struct FInputChord                            SelectedKey;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(WB_KeyRemap_Theme2_C_BndEvt__WB_KeyRemap_InputKeySelector_K2Node_ComponentBoundEvent_0_OnKeySelected__DelegateSignature) == 0x000008, "Wrong alignment on WB_KeyRemap_Theme2_C_BndEvt__WB_KeyRemap_InputKeySelector_K2Node_ComponentBoundEvent_0_OnKeySelected__DelegateSignature");
static_assert(sizeof(WB_KeyRemap_Theme2_C_BndEvt__WB_KeyRemap_InputKeySelector_K2Node_ComponentBoundEvent_0_OnKeySelected__DelegateSignature) == 0x000020, "Wrong size on WB_KeyRemap_Theme2_C_BndEvt__WB_KeyRemap_InputKeySelector_K2Node_ComponentBoundEvent_0_OnKeySelected__DelegateSignature");
static_assert(offsetof(WB_KeyRemap_Theme2_C_BndEvt__WB_KeyRemap_InputKeySelector_K2Node_ComponentBoundEvent_0_OnKeySelected__DelegateSignature, SelectedKey) == 0x000000, "Member 'WB_KeyRemap_Theme2_C_BndEvt__WB_KeyRemap_InputKeySelector_K2Node_ComponentBoundEvent_0_OnKeySelected__DelegateSignature::SelectedKey' has a wrong offset!");

// Function WB_KeyRemap_Theme2.WB_KeyRemap_Theme2_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WB_KeyRemap_Theme2_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_KeyRemap_Theme2_C_PreConstruct) == 0x000001, "Wrong alignment on WB_KeyRemap_Theme2_C_PreConstruct");
static_assert(sizeof(WB_KeyRemap_Theme2_C_PreConstruct) == 0x000001, "Wrong size on WB_KeyRemap_Theme2_C_PreConstruct");
static_assert(offsetof(WB_KeyRemap_Theme2_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WB_KeyRemap_Theme2_C_PreConstruct::IsDesignTime' has a wrong offset!");

}

