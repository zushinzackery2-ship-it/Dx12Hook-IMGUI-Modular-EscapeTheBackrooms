#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Storm_Volume

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_Storm_Volume.BP_Storm_Volume_C.ExecuteUbergraph_BP_Storm_Volume
// 0x00A0 (0x00A0 - 0x0000)
struct BP_Storm_Volume_C_ExecuteUbergraph_BP_Storm_Volume final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors;   // 0x0008(0x0010)(ReferenceParm)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_OtherActor_1;                         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_OtherActor;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_RowBoat_C*                          K2Node_DynamicCast_AsBP_Row_Boat;                  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_RowBoat_C*                          K2Node_DynamicCast_AsBP_Row_Boat_1;                // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_1;        // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_53[0x5];                                       // 0x0053(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPCharacter_Demo_C*                    K2Node_DynamicCast_AsBPCharacter_Demo;             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPCharacter_Demo_C*                    K2Node_DynamicCast_AsBPCharacter_Demo_1;           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_2;        // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_3;        // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors_1; // 0x0078(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSound2D_ReturnValue;                 // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Storm_Volume_C_ExecuteUbergraph_BP_Storm_Volume) == 0x000008, "Wrong alignment on BP_Storm_Volume_C_ExecuteUbergraph_BP_Storm_Volume");
static_assert(sizeof(BP_Storm_Volume_C_ExecuteUbergraph_BP_Storm_Volume) == 0x0000A0, "Wrong size on BP_Storm_Volume_C_ExecuteUbergraph_BP_Storm_Volume");
static_assert(offsetof(BP_Storm_Volume_C_ExecuteUbergraph_BP_Storm_Volume, EntryPoint) == 0x000000, "Member 'BP_Storm_Volume_C_ExecuteUbergraph_BP_Storm_Volume::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Storm_Volume_C_ExecuteUbergraph_BP_Storm_Volume, CallFunc_GetOverlappingActors_OverlappingActors) == 0x000008, "Member 'BP_Storm_Volume_C_ExecuteUbergraph_BP_Storm_Volume::CallFunc_GetOverlappingActors_OverlappingActors' has a wrong offset!");
static_assert(offsetof(BP_Storm_Volume_C_ExecuteUbergraph_BP_Storm_Volume, Temp_bool_IsClosed_Variable) == 0x000018, "Member 'BP_Storm_Volume_C_ExecuteUbergraph_BP_Storm_Volume::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_Storm_Volume_C_ExecuteUbergraph_BP_Storm_Volume, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'BP_Storm_Volume_C_ExecuteUbergraph_BP_Storm_Volume::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Storm_Volume_C_ExecuteUbergraph_BP_Storm_Volume, Temp_bool_Has_Been_Initd_Variable) == 0x000020, "Member 'BP_Storm_Volume_C_ExecuteUbergraph_BP_Storm_Volume::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_Storm_Volume_C_ExecuteUbergraph_BP_Storm_Volume, Temp_bool_Has_Been_Initd_Variable_1) == 0x000021, "Member 'BP_Storm_Volume_C_ExecuteUbergraph_BP_Storm_Volume::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Storm_Volume_C_ExecuteUbergraph_BP_Storm_Volume, CallFunc_HasAuthority_ReturnValue) == 0x000022, "Member 'BP_Storm_Volume_C_ExecuteUbergraph_BP_Storm_Volume::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Storm_Volume_C_ExecuteUbergraph_BP_Storm_Volume, CallFunc_HasAuthority_ReturnValue_1) == 0x000023, "Member 'BP_Storm_Volume_C_ExecuteUbergraph_BP_Storm_Volume::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Storm_Volume_C_ExecuteUbergraph_BP_Storm_Volume, K2Node_Event_OtherActor_1) == 0x000028, "Member 'BP_Storm_Volume_C_ExecuteUbergraph_BP_Storm_Volume::K2Node_Event_OtherActor_1' has a wrong offset!");
static_assert(offsetof(BP_Storm_Volume_C_ExecuteUbergraph_BP_Storm_Volume, K2Node_Event_OtherActor) == 0x000030, "Member 'BP_Storm_Volume_C_ExecuteUbergraph_BP_Storm_Volume::K2Node_Event_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_Storm_Volume_C_ExecuteUbergraph_BP_Storm_Volume, K2Node_DynamicCast_AsBP_Row_Boat) == 0x000038, "Member 'BP_Storm_Volume_C_ExecuteUbergraph_BP_Storm_Volume::K2Node_DynamicCast_AsBP_Row_Boat' has a wrong offset!");
static_assert(offsetof(BP_Storm_Volume_C_ExecuteUbergraph_BP_Storm_Volume, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_Storm_Volume_C_ExecuteUbergraph_BP_Storm_Volume::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Storm_Volume_C_ExecuteUbergraph_BP_Storm_Volume, K2Node_DynamicCast_AsBP_Row_Boat_1) == 0x000048, "Member 'BP_Storm_Volume_C_ExecuteUbergraph_BP_Storm_Volume::K2Node_DynamicCast_AsBP_Row_Boat_1' has a wrong offset!");
static_assert(offsetof(BP_Storm_Volume_C_ExecuteUbergraph_BP_Storm_Volume, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'BP_Storm_Volume_C_ExecuteUbergraph_BP_Storm_Volume::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Storm_Volume_C_ExecuteUbergraph_BP_Storm_Volume, CallFunc_IsLocallyControlled_ReturnValue) == 0x000051, "Member 'BP_Storm_Volume_C_ExecuteUbergraph_BP_Storm_Volume::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Storm_Volume_C_ExecuteUbergraph_BP_Storm_Volume, CallFunc_IsLocallyControlled_ReturnValue_1) == 0x000052, "Member 'BP_Storm_Volume_C_ExecuteUbergraph_BP_Storm_Volume::CallFunc_IsLocallyControlled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Storm_Volume_C_ExecuteUbergraph_BP_Storm_Volume, K2Node_DynamicCast_AsBPCharacter_Demo) == 0x000058, "Member 'BP_Storm_Volume_C_ExecuteUbergraph_BP_Storm_Volume::K2Node_DynamicCast_AsBPCharacter_Demo' has a wrong offset!");
static_assert(offsetof(BP_Storm_Volume_C_ExecuteUbergraph_BP_Storm_Volume, K2Node_DynamicCast_bSuccess_2) == 0x000060, "Member 'BP_Storm_Volume_C_ExecuteUbergraph_BP_Storm_Volume::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_Storm_Volume_C_ExecuteUbergraph_BP_Storm_Volume, K2Node_DynamicCast_AsBPCharacter_Demo_1) == 0x000068, "Member 'BP_Storm_Volume_C_ExecuteUbergraph_BP_Storm_Volume::K2Node_DynamicCast_AsBPCharacter_Demo_1' has a wrong offset!");
static_assert(offsetof(BP_Storm_Volume_C_ExecuteUbergraph_BP_Storm_Volume, K2Node_DynamicCast_bSuccess_3) == 0x000070, "Member 'BP_Storm_Volume_C_ExecuteUbergraph_BP_Storm_Volume::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_Storm_Volume_C_ExecuteUbergraph_BP_Storm_Volume, CallFunc_IsLocallyControlled_ReturnValue_2) == 0x000071, "Member 'BP_Storm_Volume_C_ExecuteUbergraph_BP_Storm_Volume::CallFunc_IsLocallyControlled_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Storm_Volume_C_ExecuteUbergraph_BP_Storm_Volume, CallFunc_IsLocallyControlled_ReturnValue_3) == 0x000072, "Member 'BP_Storm_Volume_C_ExecuteUbergraph_BP_Storm_Volume::CallFunc_IsLocallyControlled_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Storm_Volume_C_ExecuteUbergraph_BP_Storm_Volume, Temp_bool_IsClosed_Variable_1) == 0x000073, "Member 'BP_Storm_Volume_C_ExecuteUbergraph_BP_Storm_Volume::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Storm_Volume_C_ExecuteUbergraph_BP_Storm_Volume, CallFunc_GetOverlappingActors_OverlappingActors_1) == 0x000078, "Member 'BP_Storm_Volume_C_ExecuteUbergraph_BP_Storm_Volume::CallFunc_GetOverlappingActors_OverlappingActors_1' has a wrong offset!");
static_assert(offsetof(BP_Storm_Volume_C_ExecuteUbergraph_BP_Storm_Volume, CallFunc_Array_Length_ReturnValue_1) == 0x000088, "Member 'BP_Storm_Volume_C_ExecuteUbergraph_BP_Storm_Volume::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Storm_Volume_C_ExecuteUbergraph_BP_Storm_Volume, CallFunc_Add_IntInt_ReturnValue) == 0x00008C, "Member 'BP_Storm_Volume_C_ExecuteUbergraph_BP_Storm_Volume::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Storm_Volume_C_ExecuteUbergraph_BP_Storm_Volume, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000090, "Member 'BP_Storm_Volume_C_ExecuteUbergraph_BP_Storm_Volume::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Storm_Volume_C_ExecuteUbergraph_BP_Storm_Volume, CallFunc_SpawnSound2D_ReturnValue) == 0x000098, "Member 'BP_Storm_Volume_C_ExecuteUbergraph_BP_Storm_Volume::CallFunc_SpawnSound2D_ReturnValue' has a wrong offset!");

// Function BP_Storm_Volume.BP_Storm_Volume_C.ReceiveActorEndOverlap
// 0x0008 (0x0008 - 0x0000)
struct BP_Storm_Volume_C_ReceiveActorEndOverlap final
{
public:
	class AActor*                                 OtherActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Storm_Volume_C_ReceiveActorEndOverlap) == 0x000008, "Wrong alignment on BP_Storm_Volume_C_ReceiveActorEndOverlap");
static_assert(sizeof(BP_Storm_Volume_C_ReceiveActorEndOverlap) == 0x000008, "Wrong size on BP_Storm_Volume_C_ReceiveActorEndOverlap");
static_assert(offsetof(BP_Storm_Volume_C_ReceiveActorEndOverlap, OtherActor) == 0x000000, "Member 'BP_Storm_Volume_C_ReceiveActorEndOverlap::OtherActor' has a wrong offset!");

// Function BP_Storm_Volume.BP_Storm_Volume_C.ReceiveActorBeginOverlap
// 0x0008 (0x0008 - 0x0000)
struct BP_Storm_Volume_C_ReceiveActorBeginOverlap final
{
public:
	class AActor*                                 OtherActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Storm_Volume_C_ReceiveActorBeginOverlap) == 0x000008, "Wrong alignment on BP_Storm_Volume_C_ReceiveActorBeginOverlap");
static_assert(sizeof(BP_Storm_Volume_C_ReceiveActorBeginOverlap) == 0x000008, "Wrong size on BP_Storm_Volume_C_ReceiveActorBeginOverlap");
static_assert(offsetof(BP_Storm_Volume_C_ReceiveActorBeginOverlap, OtherActor) == 0x000000, "Member 'BP_Storm_Volume_C_ReceiveActorBeginOverlap::OtherActor' has a wrong offset!");

}

