#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Lobby_PlayerController_Nebula

#include "Basic.hpp"

#include "S_ConnectedPlayer_structs.hpp"
#include "Engine_structs.hpp"
#include "BP_BasePlayerController_classes.hpp"
#include "E_CameraSetting_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Lobby_PlayerController_Nebula.Lobby_PlayerController_Nebula_C
// 0x00A0 (0x0628 - 0x0588)
class ALobby_PlayerController_Nebula_C final : public ABP_BasePlayerController_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_Lobby_PlayerController_Nebula_C;    // 0x0588(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UVoipManagerComponent*                  VoipManager;                                       // 0x0590(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChatComponent_C*                       ChatComponent;                                     // 0x0598(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UUI_Menu_Lobby_C*                       UI_MenuLobby;                                      // 0x05A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_SettingsPanel_Theme2_C*             SettingsUI_Ref;                                    // 0x05A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_ConnectedPlayer>             ConnectedPlayers;                                  // 0x05B0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	bool                                          IsLaunchingGame;                                   // 0x05C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5C1[0x3];                                      // 0x05C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CurrentGameMode;                                   // 0x05C4(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5CC[0x4];                                      // 0x05CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ReadyUpButton_Text;                                // 0x05D0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          Warning_State_;                                    // 0x05E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Hide_Button_;                                      // 0x05E9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          ReadyUpButton_Initialized_;                        // 0x05EA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          LockButton_;                                       // 0x05EB(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5EC[0x4];                                      // 0x05EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ServerName;                                        // 0x05F0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UW_VOIPHUD_C*                           VOIP_HUD_Ref;                                      // 0x0608(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanTalk;                                           // 0x0610(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	uint8                                         Pad_611[0x7];                                      // 0x0611(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_Menu_Evaluation_C*                  MissionCompleteUI;                                 // 0x0618(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Using_Push_To_Talk;                                // 0x0620(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_Lobby_PlayerController_Nebula(int32 EntryPoint);
	void CreateLobbyScreen();
	void CreateMissionCompleteScreen();
	void OC_Create_MapTravel_Loadingscreen(class FName Map);
	void OC_KickedFromLobby();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void OC_Update_ConnectedPlayersList(const TArray<struct FS_ConnectedPlayer>& ConnectedPlayers_0);
	void OC_Update_ServerName(const class FText& ServerName_0);
	void StartVoice();
	void OC_Launchevent(bool IsLaunchingGame_0);
	void OC_Update_ReadyUpButton(const class FText& Text, bool WarningState_, bool HideButton_);
	void OC_Update_LobbyStatusIndicator(ESlateVisibility CircularThrobber_Visibility, const class FText& LobbyStatus_Text);
	void ReceiveBeginPlay();
	void BndEvt__MP_PlayerController_VoipManager_K2Node_ComponentBoundEvent_2_PlayerStartTalking__DelegateSignature();
	void BndEvt__MP_PlayerController_VoipManager_K2Node_ComponentBoundEvent_0_PlayerStopTalking__DelegateSignature();
	void InpActEvt_Chat_K2Node_InputActionEvent_0(const struct FKey& Key);
	void InpActEvt_Talk_K2Node_InputActionEvent_1(const struct FKey& Key);
	void InpActEvt_Talk_K2Node_InputActionEvent_2(const struct FKey& Key);
	void OnSuccess_42489E9B45F87297AAF674BCE53BFF40();
	void OnFailure_42489E9B45F87297AAF674BCE53BFF40();
	void OnSuccess_5E765EE548557C3B653D32A12A136B0D();
	void OnFailure_5E765EE548557C3B653D32A12A136B0D();
	void InpActEvt_Settings_K2Node_InputActionEvent_3(const struct FKey& Key);
	void Update_LobbyPlayerList();
	void Update_ReadyUpButton();
	void Update_Launchevent();
	void Update_LobbyStatusIndicator(ESlateVisibility CircularThrobberVisibility, const class FText& LobbyStatusText);
	void Update_WB_LobbyMenu();
	void Get_Chat_Component();
	void Get_Player_Name();
	void Save_ReadyUpButton_State(const class FText& ReadyUpButton_Text_0, bool Warning_State__0, bool Hide_Button__0);
	void Create_MapTravel_LoadingScreen(class FName Map);
	void CreateLoadingScreen(const class FText& LoadingScreen_FeedbackText, class UTexture2D* LoadingScreen_Image);
	void Update_Player_Speaking(bool IsSpeaking, const struct FBPUniqueNetId& UniqueId);
	void OnRep_CanTalk();
	void IsMissionSelectOpen(bool* Yes);
	void On_Push_to_Talk_Changed();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Lobby_PlayerController_Nebula_C">();
	}
	static class ALobby_PlayerController_Nebula_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ALobby_PlayerController_Nebula_C>();
	}
};
static_assert(alignof(ALobby_PlayerController_Nebula_C) == 0x000008, "Wrong alignment on ALobby_PlayerController_Nebula_C");
static_assert(sizeof(ALobby_PlayerController_Nebula_C) == 0x000628, "Wrong size on ALobby_PlayerController_Nebula_C");
static_assert(offsetof(ALobby_PlayerController_Nebula_C, UberGraphFrame_Lobby_PlayerController_Nebula_C) == 0x000588, "Member 'ALobby_PlayerController_Nebula_C::UberGraphFrame_Lobby_PlayerController_Nebula_C' has a wrong offset!");
static_assert(offsetof(ALobby_PlayerController_Nebula_C, VoipManager) == 0x000590, "Member 'ALobby_PlayerController_Nebula_C::VoipManager' has a wrong offset!");
static_assert(offsetof(ALobby_PlayerController_Nebula_C, ChatComponent) == 0x000598, "Member 'ALobby_PlayerController_Nebula_C::ChatComponent' has a wrong offset!");
static_assert(offsetof(ALobby_PlayerController_Nebula_C, UI_MenuLobby) == 0x0005A0, "Member 'ALobby_PlayerController_Nebula_C::UI_MenuLobby' has a wrong offset!");
static_assert(offsetof(ALobby_PlayerController_Nebula_C, SettingsUI_Ref) == 0x0005A8, "Member 'ALobby_PlayerController_Nebula_C::SettingsUI_Ref' has a wrong offset!");
static_assert(offsetof(ALobby_PlayerController_Nebula_C, ConnectedPlayers) == 0x0005B0, "Member 'ALobby_PlayerController_Nebula_C::ConnectedPlayers' has a wrong offset!");
static_assert(offsetof(ALobby_PlayerController_Nebula_C, IsLaunchingGame) == 0x0005C0, "Member 'ALobby_PlayerController_Nebula_C::IsLaunchingGame' has a wrong offset!");
static_assert(offsetof(ALobby_PlayerController_Nebula_C, CurrentGameMode) == 0x0005C4, "Member 'ALobby_PlayerController_Nebula_C::CurrentGameMode' has a wrong offset!");
static_assert(offsetof(ALobby_PlayerController_Nebula_C, ReadyUpButton_Text) == 0x0005D0, "Member 'ALobby_PlayerController_Nebula_C::ReadyUpButton_Text' has a wrong offset!");
static_assert(offsetof(ALobby_PlayerController_Nebula_C, Warning_State_) == 0x0005E8, "Member 'ALobby_PlayerController_Nebula_C::Warning_State_' has a wrong offset!");
static_assert(offsetof(ALobby_PlayerController_Nebula_C, Hide_Button_) == 0x0005E9, "Member 'ALobby_PlayerController_Nebula_C::Hide_Button_' has a wrong offset!");
static_assert(offsetof(ALobby_PlayerController_Nebula_C, ReadyUpButton_Initialized_) == 0x0005EA, "Member 'ALobby_PlayerController_Nebula_C::ReadyUpButton_Initialized_' has a wrong offset!");
static_assert(offsetof(ALobby_PlayerController_Nebula_C, LockButton_) == 0x0005EB, "Member 'ALobby_PlayerController_Nebula_C::LockButton_' has a wrong offset!");
static_assert(offsetof(ALobby_PlayerController_Nebula_C, ServerName) == 0x0005F0, "Member 'ALobby_PlayerController_Nebula_C::ServerName' has a wrong offset!");
static_assert(offsetof(ALobby_PlayerController_Nebula_C, VOIP_HUD_Ref) == 0x000608, "Member 'ALobby_PlayerController_Nebula_C::VOIP_HUD_Ref' has a wrong offset!");
static_assert(offsetof(ALobby_PlayerController_Nebula_C, CanTalk) == 0x000610, "Member 'ALobby_PlayerController_Nebula_C::CanTalk' has a wrong offset!");
static_assert(offsetof(ALobby_PlayerController_Nebula_C, MissionCompleteUI) == 0x000618, "Member 'ALobby_PlayerController_Nebula_C::MissionCompleteUI' has a wrong offset!");
static_assert(offsetof(ALobby_PlayerController_Nebula_C, Using_Push_To_Talk) == 0x000620, "Member 'ALobby_PlayerController_Nebula_C::Using_Push_To_Talk' has a wrong offset!");

}

