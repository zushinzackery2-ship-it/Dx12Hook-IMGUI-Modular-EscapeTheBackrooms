#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AIC_Roaming_Smiler

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function AIC_Roaming_Smiler.AIC_Roaming_Smiler_C.ExecuteUbergraph_AIC_Roaming_Smiler
// 0x0110 (0x0110 - 0x0000)
struct AIC_Roaming_Smiler_C_ExecuteUbergraph_AIC_Roaming_Smiler final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Roaming_Smiler_C*                   K2Node_DynamicCast_AsBP_Roaming_Smiler;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_ComponentBoundEvent_Instigator;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_ComponentBoundEvent_Location;               // 0x0028(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent_Volume;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_ComponentBoundEvent_Pawn;                   // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABPCharacter_Demo_C*                    K2Node_DynamicCast_AsBPCharacter_Demo;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPCharacter_Demo_C*                    K2Node_DynamicCast_AsBPCharacter_Demo_1;           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABPCharacter_Demo_C*                    K2Node_CustomEvent_Player;                         // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue;                // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABPCharacter_Demo_C*                    K2Node_CustomEvent_Character;                      // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82[0x6];                                       // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue_1;              // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue_2;              // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBehaviorTree*                          K2Node_CustomEvent_Behavior_Tree;                  // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_1;                 // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A8[0x8];                                       // 0x00A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x00B0(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RunBehaviorTree_ReturnValue;              // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_InverseTransformLocation_ReturnValue;     // 0x00E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue_3;              // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AIC_Roaming_Smiler_C_ExecuteUbergraph_AIC_Roaming_Smiler) == 0x000010, "Wrong alignment on AIC_Roaming_Smiler_C_ExecuteUbergraph_AIC_Roaming_Smiler");
static_assert(sizeof(AIC_Roaming_Smiler_C_ExecuteUbergraph_AIC_Roaming_Smiler) == 0x000110, "Wrong size on AIC_Roaming_Smiler_C_ExecuteUbergraph_AIC_Roaming_Smiler");
static_assert(offsetof(AIC_Roaming_Smiler_C_ExecuteUbergraph_AIC_Roaming_Smiler, EntryPoint) == 0x000000, "Member 'AIC_Roaming_Smiler_C_ExecuteUbergraph_AIC_Roaming_Smiler::EntryPoint' has a wrong offset!");
static_assert(offsetof(AIC_Roaming_Smiler_C_ExecuteUbergraph_AIC_Roaming_Smiler, CallFunc_HasAuthority_ReturnValue) == 0x000004, "Member 'AIC_Roaming_Smiler_C_ExecuteUbergraph_AIC_Roaming_Smiler::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Roaming_Smiler_C_ExecuteUbergraph_AIC_Roaming_Smiler, CallFunc_K2_GetPawn_ReturnValue) == 0x000008, "Member 'AIC_Roaming_Smiler_C_ExecuteUbergraph_AIC_Roaming_Smiler::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Roaming_Smiler_C_ExecuteUbergraph_AIC_Roaming_Smiler, K2Node_DynamicCast_AsBP_Roaming_Smiler) == 0x000010, "Member 'AIC_Roaming_Smiler_C_ExecuteUbergraph_AIC_Roaming_Smiler::K2Node_DynamicCast_AsBP_Roaming_Smiler' has a wrong offset!");
static_assert(offsetof(AIC_Roaming_Smiler_C_ExecuteUbergraph_AIC_Roaming_Smiler, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'AIC_Roaming_Smiler_C_ExecuteUbergraph_AIC_Roaming_Smiler::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AIC_Roaming_Smiler_C_ExecuteUbergraph_AIC_Roaming_Smiler, K2Node_ComponentBoundEvent_Instigator) == 0x000020, "Member 'AIC_Roaming_Smiler_C_ExecuteUbergraph_AIC_Roaming_Smiler::K2Node_ComponentBoundEvent_Instigator' has a wrong offset!");
static_assert(offsetof(AIC_Roaming_Smiler_C_ExecuteUbergraph_AIC_Roaming_Smiler, K2Node_ComponentBoundEvent_Location) == 0x000028, "Member 'AIC_Roaming_Smiler_C_ExecuteUbergraph_AIC_Roaming_Smiler::K2Node_ComponentBoundEvent_Location' has a wrong offset!");
static_assert(offsetof(AIC_Roaming_Smiler_C_ExecuteUbergraph_AIC_Roaming_Smiler, K2Node_ComponentBoundEvent_Volume) == 0x000034, "Member 'AIC_Roaming_Smiler_C_ExecuteUbergraph_AIC_Roaming_Smiler::K2Node_ComponentBoundEvent_Volume' has a wrong offset!");
static_assert(offsetof(AIC_Roaming_Smiler_C_ExecuteUbergraph_AIC_Roaming_Smiler, K2Node_ComponentBoundEvent_Pawn) == 0x000038, "Member 'AIC_Roaming_Smiler_C_ExecuteUbergraph_AIC_Roaming_Smiler::K2Node_ComponentBoundEvent_Pawn' has a wrong offset!");
static_assert(offsetof(AIC_Roaming_Smiler_C_ExecuteUbergraph_AIC_Roaming_Smiler, K2Node_DynamicCast_AsBPCharacter_Demo) == 0x000040, "Member 'AIC_Roaming_Smiler_C_ExecuteUbergraph_AIC_Roaming_Smiler::K2Node_DynamicCast_AsBPCharacter_Demo' has a wrong offset!");
static_assert(offsetof(AIC_Roaming_Smiler_C_ExecuteUbergraph_AIC_Roaming_Smiler, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'AIC_Roaming_Smiler_C_ExecuteUbergraph_AIC_Roaming_Smiler::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(AIC_Roaming_Smiler_C_ExecuteUbergraph_AIC_Roaming_Smiler, K2Node_DynamicCast_AsBPCharacter_Demo_1) == 0x000050, "Member 'AIC_Roaming_Smiler_C_ExecuteUbergraph_AIC_Roaming_Smiler::K2Node_DynamicCast_AsBPCharacter_Demo_1' has a wrong offset!");
static_assert(offsetof(AIC_Roaming_Smiler_C_ExecuteUbergraph_AIC_Roaming_Smiler, K2Node_DynamicCast_bSuccess_2) == 0x000058, "Member 'AIC_Roaming_Smiler_C_ExecuteUbergraph_AIC_Roaming_Smiler::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(AIC_Roaming_Smiler_C_ExecuteUbergraph_AIC_Roaming_Smiler, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00005C, "Member 'AIC_Roaming_Smiler_C_ExecuteUbergraph_AIC_Roaming_Smiler::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Roaming_Smiler_C_ExecuteUbergraph_AIC_Roaming_Smiler, K2Node_CustomEvent_Player) == 0x000068, "Member 'AIC_Roaming_Smiler_C_ExecuteUbergraph_AIC_Roaming_Smiler::K2Node_CustomEvent_Player' has a wrong offset!");
static_assert(offsetof(AIC_Roaming_Smiler_C_ExecuteUbergraph_AIC_Roaming_Smiler, CallFunc_GetBlackboard_ReturnValue) == 0x000070, "Member 'AIC_Roaming_Smiler_C_ExecuteUbergraph_AIC_Roaming_Smiler::CallFunc_GetBlackboard_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Roaming_Smiler_C_ExecuteUbergraph_AIC_Roaming_Smiler, K2Node_CustomEvent_Character) == 0x000078, "Member 'AIC_Roaming_Smiler_C_ExecuteUbergraph_AIC_Roaming_Smiler::K2Node_CustomEvent_Character' has a wrong offset!");
static_assert(offsetof(AIC_Roaming_Smiler_C_ExecuteUbergraph_AIC_Roaming_Smiler, CallFunc_IsValid_ReturnValue) == 0x000080, "Member 'AIC_Roaming_Smiler_C_ExecuteUbergraph_AIC_Roaming_Smiler::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Roaming_Smiler_C_ExecuteUbergraph_AIC_Roaming_Smiler, CallFunc_IsValid_ReturnValue_1) == 0x000081, "Member 'AIC_Roaming_Smiler_C_ExecuteUbergraph_AIC_Roaming_Smiler::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_Roaming_Smiler_C_ExecuteUbergraph_AIC_Roaming_Smiler, CallFunc_GetBlackboard_ReturnValue_1) == 0x000088, "Member 'AIC_Roaming_Smiler_C_ExecuteUbergraph_AIC_Roaming_Smiler::CallFunc_GetBlackboard_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_Roaming_Smiler_C_ExecuteUbergraph_AIC_Roaming_Smiler, CallFunc_GetBlackboard_ReturnValue_2) == 0x000090, "Member 'AIC_Roaming_Smiler_C_ExecuteUbergraph_AIC_Roaming_Smiler::CallFunc_GetBlackboard_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AIC_Roaming_Smiler_C_ExecuteUbergraph_AIC_Roaming_Smiler, K2Node_CustomEvent_Behavior_Tree) == 0x000098, "Member 'AIC_Roaming_Smiler_C_ExecuteUbergraph_AIC_Roaming_Smiler::K2Node_CustomEvent_Behavior_Tree' has a wrong offset!");
static_assert(offsetof(AIC_Roaming_Smiler_C_ExecuteUbergraph_AIC_Roaming_Smiler, CallFunc_K2_GetPawn_ReturnValue_1) == 0x0000A0, "Member 'AIC_Roaming_Smiler_C_ExecuteUbergraph_AIC_Roaming_Smiler::CallFunc_K2_GetPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_Roaming_Smiler_C_ExecuteUbergraph_AIC_Roaming_Smiler, CallFunc_GetTransform_ReturnValue) == 0x0000B0, "Member 'AIC_Roaming_Smiler_C_ExecuteUbergraph_AIC_Roaming_Smiler::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Roaming_Smiler_C_ExecuteUbergraph_AIC_Roaming_Smiler, CallFunc_RunBehaviorTree_ReturnValue) == 0x0000E0, "Member 'AIC_Roaming_Smiler_C_ExecuteUbergraph_AIC_Roaming_Smiler::CallFunc_RunBehaviorTree_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Roaming_Smiler_C_ExecuteUbergraph_AIC_Roaming_Smiler, CallFunc_InverseTransformLocation_ReturnValue) == 0x0000E4, "Member 'AIC_Roaming_Smiler_C_ExecuteUbergraph_AIC_Roaming_Smiler::CallFunc_InverseTransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Roaming_Smiler_C_ExecuteUbergraph_AIC_Roaming_Smiler, CallFunc_GetBlackboard_ReturnValue_3) == 0x0000F0, "Member 'AIC_Roaming_Smiler_C_ExecuteUbergraph_AIC_Roaming_Smiler::CallFunc_GetBlackboard_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AIC_Roaming_Smiler_C_ExecuteUbergraph_AIC_Roaming_Smiler, CallFunc_BreakVector_X) == 0x0000F8, "Member 'AIC_Roaming_Smiler_C_ExecuteUbergraph_AIC_Roaming_Smiler::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(AIC_Roaming_Smiler_C_ExecuteUbergraph_AIC_Roaming_Smiler, CallFunc_BreakVector_Y) == 0x0000FC, "Member 'AIC_Roaming_Smiler_C_ExecuteUbergraph_AIC_Roaming_Smiler::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(AIC_Roaming_Smiler_C_ExecuteUbergraph_AIC_Roaming_Smiler, CallFunc_BreakVector_Z) == 0x000100, "Member 'AIC_Roaming_Smiler_C_ExecuteUbergraph_AIC_Roaming_Smiler::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(AIC_Roaming_Smiler_C_ExecuteUbergraph_AIC_Roaming_Smiler, CallFunc_Abs_ReturnValue) == 0x000104, "Member 'AIC_Roaming_Smiler_C_ExecuteUbergraph_AIC_Roaming_Smiler::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Roaming_Smiler_C_ExecuteUbergraph_AIC_Roaming_Smiler, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000108, "Member 'AIC_Roaming_Smiler_C_ExecuteUbergraph_AIC_Roaming_Smiler::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Roaming_Smiler_C_ExecuteUbergraph_AIC_Roaming_Smiler, CallFunc_HasAuthority_ReturnValue_1) == 0x000109, "Member 'AIC_Roaming_Smiler_C_ExecuteUbergraph_AIC_Roaming_Smiler::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");

// Function AIC_Roaming_Smiler.AIC_Roaming_Smiler_C.StartChase
// 0x0008 (0x0008 - 0x0000)
struct AIC_Roaming_Smiler_C_StartChase final
{
public:
	class ABPCharacter_Demo_C*                    Character_0;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_Roaming_Smiler_C_StartChase) == 0x000008, "Wrong alignment on AIC_Roaming_Smiler_C_StartChase");
static_assert(sizeof(AIC_Roaming_Smiler_C_StartChase) == 0x000008, "Wrong size on AIC_Roaming_Smiler_C_StartChase");
static_assert(offsetof(AIC_Roaming_Smiler_C_StartChase, Character_0) == 0x000000, "Member 'AIC_Roaming_Smiler_C_StartChase::Character_0' has a wrong offset!");

// Function AIC_Roaming_Smiler.AIC_Roaming_Smiler_C.OnSeePlayer
// 0x0008 (0x0008 - 0x0000)
struct AIC_Roaming_Smiler_C_OnSeePlayer final
{
public:
	class ABPCharacter_Demo_C*                    Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_Roaming_Smiler_C_OnSeePlayer) == 0x000008, "Wrong alignment on AIC_Roaming_Smiler_C_OnSeePlayer");
static_assert(sizeof(AIC_Roaming_Smiler_C_OnSeePlayer) == 0x000008, "Wrong size on AIC_Roaming_Smiler_C_OnSeePlayer");
static_assert(offsetof(AIC_Roaming_Smiler_C_OnSeePlayer, Player) == 0x000000, "Member 'AIC_Roaming_Smiler_C_OnSeePlayer::Player' has a wrong offset!");

// Function AIC_Roaming_Smiler.AIC_Roaming_Smiler_C.BndEvt__AIC_SkinStealer_PawnSensing_K2Node_ComponentBoundEvent_1_HearNoiseDelegate__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct AIC_Roaming_Smiler_C_BndEvt__AIC_SkinStealer_PawnSensing_K2Node_ComponentBoundEvent_1_HearNoiseDelegate__DelegateSignature final
{
public:
	class APawn*                                  Instigator_0;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0008(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Volume;                                            // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_Roaming_Smiler_C_BndEvt__AIC_SkinStealer_PawnSensing_K2Node_ComponentBoundEvent_1_HearNoiseDelegate__DelegateSignature) == 0x000008, "Wrong alignment on AIC_Roaming_Smiler_C_BndEvt__AIC_SkinStealer_PawnSensing_K2Node_ComponentBoundEvent_1_HearNoiseDelegate__DelegateSignature");
static_assert(sizeof(AIC_Roaming_Smiler_C_BndEvt__AIC_SkinStealer_PawnSensing_K2Node_ComponentBoundEvent_1_HearNoiseDelegate__DelegateSignature) == 0x000018, "Wrong size on AIC_Roaming_Smiler_C_BndEvt__AIC_SkinStealer_PawnSensing_K2Node_ComponentBoundEvent_1_HearNoiseDelegate__DelegateSignature");
static_assert(offsetof(AIC_Roaming_Smiler_C_BndEvt__AIC_SkinStealer_PawnSensing_K2Node_ComponentBoundEvent_1_HearNoiseDelegate__DelegateSignature, Instigator_0) == 0x000000, "Member 'AIC_Roaming_Smiler_C_BndEvt__AIC_SkinStealer_PawnSensing_K2Node_ComponentBoundEvent_1_HearNoiseDelegate__DelegateSignature::Instigator_0' has a wrong offset!");
static_assert(offsetof(AIC_Roaming_Smiler_C_BndEvt__AIC_SkinStealer_PawnSensing_K2Node_ComponentBoundEvent_1_HearNoiseDelegate__DelegateSignature, Location) == 0x000008, "Member 'AIC_Roaming_Smiler_C_BndEvt__AIC_SkinStealer_PawnSensing_K2Node_ComponentBoundEvent_1_HearNoiseDelegate__DelegateSignature::Location' has a wrong offset!");
static_assert(offsetof(AIC_Roaming_Smiler_C_BndEvt__AIC_SkinStealer_PawnSensing_K2Node_ComponentBoundEvent_1_HearNoiseDelegate__DelegateSignature, Volume) == 0x000014, "Member 'AIC_Roaming_Smiler_C_BndEvt__AIC_SkinStealer_PawnSensing_K2Node_ComponentBoundEvent_1_HearNoiseDelegate__DelegateSignature::Volume' has a wrong offset!");

// Function AIC_Roaming_Smiler.AIC_Roaming_Smiler_C.BndEvt__Bacteria_AIC_PawnSensing_K2Node_ComponentBoundEvent_0_SeePawnDelegate__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct AIC_Roaming_Smiler_C_BndEvt__Bacteria_AIC_PawnSensing_K2Node_ComponentBoundEvent_0_SeePawnDelegate__DelegateSignature final
{
public:
	class APawn*                                  Pawn_0;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_Roaming_Smiler_C_BndEvt__Bacteria_AIC_PawnSensing_K2Node_ComponentBoundEvent_0_SeePawnDelegate__DelegateSignature) == 0x000008, "Wrong alignment on AIC_Roaming_Smiler_C_BndEvt__Bacteria_AIC_PawnSensing_K2Node_ComponentBoundEvent_0_SeePawnDelegate__DelegateSignature");
static_assert(sizeof(AIC_Roaming_Smiler_C_BndEvt__Bacteria_AIC_PawnSensing_K2Node_ComponentBoundEvent_0_SeePawnDelegate__DelegateSignature) == 0x000008, "Wrong size on AIC_Roaming_Smiler_C_BndEvt__Bacteria_AIC_PawnSensing_K2Node_ComponentBoundEvent_0_SeePawnDelegate__DelegateSignature");
static_assert(offsetof(AIC_Roaming_Smiler_C_BndEvt__Bacteria_AIC_PawnSensing_K2Node_ComponentBoundEvent_0_SeePawnDelegate__DelegateSignature, Pawn_0) == 0x000000, "Member 'AIC_Roaming_Smiler_C_BndEvt__Bacteria_AIC_PawnSensing_K2Node_ComponentBoundEvent_0_SeePawnDelegate__DelegateSignature::Pawn_0' has a wrong offset!");

// Function AIC_Roaming_Smiler.AIC_Roaming_Smiler_C.Setup AI
// 0x0008 (0x0008 - 0x0000)
struct AIC_Roaming_Smiler_C_Setup_AI final
{
public:
	class UBehaviorTree*                          Behavior_Tree;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_Roaming_Smiler_C_Setup_AI) == 0x000008, "Wrong alignment on AIC_Roaming_Smiler_C_Setup_AI");
static_assert(sizeof(AIC_Roaming_Smiler_C_Setup_AI) == 0x000008, "Wrong size on AIC_Roaming_Smiler_C_Setup_AI");
static_assert(offsetof(AIC_Roaming_Smiler_C_Setup_AI, Behavior_Tree) == 0x000000, "Member 'AIC_Roaming_Smiler_C_Setup_AI::Behavior_Tree' has a wrong offset!");

}

