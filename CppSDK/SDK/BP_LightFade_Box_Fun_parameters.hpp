#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LightFade_Box_Fun

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_LightFade_Box_Fun.BP_LightFade_Box_Fun_C.ExecuteUbergraph_BP_LightFade_Box_Fun
// 0x0058 (0x0058 - 0x0000)
struct BP_LightFade_Box_Fun_C_ExecuteUbergraph_BP_LightFade_Box_Fun final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_OtherActor;                           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABPCharacter_Demo_C*                    K2Node_DynamicCast_AsBPCharacter_Demo;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_OtherActor_1;                         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABPCharacter_Demo_C*                    K2Node_DynamicCast_AsBPCharacter_Demo_1;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33[0x5];                                       // 0x0033(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Item_Flashlight_C*                  K2Node_DynamicCast_AsBP_Item_Flashlight;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Item_Flashlight_C*                  K2Node_DynamicCast_AsBP_Item_Flashlight_1;         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_1;        // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LightFade_Box_Fun_C_ExecuteUbergraph_BP_LightFade_Box_Fun) == 0x000008, "Wrong alignment on BP_LightFade_Box_Fun_C_ExecuteUbergraph_BP_LightFade_Box_Fun");
static_assert(sizeof(BP_LightFade_Box_Fun_C_ExecuteUbergraph_BP_LightFade_Box_Fun) == 0x000058, "Wrong size on BP_LightFade_Box_Fun_C_ExecuteUbergraph_BP_LightFade_Box_Fun");
static_assert(offsetof(BP_LightFade_Box_Fun_C_ExecuteUbergraph_BP_LightFade_Box_Fun, EntryPoint) == 0x000000, "Member 'BP_LightFade_Box_Fun_C_ExecuteUbergraph_BP_LightFade_Box_Fun::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_LightFade_Box_Fun_C_ExecuteUbergraph_BP_LightFade_Box_Fun, K2Node_Event_OtherActor) == 0x000008, "Member 'BP_LightFade_Box_Fun_C_ExecuteUbergraph_BP_LightFade_Box_Fun::K2Node_Event_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_LightFade_Box_Fun_C_ExecuteUbergraph_BP_LightFade_Box_Fun, K2Node_DynamicCast_AsBPCharacter_Demo) == 0x000010, "Member 'BP_LightFade_Box_Fun_C_ExecuteUbergraph_BP_LightFade_Box_Fun::K2Node_DynamicCast_AsBPCharacter_Demo' has a wrong offset!");
static_assert(offsetof(BP_LightFade_Box_Fun_C_ExecuteUbergraph_BP_LightFade_Box_Fun, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_LightFade_Box_Fun_C_ExecuteUbergraph_BP_LightFade_Box_Fun::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_LightFade_Box_Fun_C_ExecuteUbergraph_BP_LightFade_Box_Fun, K2Node_Event_OtherActor_1) == 0x000020, "Member 'BP_LightFade_Box_Fun_C_ExecuteUbergraph_BP_LightFade_Box_Fun::K2Node_Event_OtherActor_1' has a wrong offset!");
static_assert(offsetof(BP_LightFade_Box_Fun_C_ExecuteUbergraph_BP_LightFade_Box_Fun, K2Node_DynamicCast_AsBPCharacter_Demo_1) == 0x000028, "Member 'BP_LightFade_Box_Fun_C_ExecuteUbergraph_BP_LightFade_Box_Fun::K2Node_DynamicCast_AsBPCharacter_Demo_1' has a wrong offset!");
static_assert(offsetof(BP_LightFade_Box_Fun_C_ExecuteUbergraph_BP_LightFade_Box_Fun, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'BP_LightFade_Box_Fun_C_ExecuteUbergraph_BP_LightFade_Box_Fun::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_LightFade_Box_Fun_C_ExecuteUbergraph_BP_LightFade_Box_Fun, CallFunc_IsValid_ReturnValue) == 0x000031, "Member 'BP_LightFade_Box_Fun_C_ExecuteUbergraph_BP_LightFade_Box_Fun::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightFade_Box_Fun_C_ExecuteUbergraph_BP_LightFade_Box_Fun, CallFunc_IsValid_ReturnValue_1) == 0x000032, "Member 'BP_LightFade_Box_Fun_C_ExecuteUbergraph_BP_LightFade_Box_Fun::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LightFade_Box_Fun_C_ExecuteUbergraph_BP_LightFade_Box_Fun, K2Node_DynamicCast_AsBP_Item_Flashlight) == 0x000038, "Member 'BP_LightFade_Box_Fun_C_ExecuteUbergraph_BP_LightFade_Box_Fun::K2Node_DynamicCast_AsBP_Item_Flashlight' has a wrong offset!");
static_assert(offsetof(BP_LightFade_Box_Fun_C_ExecuteUbergraph_BP_LightFade_Box_Fun, K2Node_DynamicCast_bSuccess_2) == 0x000040, "Member 'BP_LightFade_Box_Fun_C_ExecuteUbergraph_BP_LightFade_Box_Fun::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_LightFade_Box_Fun_C_ExecuteUbergraph_BP_LightFade_Box_Fun, CallFunc_IsLocallyControlled_ReturnValue) == 0x000041, "Member 'BP_LightFade_Box_Fun_C_ExecuteUbergraph_BP_LightFade_Box_Fun::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightFade_Box_Fun_C_ExecuteUbergraph_BP_LightFade_Box_Fun, K2Node_DynamicCast_AsBP_Item_Flashlight_1) == 0x000048, "Member 'BP_LightFade_Box_Fun_C_ExecuteUbergraph_BP_LightFade_Box_Fun::K2Node_DynamicCast_AsBP_Item_Flashlight_1' has a wrong offset!");
static_assert(offsetof(BP_LightFade_Box_Fun_C_ExecuteUbergraph_BP_LightFade_Box_Fun, K2Node_DynamicCast_bSuccess_3) == 0x000050, "Member 'BP_LightFade_Box_Fun_C_ExecuteUbergraph_BP_LightFade_Box_Fun::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_LightFade_Box_Fun_C_ExecuteUbergraph_BP_LightFade_Box_Fun, CallFunc_IsLocallyControlled_ReturnValue_1) == 0x000051, "Member 'BP_LightFade_Box_Fun_C_ExecuteUbergraph_BP_LightFade_Box_Fun::CallFunc_IsLocallyControlled_ReturnValue_1' has a wrong offset!");

// Function BP_LightFade_Box_Fun.BP_LightFade_Box_Fun_C.ReceiveActorEndOverlap
// 0x0008 (0x0008 - 0x0000)
struct BP_LightFade_Box_Fun_C_ReceiveActorEndOverlap final
{
public:
	class AActor*                                 OtherActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LightFade_Box_Fun_C_ReceiveActorEndOverlap) == 0x000008, "Wrong alignment on BP_LightFade_Box_Fun_C_ReceiveActorEndOverlap");
static_assert(sizeof(BP_LightFade_Box_Fun_C_ReceiveActorEndOverlap) == 0x000008, "Wrong size on BP_LightFade_Box_Fun_C_ReceiveActorEndOverlap");
static_assert(offsetof(BP_LightFade_Box_Fun_C_ReceiveActorEndOverlap, OtherActor) == 0x000000, "Member 'BP_LightFade_Box_Fun_C_ReceiveActorEndOverlap::OtherActor' has a wrong offset!");

// Function BP_LightFade_Box_Fun.BP_LightFade_Box_Fun_C.ReceiveActorBeginOverlap
// 0x0008 (0x0008 - 0x0000)
struct BP_LightFade_Box_Fun_C_ReceiveActorBeginOverlap final
{
public:
	class AActor*                                 OtherActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LightFade_Box_Fun_C_ReceiveActorBeginOverlap) == 0x000008, "Wrong alignment on BP_LightFade_Box_Fun_C_ReceiveActorBeginOverlap");
static_assert(sizeof(BP_LightFade_Box_Fun_C_ReceiveActorBeginOverlap) == 0x000008, "Wrong size on BP_LightFade_Box_Fun_C_ReceiveActorBeginOverlap");
static_assert(offsetof(BP_LightFade_Box_Fun_C_ReceiveActorBeginOverlap, OtherActor) == 0x000000, "Member 'BP_LightFade_Box_Fun_C_ReceiveActorBeginOverlap::OtherActor' has a wrong offset!");

}

