#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AC_VineGrowth

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass AC_VineGrowth.AC_VineGrowth_C
// 0x0040 (0x00F0 - 0x00B0)
class UAC_VineGrowth_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class ABPCharacter_Demo_C*                    Player;                                            // 0x00B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         IdleCounter;                                       // 0x00C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TimeUntilVinesGrow;                                // 0x00C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TimeUntilTangled;                                  // 0x00C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AVineGrow_BP_C*                         ClientVisuals;                                     // 0x00D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GrowVinesClient;                                   // 0x00D8(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           KillTimer;                                         // 0x00E0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          IsTangled;                                         // 0x00E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_AC_VineGrowth(int32 EntryPoint);
	void KillAllPlayers();
	void ResetAfterFullyUntangled();
	void ResetUntangle();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void UntanglePlayer();
	void ResetTangle();
	void TanglePlayer();
	void ResetVines();
	void GrowVines();
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void IsPlayerInGrass(bool* IsInGrass);
	void OnRep_GrowVinesClient();
	void CheckAllPlayersTangled(bool* AllTangled, TArray<class ABPCharacter_Demo_C*>* Characters);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AC_VineGrowth_C">();
	}
	static class UAC_VineGrowth_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAC_VineGrowth_C>();
	}
};
static_assert(alignof(UAC_VineGrowth_C) == 0x000008, "Wrong alignment on UAC_VineGrowth_C");
static_assert(sizeof(UAC_VineGrowth_C) == 0x0000F0, "Wrong size on UAC_VineGrowth_C");
static_assert(offsetof(UAC_VineGrowth_C, UberGraphFrame) == 0x0000B0, "Member 'UAC_VineGrowth_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAC_VineGrowth_C, Player) == 0x0000B8, "Member 'UAC_VineGrowth_C::Player' has a wrong offset!");
static_assert(offsetof(UAC_VineGrowth_C, IdleCounter) == 0x0000C0, "Member 'UAC_VineGrowth_C::IdleCounter' has a wrong offset!");
static_assert(offsetof(UAC_VineGrowth_C, TimeUntilVinesGrow) == 0x0000C4, "Member 'UAC_VineGrowth_C::TimeUntilVinesGrow' has a wrong offset!");
static_assert(offsetof(UAC_VineGrowth_C, TimeUntilTangled) == 0x0000C8, "Member 'UAC_VineGrowth_C::TimeUntilTangled' has a wrong offset!");
static_assert(offsetof(UAC_VineGrowth_C, ClientVisuals) == 0x0000D0, "Member 'UAC_VineGrowth_C::ClientVisuals' has a wrong offset!");
static_assert(offsetof(UAC_VineGrowth_C, GrowVinesClient) == 0x0000D8, "Member 'UAC_VineGrowth_C::GrowVinesClient' has a wrong offset!");
static_assert(offsetof(UAC_VineGrowth_C, KillTimer) == 0x0000E0, "Member 'UAC_VineGrowth_C::KillTimer' has a wrong offset!");
static_assert(offsetof(UAC_VineGrowth_C, IsTangled) == 0x0000E8, "Member 'UAC_VineGrowth_C::IsTangled' has a wrong offset!");

}

