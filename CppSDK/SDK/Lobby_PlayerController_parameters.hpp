#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Lobby_PlayerController

#include "Basic.hpp"

#include "AdvancedSessions_structs.hpp"
#include "S_Gamemode_structs.hpp"
#include "UMG_structs.hpp"
#include "InputCore_structs.hpp"
#include "Engine_structs.hpp"
#include "S_ConnectedPlayer_structs.hpp"


namespace SDK::Params
{

// Function Lobby_PlayerController.Lobby_PlayerController_C.ExecuteUbergraph_Lobby_PlayerController
// 0x01D8 (0x01D8 - 0x0000)
struct Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_3;                     // 0x0008(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_2;                     // 0x0020(0x0018)(HasGetValueTypeHash)
	class UFancyVideoSubsystem*                   CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_1;                     // 0x0048(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key;                       // 0x0068(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable;                              // 0x0080(0x0018)(HasGetValueTypeHash)
	class UW_VOIPHUD_C*                           CallFunc_Create_ReturnValue;                       // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_CustomEvent_CircularThrobber_Visibility;    // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A2[0x6];                                       // 0x00A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_CustomEvent_LobbyStatus_Text;               // 0x00A8(0x0018)()
	class FText                                   K2Node_CustomEvent_Text;                           // 0x00C0(0x0018)()
	bool                                          K2Node_CustomEvent_WarningState_;                  // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_HideButton_;                    // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_IsLaunchingGame;                // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsConsoleBuild_ReturnValue;               // 0x00DB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RegisterLocalTalker_ReturnValue;          // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DD[0x3];                                       // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_CustomEvent_ServerName;                     // 0x00E0(0x0018)()
	bool                                          CallFunc_IsConsoleBuild_ReturnValue_1;             // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_ConnectedPlayer>             K2Node_CustomEvent_ConnectedPlayers;               // 0x0100(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_112[0x6];                                      // 0x0112(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UDestroySessionCallbackProxy*           CallFunc_DestroySession_ReturnValue;               // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocalPlayerController_ReturnValue;      // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_122[0x6];                                      // 0x0122(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UDestroySessionCallbackProxy*           CallFunc_DestroySession_ReturnValue_1;             // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x3];                                      // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_Map;                            // 0x0134(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13C[0x4];                                      // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_MyGameInstance_C*                   K2Node_DynamicCast_AsBP_My_Game_Instance;          // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_151[0x3];                                      // 0x0151(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0154(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsHeadMountedDisplayEnabled_ReturnValue;  // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0165(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_166[0x2];                                      // 0x0166(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_LobbyActor_C*                       CallFunc_GetActorOfClass_ReturnValue;              // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACameraActor*                           CallFunc_GetActorOfClass_ReturnValue_1;            // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0178(0x0010)(ZeroConstructor, NoDestructor)
	class UWB_SettingsPanel_Theme2_C*             CallFunc_Create_ReturnValue_1;                     // 0x0188(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULobby_Menu_C*                          CallFunc_Create_ReturnValue_2;                     // 0x0190(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0198(0x0010)(ZeroConstructor, NoDestructor)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_MyGameInstance_C*                   K2Node_DynamicCast_AsBP_My_Game_Instance_1;        // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B9[0x3];                                      // 0x01B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x01BC(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_1CC[0x4];                                      // 0x01CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_LoadingScreen_C*                    CallFunc_Create_ReturnValue_3;                     // 0x01D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController) == 0x000008, "Wrong alignment on Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController");
static_assert(sizeof(Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController) == 0x0001D8, "Wrong size on Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController");
static_assert(offsetof(Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController, EntryPoint) == 0x000000, "Member 'Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController::EntryPoint' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController, K2Node_InputActionEvent_Key_3) == 0x000008, "Member 'Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController::K2Node_InputActionEvent_Key_3' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController, K2Node_InputActionEvent_Key_2) == 0x000020, "Member 'Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController::K2Node_InputActionEvent_Key_2' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000038, "Member 'Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController, CallFunc_IsPlaying_ReturnValue) == 0x000040, "Member 'Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController, CallFunc_Not_PreBool_ReturnValue) == 0x000041, "Member 'Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController, K2Node_InputActionEvent_Key_1) == 0x000048, "Member 'Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController::K2Node_InputActionEvent_Key_1' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController, CallFunc_IsValid_ReturnValue) == 0x000060, "Member 'Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController, K2Node_InputActionEvent_Key) == 0x000068, "Member 'Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController::K2Node_InputActionEvent_Key' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController, Temp_struct_Variable) == 0x000080, "Member 'Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController, CallFunc_Create_ReturnValue) == 0x000098, "Member 'Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController, CallFunc_IsValid_ReturnValue_1) == 0x0000A0, "Member 'Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController, K2Node_CustomEvent_CircularThrobber_Visibility) == 0x0000A1, "Member 'Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController::K2Node_CustomEvent_CircularThrobber_Visibility' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController, K2Node_CustomEvent_LobbyStatus_Text) == 0x0000A8, "Member 'Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController::K2Node_CustomEvent_LobbyStatus_Text' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController, K2Node_CustomEvent_Text) == 0x0000C0, "Member 'Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController::K2Node_CustomEvent_Text' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController, K2Node_CustomEvent_WarningState_) == 0x0000D8, "Member 'Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController::K2Node_CustomEvent_WarningState_' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController, K2Node_CustomEvent_HideButton_) == 0x0000D9, "Member 'Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController::K2Node_CustomEvent_HideButton_' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController, K2Node_CustomEvent_IsLaunchingGame) == 0x0000DA, "Member 'Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController::K2Node_CustomEvent_IsLaunchingGame' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController, CallFunc_IsConsoleBuild_ReturnValue) == 0x0000DB, "Member 'Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController::CallFunc_IsConsoleBuild_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController, CallFunc_RegisterLocalTalker_ReturnValue) == 0x0000DC, "Member 'Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController::CallFunc_RegisterLocalTalker_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController, K2Node_CustomEvent_ServerName) == 0x0000E0, "Member 'Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController::K2Node_CustomEvent_ServerName' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController, CallFunc_IsConsoleBuild_ReturnValue_1) == 0x0000F8, "Member 'Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController::CallFunc_IsConsoleBuild_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController, K2Node_CustomEvent_ConnectedPlayers) == 0x000100, "Member 'Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController::K2Node_CustomEvent_ConnectedPlayers' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController, K2Node_Event_EndPlayReason) == 0x000110, "Member 'Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController, K2Node_SwitchEnum_CmpSuccess) == 0x000111, "Member 'Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController, CallFunc_DestroySession_ReturnValue) == 0x000118, "Member 'Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController::CallFunc_DestroySession_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController, CallFunc_IsValid_ReturnValue_2) == 0x000120, "Member 'Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController, CallFunc_IsLocalPlayerController_ReturnValue) == 0x000121, "Member 'Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController::CallFunc_IsLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController, CallFunc_DestroySession_ReturnValue_1) == 0x000128, "Member 'Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController::CallFunc_DestroySession_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController, CallFunc_IsValid_ReturnValue_3) == 0x000130, "Member 'Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController, K2Node_CustomEvent_Map) == 0x000134, "Member 'Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController::K2Node_CustomEvent_Map' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController, CallFunc_GetGameInstance_ReturnValue) == 0x000140, "Member 'Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController, K2Node_DynamicCast_AsBP_My_Game_Instance) == 0x000148, "Member 'Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController::K2Node_DynamicCast_AsBP_My_Game_Instance' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController, K2Node_DynamicCast_bSuccess) == 0x000150, "Member 'Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController, K2Node_CreateDelegate_OutputDelegate) == 0x000154, "Member 'Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController, CallFunc_IsHeadMountedDisplayEnabled_ReturnValue) == 0x000164, "Member 'Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController::CallFunc_IsHeadMountedDisplayEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController, CallFunc_Not_PreBool_ReturnValue_1) == 0x000165, "Member 'Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController, CallFunc_GetActorOfClass_ReturnValue) == 0x000168, "Member 'Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController, CallFunc_GetActorOfClass_ReturnValue_1) == 0x000170, "Member 'Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController::CallFunc_GetActorOfClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController, K2Node_CreateDelegate_OutputDelegate_1) == 0x000178, "Member 'Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController, CallFunc_Create_ReturnValue_1) == 0x000188, "Member 'Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController, CallFunc_Create_ReturnValue_2) == 0x000190, "Member 'Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController::CallFunc_Create_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController, K2Node_CreateDelegate_OutputDelegate_2) == 0x000198, "Member 'Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController, CallFunc_GetGameInstance_ReturnValue_1) == 0x0001A8, "Member 'Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController, K2Node_DynamicCast_AsBP_My_Game_Instance_1) == 0x0001B0, "Member 'Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController::K2Node_DynamicCast_AsBP_My_Game_Instance_1' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController, K2Node_DynamicCast_bSuccess_1) == 0x0001B8, "Member 'Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController, K2Node_CreateDelegate_OutputDelegate_3) == 0x0001BC, "Member 'Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController, CallFunc_Create_ReturnValue_3) == 0x0001D0, "Member 'Lobby_PlayerController_C_ExecuteUbergraph_Lobby_PlayerController::CallFunc_Create_ReturnValue_3' has a wrong offset!");

// Function Lobby_PlayerController.Lobby_PlayerController_C.OC_Create_MapTravel_Loadingscreen
// 0x0008 (0x0008 - 0x0000)
struct Lobby_PlayerController_C_OC_Create_MapTravel_Loadingscreen final
{
public:
	class FName                                   Map;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Lobby_PlayerController_C_OC_Create_MapTravel_Loadingscreen) == 0x000004, "Wrong alignment on Lobby_PlayerController_C_OC_Create_MapTravel_Loadingscreen");
static_assert(sizeof(Lobby_PlayerController_C_OC_Create_MapTravel_Loadingscreen) == 0x000008, "Wrong size on Lobby_PlayerController_C_OC_Create_MapTravel_Loadingscreen");
static_assert(offsetof(Lobby_PlayerController_C_OC_Create_MapTravel_Loadingscreen, Map) == 0x000000, "Member 'Lobby_PlayerController_C_OC_Create_MapTravel_Loadingscreen::Map' has a wrong offset!");

// Function Lobby_PlayerController.Lobby_PlayerController_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct Lobby_PlayerController_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Lobby_PlayerController_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on Lobby_PlayerController_C_ReceiveEndPlay");
static_assert(sizeof(Lobby_PlayerController_C_ReceiveEndPlay) == 0x000001, "Wrong size on Lobby_PlayerController_C_ReceiveEndPlay");
static_assert(offsetof(Lobby_PlayerController_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'Lobby_PlayerController_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function Lobby_PlayerController.Lobby_PlayerController_C.OC_Update_ConnectedPlayersList
// 0x0010 (0x0010 - 0x0000)
struct Lobby_PlayerController_C_OC_Update_ConnectedPlayersList final
{
public:
	TArray<struct FS_ConnectedPlayer>             ConnectedPlayers_0;                                // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(Lobby_PlayerController_C_OC_Update_ConnectedPlayersList) == 0x000008, "Wrong alignment on Lobby_PlayerController_C_OC_Update_ConnectedPlayersList");
static_assert(sizeof(Lobby_PlayerController_C_OC_Update_ConnectedPlayersList) == 0x000010, "Wrong size on Lobby_PlayerController_C_OC_Update_ConnectedPlayersList");
static_assert(offsetof(Lobby_PlayerController_C_OC_Update_ConnectedPlayersList, ConnectedPlayers_0) == 0x000000, "Member 'Lobby_PlayerController_C_OC_Update_ConnectedPlayersList::ConnectedPlayers_0' has a wrong offset!");

// Function Lobby_PlayerController.Lobby_PlayerController_C.OC_Update_ServerName
// 0x0018 (0x0018 - 0x0000)
struct Lobby_PlayerController_C_OC_Update_ServerName final
{
public:
	class FText                                   ServerName_0;                                      // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(Lobby_PlayerController_C_OC_Update_ServerName) == 0x000008, "Wrong alignment on Lobby_PlayerController_C_OC_Update_ServerName");
static_assert(sizeof(Lobby_PlayerController_C_OC_Update_ServerName) == 0x000018, "Wrong size on Lobby_PlayerController_C_OC_Update_ServerName");
static_assert(offsetof(Lobby_PlayerController_C_OC_Update_ServerName, ServerName_0) == 0x000000, "Member 'Lobby_PlayerController_C_OC_Update_ServerName::ServerName_0' has a wrong offset!");

// Function Lobby_PlayerController.Lobby_PlayerController_C.OC_Launchevent
// 0x0001 (0x0001 - 0x0000)
struct Lobby_PlayerController_C_OC_Launchevent final
{
public:
	bool                                          IsLaunchingGame_0;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Lobby_PlayerController_C_OC_Launchevent) == 0x000001, "Wrong alignment on Lobby_PlayerController_C_OC_Launchevent");
static_assert(sizeof(Lobby_PlayerController_C_OC_Launchevent) == 0x000001, "Wrong size on Lobby_PlayerController_C_OC_Launchevent");
static_assert(offsetof(Lobby_PlayerController_C_OC_Launchevent, IsLaunchingGame_0) == 0x000000, "Member 'Lobby_PlayerController_C_OC_Launchevent::IsLaunchingGame_0' has a wrong offset!");

// Function Lobby_PlayerController.Lobby_PlayerController_C.OC_Update_ReadyUpButton
// 0x0020 (0x0020 - 0x0000)
struct Lobby_PlayerController_C_OC_Update_ReadyUpButton final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          WarningState_;                                     // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          HideButton_;                                       // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Lobby_PlayerController_C_OC_Update_ReadyUpButton) == 0x000008, "Wrong alignment on Lobby_PlayerController_C_OC_Update_ReadyUpButton");
static_assert(sizeof(Lobby_PlayerController_C_OC_Update_ReadyUpButton) == 0x000020, "Wrong size on Lobby_PlayerController_C_OC_Update_ReadyUpButton");
static_assert(offsetof(Lobby_PlayerController_C_OC_Update_ReadyUpButton, Text) == 0x000000, "Member 'Lobby_PlayerController_C_OC_Update_ReadyUpButton::Text' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_OC_Update_ReadyUpButton, WarningState_) == 0x000018, "Member 'Lobby_PlayerController_C_OC_Update_ReadyUpButton::WarningState_' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_OC_Update_ReadyUpButton, HideButton_) == 0x000019, "Member 'Lobby_PlayerController_C_OC_Update_ReadyUpButton::HideButton_' has a wrong offset!");

// Function Lobby_PlayerController.Lobby_PlayerController_C.OC_Update_LobbyStatusIndicator
// 0x0020 (0x0020 - 0x0000)
struct Lobby_PlayerController_C_OC_Update_LobbyStatusIndicator final
{
public:
	ESlateVisibility                              CircularThrobber_Visibility;                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   LobbyStatus_Text;                                  // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(Lobby_PlayerController_C_OC_Update_LobbyStatusIndicator) == 0x000008, "Wrong alignment on Lobby_PlayerController_C_OC_Update_LobbyStatusIndicator");
static_assert(sizeof(Lobby_PlayerController_C_OC_Update_LobbyStatusIndicator) == 0x000020, "Wrong size on Lobby_PlayerController_C_OC_Update_LobbyStatusIndicator");
static_assert(offsetof(Lobby_PlayerController_C_OC_Update_LobbyStatusIndicator, CircularThrobber_Visibility) == 0x000000, "Member 'Lobby_PlayerController_C_OC_Update_LobbyStatusIndicator::CircularThrobber_Visibility' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_OC_Update_LobbyStatusIndicator, LobbyStatus_Text) == 0x000008, "Member 'Lobby_PlayerController_C_OC_Update_LobbyStatusIndicator::LobbyStatus_Text' has a wrong offset!");

// Function Lobby_PlayerController.Lobby_PlayerController_C.InpActEvt_Talk_K2Node_InputActionEvent_0
// 0x0018 (0x0018 - 0x0000)
struct Lobby_PlayerController_C_InpActEvt_Talk_K2Node_InputActionEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(Lobby_PlayerController_C_InpActEvt_Talk_K2Node_InputActionEvent_0) == 0x000008, "Wrong alignment on Lobby_PlayerController_C_InpActEvt_Talk_K2Node_InputActionEvent_0");
static_assert(sizeof(Lobby_PlayerController_C_InpActEvt_Talk_K2Node_InputActionEvent_0) == 0x000018, "Wrong size on Lobby_PlayerController_C_InpActEvt_Talk_K2Node_InputActionEvent_0");
static_assert(offsetof(Lobby_PlayerController_C_InpActEvt_Talk_K2Node_InputActionEvent_0, Key) == 0x000000, "Member 'Lobby_PlayerController_C_InpActEvt_Talk_K2Node_InputActionEvent_0::Key' has a wrong offset!");

// Function Lobby_PlayerController.Lobby_PlayerController_C.InpActEvt_Talk_K2Node_InputActionEvent_1
// 0x0018 (0x0018 - 0x0000)
struct Lobby_PlayerController_C_InpActEvt_Talk_K2Node_InputActionEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(Lobby_PlayerController_C_InpActEvt_Talk_K2Node_InputActionEvent_1) == 0x000008, "Wrong alignment on Lobby_PlayerController_C_InpActEvt_Talk_K2Node_InputActionEvent_1");
static_assert(sizeof(Lobby_PlayerController_C_InpActEvt_Talk_K2Node_InputActionEvent_1) == 0x000018, "Wrong size on Lobby_PlayerController_C_InpActEvt_Talk_K2Node_InputActionEvent_1");
static_assert(offsetof(Lobby_PlayerController_C_InpActEvt_Talk_K2Node_InputActionEvent_1, Key) == 0x000000, "Member 'Lobby_PlayerController_C_InpActEvt_Talk_K2Node_InputActionEvent_1::Key' has a wrong offset!");

// Function Lobby_PlayerController.Lobby_PlayerController_C.InpActEvt_Chat_K2Node_InputActionEvent_2
// 0x0018 (0x0018 - 0x0000)
struct Lobby_PlayerController_C_InpActEvt_Chat_K2Node_InputActionEvent_2 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(Lobby_PlayerController_C_InpActEvt_Chat_K2Node_InputActionEvent_2) == 0x000008, "Wrong alignment on Lobby_PlayerController_C_InpActEvt_Chat_K2Node_InputActionEvent_2");
static_assert(sizeof(Lobby_PlayerController_C_InpActEvt_Chat_K2Node_InputActionEvent_2) == 0x000018, "Wrong size on Lobby_PlayerController_C_InpActEvt_Chat_K2Node_InputActionEvent_2");
static_assert(offsetof(Lobby_PlayerController_C_InpActEvt_Chat_K2Node_InputActionEvent_2, Key) == 0x000000, "Member 'Lobby_PlayerController_C_InpActEvt_Chat_K2Node_InputActionEvent_2::Key' has a wrong offset!");

// Function Lobby_PlayerController.Lobby_PlayerController_C.InpActEvt_Settings_K2Node_InputActionEvent_3
// 0x0018 (0x0018 - 0x0000)
struct Lobby_PlayerController_C_InpActEvt_Settings_K2Node_InputActionEvent_3 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(Lobby_PlayerController_C_InpActEvt_Settings_K2Node_InputActionEvent_3) == 0x000008, "Wrong alignment on Lobby_PlayerController_C_InpActEvt_Settings_K2Node_InputActionEvent_3");
static_assert(sizeof(Lobby_PlayerController_C_InpActEvt_Settings_K2Node_InputActionEvent_3) == 0x000018, "Wrong size on Lobby_PlayerController_C_InpActEvt_Settings_K2Node_InputActionEvent_3");
static_assert(offsetof(Lobby_PlayerController_C_InpActEvt_Settings_K2Node_InputActionEvent_3, Key) == 0x000000, "Member 'Lobby_PlayerController_C_InpActEvt_Settings_K2Node_InputActionEvent_3::Key' has a wrong offset!");

// Function Lobby_PlayerController.Lobby_PlayerController_C.Update_LobbyPlayerList
// 0x0040 (0x0040 - 0x0000)
struct Lobby_PlayerController_C_Update_LobbyPlayerList final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHeadMountedDisplayEnabled_ReturnValue;  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_LobbyActor_C*                       K2Node_DynamicCast_AsBP_Lobby_Actor;               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetWidget_ReturnValue;                    // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULobby_Menu_C*                          K2Node_DynamicCast_AsLobby_Menu;                   // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Lobby_PlayerController_C_Update_LobbyPlayerList) == 0x000008, "Wrong alignment on Lobby_PlayerController_C_Update_LobbyPlayerList");
static_assert(sizeof(Lobby_PlayerController_C_Update_LobbyPlayerList) == 0x000040, "Wrong size on Lobby_PlayerController_C_Update_LobbyPlayerList");
static_assert(offsetof(Lobby_PlayerController_C_Update_LobbyPlayerList, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'Lobby_PlayerController_C_Update_LobbyPlayerList::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_Update_LobbyPlayerList, CallFunc_K2_GetPawn_ReturnValue) == 0x000008, "Member 'Lobby_PlayerController_C_Update_LobbyPlayerList::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_Update_LobbyPlayerList, CallFunc_IsHeadMountedDisplayEnabled_ReturnValue) == 0x000010, "Member 'Lobby_PlayerController_C_Update_LobbyPlayerList::CallFunc_IsHeadMountedDisplayEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_Update_LobbyPlayerList, K2Node_DynamicCast_AsBP_Lobby_Actor) == 0x000018, "Member 'Lobby_PlayerController_C_Update_LobbyPlayerList::K2Node_DynamicCast_AsBP_Lobby_Actor' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_Update_LobbyPlayerList, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'Lobby_PlayerController_C_Update_LobbyPlayerList::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_Update_LobbyPlayerList, CallFunc_Not_PreBool_ReturnValue) == 0x000021, "Member 'Lobby_PlayerController_C_Update_LobbyPlayerList::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_Update_LobbyPlayerList, CallFunc_GetWidget_ReturnValue) == 0x000028, "Member 'Lobby_PlayerController_C_Update_LobbyPlayerList::CallFunc_GetWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_Update_LobbyPlayerList, K2Node_DynamicCast_AsLobby_Menu) == 0x000030, "Member 'Lobby_PlayerController_C_Update_LobbyPlayerList::K2Node_DynamicCast_AsLobby_Menu' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_Update_LobbyPlayerList, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'Lobby_PlayerController_C_Update_LobbyPlayerList::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function Lobby_PlayerController.Lobby_PlayerController_C.Update_ReadyUpButton
// 0x0002 (0x0002 - 0x0000)
struct Lobby_PlayerController_C_Update_ReadyUpButton final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Lobby_PlayerController_C_Update_ReadyUpButton) == 0x000001, "Wrong alignment on Lobby_PlayerController_C_Update_ReadyUpButton");
static_assert(sizeof(Lobby_PlayerController_C_Update_ReadyUpButton) == 0x000002, "Wrong size on Lobby_PlayerController_C_Update_ReadyUpButton");
static_assert(offsetof(Lobby_PlayerController_C_Update_ReadyUpButton, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'Lobby_PlayerController_C_Update_ReadyUpButton::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_Update_ReadyUpButton, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'Lobby_PlayerController_C_Update_ReadyUpButton::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function Lobby_PlayerController.Lobby_PlayerController_C.Update_Launchevent
// 0x0002 (0x0002 - 0x0000)
struct Lobby_PlayerController_C_Update_Launchevent final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Lobby_PlayerController_C_Update_Launchevent) == 0x000001, "Wrong alignment on Lobby_PlayerController_C_Update_Launchevent");
static_assert(sizeof(Lobby_PlayerController_C_Update_Launchevent) == 0x000002, "Wrong size on Lobby_PlayerController_C_Update_Launchevent");
static_assert(offsetof(Lobby_PlayerController_C_Update_Launchevent, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'Lobby_PlayerController_C_Update_Launchevent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_Update_Launchevent, CallFunc_IsServer_ReturnValue) == 0x000001, "Member 'Lobby_PlayerController_C_Update_Launchevent::CallFunc_IsServer_ReturnValue' has a wrong offset!");

// Function Lobby_PlayerController.Lobby_PlayerController_C.Update_LobbyStatusIndicator
// 0x0028 (0x0028 - 0x0000)
struct Lobby_PlayerController_C_Update_LobbyStatusIndicator final
{
public:
	ESlateVisibility                              CircularThrobberVisibility;                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   LobbyStatusText;                                   // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Lobby_PlayerController_C_Update_LobbyStatusIndicator) == 0x000008, "Wrong alignment on Lobby_PlayerController_C_Update_LobbyStatusIndicator");
static_assert(sizeof(Lobby_PlayerController_C_Update_LobbyStatusIndicator) == 0x000028, "Wrong size on Lobby_PlayerController_C_Update_LobbyStatusIndicator");
static_assert(offsetof(Lobby_PlayerController_C_Update_LobbyStatusIndicator, CircularThrobberVisibility) == 0x000000, "Member 'Lobby_PlayerController_C_Update_LobbyStatusIndicator::CircularThrobberVisibility' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_Update_LobbyStatusIndicator, LobbyStatusText) == 0x000008, "Member 'Lobby_PlayerController_C_Update_LobbyStatusIndicator::LobbyStatusText' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_Update_LobbyStatusIndicator, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'Lobby_PlayerController_C_Update_LobbyStatusIndicator::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function Lobby_PlayerController.Lobby_PlayerController_C.Create_WB_Lobby_HUD
// 0x0018 (0x0018 - 0x0000)
struct Lobby_PlayerController_C_Create_WB_Lobby_HUD final
{
public:
	bool                                          CallFunc_IsHeadMountedDisplayEnabled_ReturnValue;  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInViewport_ReturnValue;                 // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULobby_HUD_C*                           CallFunc_Create_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddToPlayerScreen_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Lobby_PlayerController_C_Create_WB_Lobby_HUD) == 0x000008, "Wrong alignment on Lobby_PlayerController_C_Create_WB_Lobby_HUD");
static_assert(sizeof(Lobby_PlayerController_C_Create_WB_Lobby_HUD) == 0x000018, "Wrong size on Lobby_PlayerController_C_Create_WB_Lobby_HUD");
static_assert(offsetof(Lobby_PlayerController_C_Create_WB_Lobby_HUD, CallFunc_IsHeadMountedDisplayEnabled_ReturnValue) == 0x000000, "Member 'Lobby_PlayerController_C_Create_WB_Lobby_HUD::CallFunc_IsHeadMountedDisplayEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_Create_WB_Lobby_HUD, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'Lobby_PlayerController_C_Create_WB_Lobby_HUD::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_Create_WB_Lobby_HUD, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'Lobby_PlayerController_C_Create_WB_Lobby_HUD::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_Create_WB_Lobby_HUD, CallFunc_IsInViewport_ReturnValue) == 0x000003, "Member 'Lobby_PlayerController_C_Create_WB_Lobby_HUD::CallFunc_IsInViewport_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_Create_WB_Lobby_HUD, CallFunc_Create_ReturnValue) == 0x000008, "Member 'Lobby_PlayerController_C_Create_WB_Lobby_HUD::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_Create_WB_Lobby_HUD, CallFunc_AddToPlayerScreen_ReturnValue) == 0x000010, "Member 'Lobby_PlayerController_C_Create_WB_Lobby_HUD::CallFunc_AddToPlayerScreen_ReturnValue' has a wrong offset!");

// Function Lobby_PlayerController.Lobby_PlayerController_C.Save_ReadyUpButton_State
// 0x0020 (0x0020 - 0x0000)
struct Lobby_PlayerController_C_Save_ReadyUpButton_State final
{
public:
	class FText                                   ReadyUpButton_Text_0;                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          Warning_State__0;                                  // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Hide_Button__0;                                    // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          JustLock_;                                         // 0x001A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Lobby_PlayerController_C_Save_ReadyUpButton_State) == 0x000008, "Wrong alignment on Lobby_PlayerController_C_Save_ReadyUpButton_State");
static_assert(sizeof(Lobby_PlayerController_C_Save_ReadyUpButton_State) == 0x000020, "Wrong size on Lobby_PlayerController_C_Save_ReadyUpButton_State");
static_assert(offsetof(Lobby_PlayerController_C_Save_ReadyUpButton_State, ReadyUpButton_Text_0) == 0x000000, "Member 'Lobby_PlayerController_C_Save_ReadyUpButton_State::ReadyUpButton_Text_0' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_Save_ReadyUpButton_State, Warning_State__0) == 0x000018, "Member 'Lobby_PlayerController_C_Save_ReadyUpButton_State::Warning_State__0' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_Save_ReadyUpButton_State, Hide_Button__0) == 0x000019, "Member 'Lobby_PlayerController_C_Save_ReadyUpButton_State::Hide_Button__0' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_Save_ReadyUpButton_State, JustLock_) == 0x00001A, "Member 'Lobby_PlayerController_C_Save_ReadyUpButton_State::JustLock_' has a wrong offset!");

// Function Lobby_PlayerController.Lobby_PlayerController_C.Update_GameMode
// 0x0001 (0x0001 - 0x0000)
struct Lobby_PlayerController_C_Update_GameMode final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Lobby_PlayerController_C_Update_GameMode) == 0x000001, "Wrong alignment on Lobby_PlayerController_C_Update_GameMode");
static_assert(sizeof(Lobby_PlayerController_C_Update_GameMode) == 0x000001, "Wrong size on Lobby_PlayerController_C_Update_GameMode");
static_assert(offsetof(Lobby_PlayerController_C_Update_GameMode, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'Lobby_PlayerController_C_Update_GameMode::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function Lobby_PlayerController.Lobby_PlayerController_C.Create_MapTravel_LoadingScreen
// 0x0100 (0x0100 - 0x0000)
struct Lobby_PlayerController_C_Create_MapTravel_LoadingScreen final
{
public:
	class FName                                   Map;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FS_Gamemode                            CallFunc_GetDataTableRowFromName_OutRow;           // 0x0018(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0080(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x00E8(0x0018)()
};
static_assert(alignof(Lobby_PlayerController_C_Create_MapTravel_LoadingScreen) == 0x000008, "Wrong alignment on Lobby_PlayerController_C_Create_MapTravel_LoadingScreen");
static_assert(sizeof(Lobby_PlayerController_C_Create_MapTravel_LoadingScreen) == 0x000100, "Wrong size on Lobby_PlayerController_C_Create_MapTravel_LoadingScreen");
static_assert(offsetof(Lobby_PlayerController_C_Create_MapTravel_LoadingScreen, Map) == 0x000000, "Member 'Lobby_PlayerController_C_Create_MapTravel_LoadingScreen::Map' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_Create_MapTravel_LoadingScreen, CallFunc_Concat_StrStr_ReturnValue) == 0x000008, "Member 'Lobby_PlayerController_C_Create_MapTravel_LoadingScreen::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_Create_MapTravel_LoadingScreen, CallFunc_GetDataTableRowFromName_OutRow) == 0x000018, "Member 'Lobby_PlayerController_C_Create_MapTravel_LoadingScreen::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_Create_MapTravel_LoadingScreen, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000058, "Member 'Lobby_PlayerController_C_Create_MapTravel_LoadingScreen::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_Create_MapTravel_LoadingScreen, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000060, "Member 'Lobby_PlayerController_C_Create_MapTravel_LoadingScreen::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_Create_MapTravel_LoadingScreen, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000070, "Member 'Lobby_PlayerController_C_Create_MapTravel_LoadingScreen::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_Create_MapTravel_LoadingScreen, CallFunc_Conv_StringToText_ReturnValue) == 0x000080, "Member 'Lobby_PlayerController_C_Create_MapTravel_LoadingScreen::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_Create_MapTravel_LoadingScreen, CallFunc_Conv_TextToString_ReturnValue) == 0x000098, "Member 'Lobby_PlayerController_C_Create_MapTravel_LoadingScreen::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_Create_MapTravel_LoadingScreen, CallFunc_Conv_TextToString_ReturnValue_1) == 0x0000A8, "Member 'Lobby_PlayerController_C_Create_MapTravel_LoadingScreen::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_Create_MapTravel_LoadingScreen, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0000B8, "Member 'Lobby_PlayerController_C_Create_MapTravel_LoadingScreen::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_Create_MapTravel_LoadingScreen, CallFunc_Concat_StrStr_ReturnValue_4) == 0x0000C8, "Member 'Lobby_PlayerController_C_Create_MapTravel_LoadingScreen::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_Create_MapTravel_LoadingScreen, CallFunc_Concat_StrStr_ReturnValue_5) == 0x0000D8, "Member 'Lobby_PlayerController_C_Create_MapTravel_LoadingScreen::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_Create_MapTravel_LoadingScreen, CallFunc_Conv_StringToText_ReturnValue_1) == 0x0000E8, "Member 'Lobby_PlayerController_C_Create_MapTravel_LoadingScreen::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");

// Function Lobby_PlayerController.Lobby_PlayerController_C.CreateLoadingScreen
// 0x0040 (0x0040 - 0x0000)
struct Lobby_PlayerController_C_CreateLoadingScreen final
{
public:
	class FText                                   LoadingScreen_FeedbackText;                        // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UTexture2D*                             LoadingScreen_Image;                               // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_LoadingScreen_C*                    CallFunc_Create_ReturnValue;                       // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocalPlayerController_ReturnValue;      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Lobby_PlayerController_C_CreateLoadingScreen) == 0x000008, "Wrong alignment on Lobby_PlayerController_C_CreateLoadingScreen");
static_assert(sizeof(Lobby_PlayerController_C_CreateLoadingScreen) == 0x000040, "Wrong size on Lobby_PlayerController_C_CreateLoadingScreen");
static_assert(offsetof(Lobby_PlayerController_C_CreateLoadingScreen, LoadingScreen_FeedbackText) == 0x000000, "Member 'Lobby_PlayerController_C_CreateLoadingScreen::LoadingScreen_FeedbackText' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_CreateLoadingScreen, LoadingScreen_Image) == 0x000018, "Member 'Lobby_PlayerController_C_CreateLoadingScreen::LoadingScreen_Image' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_CreateLoadingScreen, CallFunc_GetPlayerController_ReturnValue) == 0x000020, "Member 'Lobby_PlayerController_C_CreateLoadingScreen::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_CreateLoadingScreen, CallFunc_GetPlayerController_ReturnValue_1) == 0x000028, "Member 'Lobby_PlayerController_C_CreateLoadingScreen::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_CreateLoadingScreen, CallFunc_Create_ReturnValue) == 0x000030, "Member 'Lobby_PlayerController_C_CreateLoadingScreen::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_CreateLoadingScreen, CallFunc_IsLocalPlayerController_ReturnValue) == 0x000038, "Member 'Lobby_PlayerController_C_CreateLoadingScreen::CallFunc_IsLocalPlayerController_ReturnValue' has a wrong offset!");

// Function Lobby_PlayerController.Lobby_PlayerController_C.Update_PlayerSpeaking
// 0x00B0 (0x00B0 - 0x0000)
struct Lobby_PlayerController_C_Update_PlayerSpeaking final
{
public:
	bool                                          IsSpeaking;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBPUniqueNetId                         UniqueId;                                          // 0x0008(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FString                                 PlayerName;                                        // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetSteamPersonaName_ReturnValue;          // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RequestSteamFriendInfo_ReturnValue;       // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsConsoleBuild_ReturnValue;               // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x007B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0080(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULobby_PlayerList_Item_C*               K2Node_DynamicCast_AsLobby_Player_List_Item;       // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_UNetIDUnetID_ReturnValue;      // 0x00AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Lobby_PlayerController_C_Update_PlayerSpeaking) == 0x000008, "Wrong alignment on Lobby_PlayerController_C_Update_PlayerSpeaking");
static_assert(sizeof(Lobby_PlayerController_C_Update_PlayerSpeaking) == 0x0000B0, "Wrong size on Lobby_PlayerController_C_Update_PlayerSpeaking");
static_assert(offsetof(Lobby_PlayerController_C_Update_PlayerSpeaking, IsSpeaking) == 0x000000, "Member 'Lobby_PlayerController_C_Update_PlayerSpeaking::IsSpeaking' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_Update_PlayerSpeaking, UniqueId) == 0x000008, "Member 'Lobby_PlayerController_C_Update_PlayerSpeaking::UniqueId' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_Update_PlayerSpeaking, PlayerName) == 0x000030, "Member 'Lobby_PlayerController_C_Update_PlayerSpeaking::PlayerName' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_Update_PlayerSpeaking, Temp_int_Array_Index_Variable) == 0x000040, "Member 'Lobby_PlayerController_C_Update_PlayerSpeaking::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_Update_PlayerSpeaking, CallFunc_GetSteamPersonaName_ReturnValue) == 0x000048, "Member 'Lobby_PlayerController_C_Update_PlayerSpeaking::CallFunc_GetSteamPersonaName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_Update_PlayerSpeaking, CallFunc_IsEmpty_ReturnValue) == 0x000058, "Member 'Lobby_PlayerController_C_Update_PlayerSpeaking::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_Update_PlayerSpeaking, CallFunc_RequestSteamFriendInfo_ReturnValue) == 0x000059, "Member 'Lobby_PlayerController_C_Update_PlayerSpeaking::CallFunc_RequestSteamFriendInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_Update_PlayerSpeaking, Temp_bool_True_if_break_was_hit_Variable) == 0x00005A, "Member 'Lobby_PlayerController_C_Update_PlayerSpeaking::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_Update_PlayerSpeaking, CallFunc_Not_PreBool_ReturnValue) == 0x00005B, "Member 'Lobby_PlayerController_C_Update_PlayerSpeaking::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_Update_PlayerSpeaking, CallFunc_IsConsoleBuild_ReturnValue) == 0x00005C, "Member 'Lobby_PlayerController_C_Update_PlayerSpeaking::CallFunc_IsConsoleBuild_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_Update_PlayerSpeaking, CallFunc_GetPlayerName_ReturnValue) == 0x000060, "Member 'Lobby_PlayerController_C_Update_PlayerSpeaking::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_Update_PlayerSpeaking, Temp_int_Loop_Counter_Variable) == 0x000070, "Member 'Lobby_PlayerController_C_Update_PlayerSpeaking::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_Update_PlayerSpeaking, CallFunc_Add_IntInt_ReturnValue) == 0x000074, "Member 'Lobby_PlayerController_C_Update_PlayerSpeaking::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_Update_PlayerSpeaking, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000078, "Member 'Lobby_PlayerController_C_Update_PlayerSpeaking::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_Update_PlayerSpeaking, CallFunc_BooleanOR_ReturnValue) == 0x000079, "Member 'Lobby_PlayerController_C_Update_PlayerSpeaking::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_Update_PlayerSpeaking, CallFunc_IsValid_ReturnValue) == 0x00007A, "Member 'Lobby_PlayerController_C_Update_PlayerSpeaking::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_Update_PlayerSpeaking, CallFunc_IsValid_ReturnValue_1) == 0x00007B, "Member 'Lobby_PlayerController_C_Update_PlayerSpeaking::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_Update_PlayerSpeaking, CallFunc_IsValid_ReturnValue_2) == 0x00007C, "Member 'Lobby_PlayerController_C_Update_PlayerSpeaking::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_Update_PlayerSpeaking, CallFunc_GetAllChildren_ReturnValue) == 0x000080, "Member 'Lobby_PlayerController_C_Update_PlayerSpeaking::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_Update_PlayerSpeaking, CallFunc_Array_Get_Item) == 0x000090, "Member 'Lobby_PlayerController_C_Update_PlayerSpeaking::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_Update_PlayerSpeaking, CallFunc_Array_Length_ReturnValue) == 0x000098, "Member 'Lobby_PlayerController_C_Update_PlayerSpeaking::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_Update_PlayerSpeaking, K2Node_DynamicCast_AsLobby_Player_List_Item) == 0x0000A0, "Member 'Lobby_PlayerController_C_Update_PlayerSpeaking::K2Node_DynamicCast_AsLobby_Player_List_Item' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_Update_PlayerSpeaking, K2Node_DynamicCast_bSuccess) == 0x0000A8, "Member 'Lobby_PlayerController_C_Update_PlayerSpeaking::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_Update_PlayerSpeaking, CallFunc_Less_IntInt_ReturnValue) == 0x0000A9, "Member 'Lobby_PlayerController_C_Update_PlayerSpeaking::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_Update_PlayerSpeaking, CallFunc_BooleanAND_ReturnValue) == 0x0000AA, "Member 'Lobby_PlayerController_C_Update_PlayerSpeaking::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_PlayerController_C_Update_PlayerSpeaking, CallFunc_EqualEqual_UNetIDUnetID_ReturnValue) == 0x0000AB, "Member 'Lobby_PlayerController_C_Update_PlayerSpeaking::CallFunc_EqualEqual_UNetIDUnetID_ReturnValue' has a wrong offset!");

// Function Lobby_PlayerController.Lobby_PlayerController_C.OnRep_CanTalk
// 0x0001 (0x0001 - 0x0000)
struct Lobby_PlayerController_C_OnRep_CanTalk final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Lobby_PlayerController_C_OnRep_CanTalk) == 0x000001, "Wrong alignment on Lobby_PlayerController_C_OnRep_CanTalk");
static_assert(sizeof(Lobby_PlayerController_C_OnRep_CanTalk) == 0x000001, "Wrong size on Lobby_PlayerController_C_OnRep_CanTalk");
static_assert(offsetof(Lobby_PlayerController_C_OnRep_CanTalk, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'Lobby_PlayerController_C_OnRep_CanTalk::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

}

