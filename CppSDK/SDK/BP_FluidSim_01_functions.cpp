#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FluidSim_01

#include "Basic.hpp"

#include "BP_FluidSim_01_classes.hpp"
#include "BP_FluidSim_01_parameters.hpp"


namespace SDK
{

// Function BP_FluidSim_01.BP_FluidSim_01_C.ExecuteUbergraph_BP_FluidSim_01
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FluidSim_01_C::ExecuteUbergraph_BP_FluidSim_01(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluidSim_01_C", "ExecuteUbergraph_BP_FluidSim_01");

	Params::BP_FluidSim_01_C_ExecuteUbergraph_BP_FluidSim_01 Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FluidSim_01.BP_FluidSim_01_C.Capture Height and DF
// (BlueprintCallable, BlueprintEvent)

void ABP_FluidSim_01_C::Capture_Height_and_DF()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluidSim_01_C", "Capture Height and DF");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FluidSim_01.BP_FluidSim_01_C.Tick Custom
// (BlueprintCallable, BlueprintEvent)

void ABP_FluidSim_01_C::Tick_Custom()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluidSim_01_C", "Tick Custom");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FluidSim_01.BP_FluidSim_01_C.Initialize In Editor
// (BlueprintCallable, BlueprintEvent)

void ABP_FluidSim_01_C::Initialize_In_Editor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluidSim_01_C", "Initialize In Editor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FluidSim_01.BP_FluidSim_01_C.Get Wave Spectrum
// (BlueprintCallable, BlueprintEvent)

void ABP_FluidSim_01_C::Get_Wave_Spectrum()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluidSim_01_C", "Get Wave Spectrum");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FluidSim_01.BP_FluidSim_01_C.FluidGridDebug
// (BlueprintCallable, BlueprintEvent)

void ABP_FluidSim_01_C::FluidGridDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluidSim_01_C", "FluidGridDebug");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FluidSim_01.BP_FluidSim_01_C.Release RTs
// (BlueprintCallable, BlueprintEvent)

void ABP_FluidSim_01_C::Release_RTs()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluidSim_01_C", "Release RTs");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FluidSim_01.BP_FluidSim_01_C.ReCheckScalability
// (BlueprintCallable, BlueprintEvent)

void ABP_FluidSim_01_C::ReCheckScalability()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluidSim_01_C", "ReCheckScalability");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FluidSim_01.BP_FluidSim_01_C.Allocate RTs
// (BlueprintCallable, BlueprintEvent)

void ABP_FluidSim_01_C::Allocate_RTs()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluidSim_01_C", "Allocate RTs");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FluidSim_01.BP_FluidSim_01_C.Clear RTs
// (BlueprintCallable, BlueprintEvent)

void ABP_FluidSim_01_C::Clear_RTs()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluidSim_01_C", "Clear RTs");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FluidSim_01.BP_FluidSim_01_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FluidSim_01_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluidSim_01_C", "ReceiveTick");

	Params::BP_FluidSim_01_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FluidSim_01.BP_FluidSim_01_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_FluidSim_01_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluidSim_01_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FluidSim_01.BP_FluidSim_01_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_FluidSim_01_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluidSim_01_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FluidSim_01.BP_FluidSim_01_C.Cycle Render Targets
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTextureRenderTarget2D**          Current_Target                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FluidSim_01_C::Cycle_Render_Targets(class UTextureRenderTarget2D** Current_Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluidSim_01_C", "Cycle Render Targets");

	Params::BP_FluidSim_01_C_Cycle_Render_Targets Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Current_Target != nullptr)
		*Current_Target = Parms.Current_Target;
}


// Function BP_FluidSim_01.BP_FluidSim_01_C.Convert Force Position
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FVector&                   Force_Location                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Sine_Bob                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         UV_Location                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FluidSim_01_C::Convert_Force_Position(const struct FVector& Force_Location, float Sine_Bob, struct FVector* UV_Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluidSim_01_C", "Convert Force Position");

	Params::BP_FluidSim_01_C_Convert_Force_Position Parms{};

	Parms.Force_Location = std::move(Force_Location);
	Parms.Sine_Bob = Sine_Bob;

	UObject::ProcessEvent(Func, &Parms);

	if (UV_Location != nullptr)
		*UV_Location = std::move(Parms.UV_Location);
}


// Function BP_FluidSim_01.BP_FluidSim_01_C.SetupDisplayMIDs
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_FluidSim_01_C::SetupDisplayMIDs()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluidSim_01_C", "SetupDisplayMIDs");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FluidSim_01.BP_FluidSim_01_C.Setup SimMID and MPC Values
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_FluidSim_01_C::Setup_SimMID_and_MPC_Values()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluidSim_01_C", "Setup SimMID and MPC Values");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FluidSim_01.BP_FluidSim_01_C.GridMovement
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_FluidSim_01_C::GridMovement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluidSim_01_C", "GridMovement");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FluidSim_01.BP_FluidSim_01_C.Get Force MID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMaterialInterface*&              Parent                                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UMaterialInstanceDynamic**        Mid                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FluidSim_01_C::Get_Force_MID(class UMaterialInterface*& Parent, class UMaterialInstanceDynamic** Mid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluidSim_01_C", "Get Force MID");

	Params::BP_FluidSim_01_C_Get_Force_MID Parms{};

	Parms.Parent = Parent;

	UObject::ProcessEvent(Func, &Parms);

	Parent = Parms.Parent;

	if (Mid != nullptr)
		*Mid = Parms.Mid;
}


// Function BP_FluidSim_01.BP_FluidSim_01_C.Get LandscapeWaterInfo
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_FluidSim_01_C::Get_LandscapeWaterInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluidSim_01_C", "Get LandscapeWaterInfo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FluidSim_01.BP_FluidSim_01_C.Apply Fluid Force Impulse
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FFluidForceImpulse&        Impulse_Settings                                       (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)

void ABP_FluidSim_01_C::Apply_Fluid_Force_Impulse(const struct FFluidForceImpulse& Impulse_Settings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluidSim_01_C", "Apply Fluid Force Impulse");

	Params::BP_FluidSim_01_C_Apply_Fluid_Force_Impulse Parms{};

	Parms.Impulse_Settings = std::move(Impulse_Settings);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FluidSim_01.BP_FluidSim_01_C.Update Impulse Lifetimes
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_FluidSim_01_C::Update_Impulse_Lifetimes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluidSim_01_C", "Update Impulse Lifetimes");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FluidSim_01.BP_FluidSim_01_C.Draw Impulse Force
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCanvas*                          Canvas                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector2D&                 Canvas_Size                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FFluidForceImpulsePerInstanceData&Impulse_Settings                                       (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)

void ABP_FluidSim_01_C::Draw_Impulse_Force(class UCanvas* Canvas, const struct FVector2D& Canvas_Size, const struct FFluidForceImpulsePerInstanceData& Impulse_Settings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluidSim_01_C", "Draw Impulse Force");

	Params::BP_FluidSim_01_C_Draw_Impulse_Force Parms{};

	Parms.Canvas = Canvas;
	Parms.Canvas_Size = std::move(Canvas_Size);
	Parms.Impulse_Settings = std::move(Impulse_Settings);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FluidSim_01.BP_FluidSim_01_C.Update Dynamic Forces
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_FluidSim_01_C::Update_Dynamic_Forces()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluidSim_01_C", "Update Dynamic Forces");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FluidSim_01.BP_FluidSim_01_C.Register Dynamic Force
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FFluidForceDynamic&        Dynamic_Fluid_Force                                    (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
// class USceneComponent*                  Tracked_Component                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   WaterLevel                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FluidSim_01_C::Register_Dynamic_Force(const struct FFluidForceDynamic& Dynamic_Fluid_Force, class USceneComponent* Tracked_Component, float WaterLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluidSim_01_C", "Register Dynamic Force");

	Params::BP_FluidSim_01_C_Register_Dynamic_Force Parms{};

	Parms.Dynamic_Fluid_Force = std::move(Dynamic_Fluid_Force);
	Parms.Tracked_Component = Tracked_Component;
	Parms.WaterLevel = WaterLevel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FluidSim_01.BP_FluidSim_01_C.Remove Dynamic Force
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UActorComponent*                  Component                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FluidSim_01_C::Remove_Dynamic_Force(class UActorComponent* Component)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluidSim_01_C", "Remove Dynamic Force");

	Params::BP_FluidSim_01_C_Remove_Dynamic_Force Parms{};

	Parms.Component = Component;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FluidSim_01.BP_FluidSim_01_C.Draw Dynamic Force
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCanvas*&                         Canvas                                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D&                       Canvas_Size                                            (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FFluidForceDynamicPerInstanceData&Dynamic_Force_Settings                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)

void ABP_FluidSim_01_C::Draw_Dynamic_Force(class UCanvas*& Canvas, struct FVector2D& Canvas_Size, struct FFluidForceDynamicPerInstanceData& Dynamic_Force_Settings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluidSim_01_C", "Draw Dynamic Force");

	Params::BP_FluidSim_01_C_Draw_Dynamic_Force Parms{};

	Parms.Canvas = Canvas;
	Parms.Canvas_Size = std::move(Canvas_Size);
	Parms.Dynamic_Force_Settings = std::move(Dynamic_Force_Settings);

	UObject::ProcessEvent(Func, &Parms);

	Canvas = Parms.Canvas;
	Canvas_Size = std::move(Parms.Canvas_Size);
	Dynamic_Force_Settings = std::move(Parms.Dynamic_Force_Settings);
}


// Function BP_FluidSim_01.BP_FluidSim_01_C.GetLocalPawn
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class APawn**                           Pawn                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FluidSim_01_C::GetLocalPawn(class APawn** Pawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluidSim_01_C", "GetLocalPawn");

	Params::BP_FluidSim_01_C_GetLocalPawn Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Pawn != nullptr)
		*Pawn = Parms.Pawn;
}


// Function BP_FluidSim_01.BP_FluidSim_01_C.Set Waterbody MID Params
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_FluidSim_01_C::Set_Waterbody_MID_Params()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluidSim_01_C", "Set Waterbody MID Params");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FluidSim_01.BP_FluidSim_01_C.Validate RTs
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   RTs_All_Valid                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_FluidSim_01_C::Validate_RTs(bool* RTs_All_Valid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluidSim_01_C", "Validate RTs");

	Params::BP_FluidSim_01_C_Validate_RTs Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RTs_All_Valid != nullptr)
		*RTs_All_Valid = Parms.RTs_All_Valid;
}


// Function BP_FluidSim_01.BP_FluidSim_01_C.GetPlayerPawnForces
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_FluidSim_01_C::GetPlayerPawnForces()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluidSim_01_C", "GetPlayerPawnForces");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FluidSim_01.BP_FluidSim_01_C.Register Projectile Force
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FFluidForceDynamic&        Dynamic_Fluid_Force                                    (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
// class USceneComponent*                  Tracked_Component                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FluidSim_01_C::Register_Projectile_Force(const struct FFluidForceDynamic& Dynamic_Fluid_Force, class USceneComponent* Tracked_Component)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluidSim_01_C", "Register Projectile Force");

	Params::BP_FluidSim_01_C_Register_Projectile_Force Parms{};

	Parms.Dynamic_Fluid_Force = std::move(Dynamic_Fluid_Force);
	Parms.Tracked_Component = Tracked_Component;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FluidSim_01.BP_FluidSim_01_C.Remove Projectile Force
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UActorComponent*                  Component                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FluidSim_01_C::Remove_Projectile_Force(class UActorComponent* Component)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluidSim_01_C", "Remove Projectile Force");

	Params::BP_FluidSim_01_C_Remove_Projectile_Force Parms{};

	Parms.Component = Component;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FluidSim_01.BP_FluidSim_01_C.Clear Sim from Waterbody MIDs
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_FluidSim_01_C::Clear_Sim_from_Waterbody_MIDs()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluidSim_01_C", "Clear Sim from Waterbody MIDs");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FluidSim_01.BP_FluidSim_01_C.Get Frames Since Last Active Force
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_FluidSim_01_C::Get_Frames_Since_Last_Active_Force()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluidSim_01_C", "Get Frames Since Last Active Force");

	UObject::ProcessEvent(Func, nullptr);
}

}

