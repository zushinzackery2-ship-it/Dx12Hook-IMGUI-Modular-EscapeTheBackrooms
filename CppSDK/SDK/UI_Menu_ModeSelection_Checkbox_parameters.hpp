#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_Menu_ModeSelection_Checkbox

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "InputCore_structs.hpp"


namespace SDK::Params
{

// Function UI_Menu_ModeSelection_Checkbox.UI_Menu_ModeSelection_Checkbox_C.ExecuteUbergraph_UI_Menu_ModeSelection_Checkbox
// 0x0018 (0x0018 - 0x0000)
struct UI_Menu_ModeSelection_Checkbox_C_ExecuteUbergraph_UI_Menu_ModeSelection_Checkbox final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsHovered;                            // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsEnabled;                            // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsFocused;                            // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Menu_ModeSelection_Checkbox_C_ExecuteUbergraph_UI_Menu_ModeSelection_Checkbox) == 0x000008, "Wrong alignment on UI_Menu_ModeSelection_Checkbox_C_ExecuteUbergraph_UI_Menu_ModeSelection_Checkbox");
static_assert(sizeof(UI_Menu_ModeSelection_Checkbox_C_ExecuteUbergraph_UI_Menu_ModeSelection_Checkbox) == 0x000018, "Wrong size on UI_Menu_ModeSelection_Checkbox_C_ExecuteUbergraph_UI_Menu_ModeSelection_Checkbox");
static_assert(offsetof(UI_Menu_ModeSelection_Checkbox_C_ExecuteUbergraph_UI_Menu_ModeSelection_Checkbox, EntryPoint) == 0x000000, "Member 'UI_Menu_ModeSelection_Checkbox_C_ExecuteUbergraph_UI_Menu_ModeSelection_Checkbox::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_Menu_ModeSelection_Checkbox_C_ExecuteUbergraph_UI_Menu_ModeSelection_Checkbox, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'UI_Menu_ModeSelection_Checkbox_C_ExecuteUbergraph_UI_Menu_ModeSelection_Checkbox::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Menu_ModeSelection_Checkbox_C_ExecuteUbergraph_UI_Menu_ModeSelection_Checkbox, Temp_bool_Variable) == 0x000010, "Member 'UI_Menu_ModeSelection_Checkbox_C_ExecuteUbergraph_UI_Menu_ModeSelection_Checkbox::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_Menu_ModeSelection_Checkbox_C_ExecuteUbergraph_UI_Menu_ModeSelection_Checkbox, Temp_byte_Variable) == 0x000011, "Member 'UI_Menu_ModeSelection_Checkbox_C_ExecuteUbergraph_UI_Menu_ModeSelection_Checkbox::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_Menu_ModeSelection_Checkbox_C_ExecuteUbergraph_UI_Menu_ModeSelection_Checkbox, Temp_byte_Variable_1) == 0x000012, "Member 'UI_Menu_ModeSelection_Checkbox_C_ExecuteUbergraph_UI_Menu_ModeSelection_Checkbox::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Menu_ModeSelection_Checkbox_C_ExecuteUbergraph_UI_Menu_ModeSelection_Checkbox, K2Node_Event_IsHovered) == 0x000013, "Member 'UI_Menu_ModeSelection_Checkbox_C_ExecuteUbergraph_UI_Menu_ModeSelection_Checkbox::K2Node_Event_IsHovered' has a wrong offset!");
static_assert(offsetof(UI_Menu_ModeSelection_Checkbox_C_ExecuteUbergraph_UI_Menu_ModeSelection_Checkbox, K2Node_Event_IsEnabled) == 0x000014, "Member 'UI_Menu_ModeSelection_Checkbox_C_ExecuteUbergraph_UI_Menu_ModeSelection_Checkbox::K2Node_Event_IsEnabled' has a wrong offset!");
static_assert(offsetof(UI_Menu_ModeSelection_Checkbox_C_ExecuteUbergraph_UI_Menu_ModeSelection_Checkbox, K2Node_Event_IsFocused) == 0x000015, "Member 'UI_Menu_ModeSelection_Checkbox_C_ExecuteUbergraph_UI_Menu_ModeSelection_Checkbox::K2Node_Event_IsFocused' has a wrong offset!");
static_assert(offsetof(UI_Menu_ModeSelection_Checkbox_C_ExecuteUbergraph_UI_Menu_ModeSelection_Checkbox, K2Node_Select_Default) == 0x000016, "Member 'UI_Menu_ModeSelection_Checkbox_C_ExecuteUbergraph_UI_Menu_ModeSelection_Checkbox::K2Node_Select_Default' has a wrong offset!");

// Function UI_Menu_ModeSelection_Checkbox.UI_Menu_ModeSelection_Checkbox_C.ToggleFocus
// 0x0001 (0x0001 - 0x0000)
struct UI_Menu_ModeSelection_Checkbox_C_ToggleFocus final
{
public:
	bool                                          IsFocused;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_Menu_ModeSelection_Checkbox_C_ToggleFocus) == 0x000001, "Wrong alignment on UI_Menu_ModeSelection_Checkbox_C_ToggleFocus");
static_assert(sizeof(UI_Menu_ModeSelection_Checkbox_C_ToggleFocus) == 0x000001, "Wrong size on UI_Menu_ModeSelection_Checkbox_C_ToggleFocus");
static_assert(offsetof(UI_Menu_ModeSelection_Checkbox_C_ToggleFocus, IsFocused) == 0x000000, "Member 'UI_Menu_ModeSelection_Checkbox_C_ToggleFocus::IsFocused' has a wrong offset!");

// Function UI_Menu_ModeSelection_Checkbox.UI_Menu_ModeSelection_Checkbox_C.ToggleEnabled
// 0x0001 (0x0001 - 0x0000)
struct UI_Menu_ModeSelection_Checkbox_C_ToggleEnabled final
{
public:
	bool                                          IsEnabled;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_Menu_ModeSelection_Checkbox_C_ToggleEnabled) == 0x000001, "Wrong alignment on UI_Menu_ModeSelection_Checkbox_C_ToggleEnabled");
static_assert(sizeof(UI_Menu_ModeSelection_Checkbox_C_ToggleEnabled) == 0x000001, "Wrong size on UI_Menu_ModeSelection_Checkbox_C_ToggleEnabled");
static_assert(offsetof(UI_Menu_ModeSelection_Checkbox_C_ToggleEnabled, IsEnabled) == 0x000000, "Member 'UI_Menu_ModeSelection_Checkbox_C_ToggleEnabled::IsEnabled' has a wrong offset!");

// Function UI_Menu_ModeSelection_Checkbox.UI_Menu_ModeSelection_Checkbox_C.ToggleHover
// 0x0001 (0x0001 - 0x0000)
struct UI_Menu_ModeSelection_Checkbox_C_ToggleHover final
{
public:
	bool                                          IsHovered_0;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_Menu_ModeSelection_Checkbox_C_ToggleHover) == 0x000001, "Wrong alignment on UI_Menu_ModeSelection_Checkbox_C_ToggleHover");
static_assert(sizeof(UI_Menu_ModeSelection_Checkbox_C_ToggleHover) == 0x000001, "Wrong size on UI_Menu_ModeSelection_Checkbox_C_ToggleHover");
static_assert(offsetof(UI_Menu_ModeSelection_Checkbox_C_ToggleHover, IsHovered_0) == 0x000000, "Member 'UI_Menu_ModeSelection_Checkbox_C_ToggleHover::IsHovered_0' has a wrong offset!");

// Function UI_Menu_ModeSelection_Checkbox.UI_Menu_ModeSelection_Checkbox_C.OnKeyDown
// 0x0200 (0x0200 - 0x0000)
struct UI_Menu_ModeSelection_Checkbox_C_OnKeyDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FKeyEvent                              InKeyEvent;                                        // 0x0038(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FEventReply                            ReturnValue;                                       // 0x0070(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0128(0x00B8)()
	struct FKey                                   CallFunc_GetKey_ReturnValue;                       // 0x01E0(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsChecked_ReturnValue;                    // 0x01F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_Menu_ModeSelection_Checkbox_C_OnKeyDown) == 0x000008, "Wrong alignment on UI_Menu_ModeSelection_Checkbox_C_OnKeyDown");
static_assert(sizeof(UI_Menu_ModeSelection_Checkbox_C_OnKeyDown) == 0x000200, "Wrong size on UI_Menu_ModeSelection_Checkbox_C_OnKeyDown");
static_assert(offsetof(UI_Menu_ModeSelection_Checkbox_C_OnKeyDown, MyGeometry) == 0x000000, "Member 'UI_Menu_ModeSelection_Checkbox_C_OnKeyDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(UI_Menu_ModeSelection_Checkbox_C_OnKeyDown, InKeyEvent) == 0x000038, "Member 'UI_Menu_ModeSelection_Checkbox_C_OnKeyDown::InKeyEvent' has a wrong offset!");
static_assert(offsetof(UI_Menu_ModeSelection_Checkbox_C_OnKeyDown, ReturnValue) == 0x000070, "Member 'UI_Menu_ModeSelection_Checkbox_C_OnKeyDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Menu_ModeSelection_Checkbox_C_OnKeyDown, CallFunc_Handled_ReturnValue) == 0x000128, "Member 'UI_Menu_ModeSelection_Checkbox_C_OnKeyDown::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Menu_ModeSelection_Checkbox_C_OnKeyDown, CallFunc_GetKey_ReturnValue) == 0x0001E0, "Member 'UI_Menu_ModeSelection_Checkbox_C_OnKeyDown::CallFunc_GetKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Menu_ModeSelection_Checkbox_C_OnKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x0001F8, "Member 'UI_Menu_ModeSelection_Checkbox_C_OnKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Menu_ModeSelection_Checkbox_C_OnKeyDown, CallFunc_IsChecked_ReturnValue) == 0x0001F9, "Member 'UI_Menu_ModeSelection_Checkbox_C_OnKeyDown::CallFunc_IsChecked_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Menu_ModeSelection_Checkbox_C_OnKeyDown, CallFunc_Not_PreBool_ReturnValue) == 0x0001FA, "Member 'UI_Menu_ModeSelection_Checkbox_C_OnKeyDown::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

}

