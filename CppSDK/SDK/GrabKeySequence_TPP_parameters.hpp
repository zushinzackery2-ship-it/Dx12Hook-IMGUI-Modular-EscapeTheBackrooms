#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GrabKeySequence_TPP

#include "Basic.hpp"


namespace SDK::Params
{

// Function GrabKeySequence_TPP.SequenceDirector_C.ExecuteUbergraph_SequenceDirector
// 0x00A0 (0x00A0 - 0x0000)
struct SequenceDirector_C_ExecuteUbergraph_SequenceDirector final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 K2Node_CustomEvent_SkeletalMeshComponent0;         // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_4;                   // 0x002C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_3;                   // 0x0034(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_1;            // 0x003C(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_2;            // 0x004C(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_2;                   // 0x005C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_1;                   // 0x0064(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_3;            // 0x006C(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_4;            // 0x007C(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName;                     // 0x008C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x0094(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector) == 0x000008, "Wrong alignment on SequenceDirector_C_ExecuteUbergraph_SequenceDirector");
static_assert(sizeof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector) == 0x0000A0, "Wrong size on SequenceDirector_C_ExecuteUbergraph_SequenceDirector");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, EntryPoint) == 0x000000, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::EntryPoint' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, K2Node_CustomEvent_SkeletalMeshComponent0) == 0x000008, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::K2Node_CustomEvent_SkeletalMeshComponent0' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue) == 0x000010, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, K2Node_CustomEvent_NotifyName_4) == 0x00002C, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::K2Node_CustomEvent_NotifyName_4' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, K2Node_CustomEvent_NotifyName_3) == 0x000034, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::K2Node_CustomEvent_NotifyName_3' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, K2Node_CreateDelegate_OutputDelegate_1) == 0x00003C, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, K2Node_CreateDelegate_OutputDelegate_2) == 0x00004C, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, K2Node_CustomEvent_NotifyName_2) == 0x00005C, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::K2Node_CustomEvent_NotifyName_2' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, K2Node_CustomEvent_NotifyName_1) == 0x000064, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::K2Node_CustomEvent_NotifyName_1' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, K2Node_CreateDelegate_OutputDelegate_3) == 0x00006C, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, K2Node_CreateDelegate_OutputDelegate_4) == 0x00007C, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, K2Node_CustomEvent_NotifyName) == 0x00008C, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::K2Node_CustomEvent_NotifyName' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, Temp_name_Variable) == 0x000094, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::Temp_name_Variable' has a wrong offset!");

// Function GrabKeySequence_TPP.SequenceDirector_C.SkeletalMeshComponent0_Event_0
// 0x0008 (0x0008 - 0x0000)
struct SequenceDirector_C_SkeletalMeshComponent0_Event_0 final
{
public:
	class USkeletalMeshComponent*                 SkeletalMeshComponent0;                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SequenceDirector_C_SkeletalMeshComponent0_Event_0) == 0x000008, "Wrong alignment on SequenceDirector_C_SkeletalMeshComponent0_Event_0");
static_assert(sizeof(SequenceDirector_C_SkeletalMeshComponent0_Event_0) == 0x000008, "Wrong size on SequenceDirector_C_SkeletalMeshComponent0_Event_0");
static_assert(offsetof(SequenceDirector_C_SkeletalMeshComponent0_Event_0, SkeletalMeshComponent0) == 0x000000, "Member 'SequenceDirector_C_SkeletalMeshComponent0_Event_0::SkeletalMeshComponent0' has a wrong offset!");

// Function GrabKeySequence_TPP.SequenceDirector_C.OnCompleted_9BB4ADF046723EC1F8B0AAAEB1953204
// 0x0008 (0x0008 - 0x0000)
struct SequenceDirector_C_OnCompleted_9BB4ADF046723EC1F8B0AAAEB1953204 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SequenceDirector_C_OnCompleted_9BB4ADF046723EC1F8B0AAAEB1953204) == 0x000004, "Wrong alignment on SequenceDirector_C_OnCompleted_9BB4ADF046723EC1F8B0AAAEB1953204");
static_assert(sizeof(SequenceDirector_C_OnCompleted_9BB4ADF046723EC1F8B0AAAEB1953204) == 0x000008, "Wrong size on SequenceDirector_C_OnCompleted_9BB4ADF046723EC1F8B0AAAEB1953204");
static_assert(offsetof(SequenceDirector_C_OnCompleted_9BB4ADF046723EC1F8B0AAAEB1953204, NotifyName) == 0x000000, "Member 'SequenceDirector_C_OnCompleted_9BB4ADF046723EC1F8B0AAAEB1953204::NotifyName' has a wrong offset!");

// Function GrabKeySequence_TPP.SequenceDirector_C.OnBlendOut_9BB4ADF046723EC1F8B0AAAEB1953204
// 0x0008 (0x0008 - 0x0000)
struct SequenceDirector_C_OnBlendOut_9BB4ADF046723EC1F8B0AAAEB1953204 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SequenceDirector_C_OnBlendOut_9BB4ADF046723EC1F8B0AAAEB1953204) == 0x000004, "Wrong alignment on SequenceDirector_C_OnBlendOut_9BB4ADF046723EC1F8B0AAAEB1953204");
static_assert(sizeof(SequenceDirector_C_OnBlendOut_9BB4ADF046723EC1F8B0AAAEB1953204) == 0x000008, "Wrong size on SequenceDirector_C_OnBlendOut_9BB4ADF046723EC1F8B0AAAEB1953204");
static_assert(offsetof(SequenceDirector_C_OnBlendOut_9BB4ADF046723EC1F8B0AAAEB1953204, NotifyName) == 0x000000, "Member 'SequenceDirector_C_OnBlendOut_9BB4ADF046723EC1F8B0AAAEB1953204::NotifyName' has a wrong offset!");

// Function GrabKeySequence_TPP.SequenceDirector_C.OnInterrupted_9BB4ADF046723EC1F8B0AAAEB1953204
// 0x0008 (0x0008 - 0x0000)
struct SequenceDirector_C_OnInterrupted_9BB4ADF046723EC1F8B0AAAEB1953204 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SequenceDirector_C_OnInterrupted_9BB4ADF046723EC1F8B0AAAEB1953204) == 0x000004, "Wrong alignment on SequenceDirector_C_OnInterrupted_9BB4ADF046723EC1F8B0AAAEB1953204");
static_assert(sizeof(SequenceDirector_C_OnInterrupted_9BB4ADF046723EC1F8B0AAAEB1953204) == 0x000008, "Wrong size on SequenceDirector_C_OnInterrupted_9BB4ADF046723EC1F8B0AAAEB1953204");
static_assert(offsetof(SequenceDirector_C_OnInterrupted_9BB4ADF046723EC1F8B0AAAEB1953204, NotifyName) == 0x000000, "Member 'SequenceDirector_C_OnInterrupted_9BB4ADF046723EC1F8B0AAAEB1953204::NotifyName' has a wrong offset!");

// Function GrabKeySequence_TPP.SequenceDirector_C.OnNotifyBegin_9BB4ADF046723EC1F8B0AAAEB1953204
// 0x0008 (0x0008 - 0x0000)
struct SequenceDirector_C_OnNotifyBegin_9BB4ADF046723EC1F8B0AAAEB1953204 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SequenceDirector_C_OnNotifyBegin_9BB4ADF046723EC1F8B0AAAEB1953204) == 0x000004, "Wrong alignment on SequenceDirector_C_OnNotifyBegin_9BB4ADF046723EC1F8B0AAAEB1953204");
static_assert(sizeof(SequenceDirector_C_OnNotifyBegin_9BB4ADF046723EC1F8B0AAAEB1953204) == 0x000008, "Wrong size on SequenceDirector_C_OnNotifyBegin_9BB4ADF046723EC1F8B0AAAEB1953204");
static_assert(offsetof(SequenceDirector_C_OnNotifyBegin_9BB4ADF046723EC1F8B0AAAEB1953204, NotifyName) == 0x000000, "Member 'SequenceDirector_C_OnNotifyBegin_9BB4ADF046723EC1F8B0AAAEB1953204::NotifyName' has a wrong offset!");

// Function GrabKeySequence_TPP.SequenceDirector_C.OnNotifyEnd_9BB4ADF046723EC1F8B0AAAEB1953204
// 0x0008 (0x0008 - 0x0000)
struct SequenceDirector_C_OnNotifyEnd_9BB4ADF046723EC1F8B0AAAEB1953204 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SequenceDirector_C_OnNotifyEnd_9BB4ADF046723EC1F8B0AAAEB1953204) == 0x000004, "Wrong alignment on SequenceDirector_C_OnNotifyEnd_9BB4ADF046723EC1F8B0AAAEB1953204");
static_assert(sizeof(SequenceDirector_C_OnNotifyEnd_9BB4ADF046723EC1F8B0AAAEB1953204) == 0x000008, "Wrong size on SequenceDirector_C_OnNotifyEnd_9BB4ADF046723EC1F8B0AAAEB1953204");
static_assert(offsetof(SequenceDirector_C_OnNotifyEnd_9BB4ADF046723EC1F8B0AAAEB1953204, NotifyName) == 0x000000, "Member 'SequenceDirector_C_OnNotifyEnd_9BB4ADF046723EC1F8B0AAAEB1953204::NotifyName' has a wrong offset!");

// Function GrabKeySequence_TPP.SequenceDirector_C.SequenceEvent__ENTRYPOINTSequenceDirector_0
// 0x0008 (0x0008 - 0x0000)
struct SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_0 final
{
public:
	class USkeletalMeshComponent*                 SkeletalMeshComponent0;                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_0) == 0x000008, "Wrong alignment on SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_0");
static_assert(sizeof(SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_0) == 0x000008, "Wrong size on SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_0");
static_assert(offsetof(SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_0, SkeletalMeshComponent0) == 0x000000, "Member 'SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_0::SkeletalMeshComponent0' has a wrong offset!");

}

