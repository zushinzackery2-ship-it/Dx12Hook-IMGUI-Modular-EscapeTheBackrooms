#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EasyVoiceChat

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "OnlineSubsystemUtils_classes.hpp"


namespace SDK
{

// Class EasyVoiceChat.VoiceFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class UVoiceFunctionLibrary final : public UBlueprintFunctionLibrary
{
public:
	static TArray<class APawn*> GetAllPawnsFromState(class UObject* WorldContextObject, class APawn* CurrentPlayer, float Distance);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"VoiceFunctionLibrary">();
	}
	static class UVoiceFunctionLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVoiceFunctionLibrary>();
	}
};
static_assert(alignof(UVoiceFunctionLibrary) == 0x000008, "Wrong alignment on UVoiceFunctionLibrary");
static_assert(sizeof(UVoiceFunctionLibrary) == 0x000028, "Wrong size on UVoiceFunctionLibrary");

// Class EasyVoiceChat.VoipAudioComponent
// 0x0020 (0x0740 - 0x0720)
class UVoipAudioComponent final : public UVoipListenerSynthComponent
{
public:
	uint8                                         Pad_720[0x20];                                     // 0x0720(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void PlayVoiceData(const TArray<uint8>& CompressedVoiceData);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"VoipAudioComponent">();
	}
	static class UVoipAudioComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVoipAudioComponent>();
	}
};
static_assert(alignof(UVoipAudioComponent) == 0x000010, "Wrong alignment on UVoipAudioComponent");
static_assert(sizeof(UVoipAudioComponent) == 0x000740, "Wrong size on UVoipAudioComponent");

// Class EasyVoiceChat.VoipManagerComponent
// 0x00D8 (0x0188 - 0x00B0)
class UVoipManagerComponent final : public UActorComponent
{
public:
	TMulticastInlineDelegate<void(const TArray<uint8>& VoiceData, const float MicLevel)> VoiceGenerated; // 0x00B0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              PlayerTalking;                                     // 0x00C0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              PlayerStopTalking;                                 // 0x00D0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_E0[0x8C];                                      // 0x00E0(0x008C)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         StopTalkingThreshold;                              // 0x016C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bAutoSetConsoleVariables;                          // 0x0170(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_171[0x3];                                      // 0x0171(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SilenceDetectionThreshold;                         // 0x0174(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         NoiseGateThreshold;                                // 0x0178(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         VoiceBufferDelay;                                  // 0x017C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_180[0x8];                                      // 0x0180(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	bool ChangeAudioCaptureDevice(const class FString& NewDeviceName);
	TArray<class FString> GetCaptureDevices();
	bool InitVoice(class AController* Controller);
	void OnPlayerStartTalking();
	void OnPlayerStopTalking();
	void OnVoiceGeneratedBP(const TArray<uint8>& VoiceBuffer, const float MicLevel);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"VoipManagerComponent">();
	}
	static class UVoipManagerComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVoipManagerComponent>();
	}
};
static_assert(alignof(UVoipManagerComponent) == 0x000008, "Wrong alignment on UVoipManagerComponent");
static_assert(sizeof(UVoipManagerComponent) == 0x000188, "Wrong size on UVoipManagerComponent");
static_assert(offsetof(UVoipManagerComponent, VoiceGenerated) == 0x0000B0, "Member 'UVoipManagerComponent::VoiceGenerated' has a wrong offset!");
static_assert(offsetof(UVoipManagerComponent, PlayerTalking) == 0x0000C0, "Member 'UVoipManagerComponent::PlayerTalking' has a wrong offset!");
static_assert(offsetof(UVoipManagerComponent, PlayerStopTalking) == 0x0000D0, "Member 'UVoipManagerComponent::PlayerStopTalking' has a wrong offset!");
static_assert(offsetof(UVoipManagerComponent, StopTalkingThreshold) == 0x00016C, "Member 'UVoipManagerComponent::StopTalkingThreshold' has a wrong offset!");
static_assert(offsetof(UVoipManagerComponent, bAutoSetConsoleVariables) == 0x000170, "Member 'UVoipManagerComponent::bAutoSetConsoleVariables' has a wrong offset!");
static_assert(offsetof(UVoipManagerComponent, SilenceDetectionThreshold) == 0x000174, "Member 'UVoipManagerComponent::SilenceDetectionThreshold' has a wrong offset!");
static_assert(offsetof(UVoipManagerComponent, NoiseGateThreshold) == 0x000178, "Member 'UVoipManagerComponent::NoiseGateThreshold' has a wrong offset!");
static_assert(offsetof(UVoipManagerComponent, VoiceBufferDelay) == 0x00017C, "Member 'UVoipManagerComponent::VoiceBufferDelay' has a wrong offset!");

}

